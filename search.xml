<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>帆船生产问题</title>
      <link href="/posts/f53dcb2.html"/>
      <url>/posts/f53dcb2.html</url>
      
        <content type="html"><![CDATA[<h1 id="帆船生产问题"><a href="#帆船生产问题" class="headerlink" title="帆船生产问题"></a>帆船生产问题</h1><h2 id="题干"><a href="#题干" class="headerlink" title="题干"></a>题干</h2><p><img src="https://bu.dusays.com/2024/08/06/66b1ce1494597.png" alt="帆船问题"></p><h2 id="解析"><a href="#解析" class="headerlink" title="解析"></a>解析</h2><p>该问题就是典型的<strong>整数规划</strong>问题</p><h3 id="目标函数"><a href="#目标函数" class="headerlink" title="目标函数"></a>目标函数</h3><script type="math/tex; mode=display">Min Z = \sum_{i = 1}^{4}[400RP(i) + 450OP(i) + 20INV(i)]</script><h3 id="约束条件"><a href="#约束条件" class="headerlink" title="约束条件"></a>约束条件</h3><script type="math/tex; mode=display">\begin{split}& RP(i) < 40,i = 1, 2, 3, 4 \\ & INV(i) = INV(i - 1) +  RP(i) + OP(i) - DEM(i), i = 1, 2, 3, 4 \\& INV(0) = 10\end{split}</script><h4 id="Python求解"><a href="#Python求解" class="headerlink" title="Python求解"></a>Python求解</h4><div class="tabs" id="test1"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test1-1">Python代码</button><button type="button" class="tab " data-href="test1-2">运行结果</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pulp</span><br><span class="line"></span><br><span class="line"><span class="comment"># 需求</span></span><br><span class="line">DEM = [<span class="number">40</span>, <span class="number">60</span>, <span class="number">75</span>, <span class="number">25</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建线性规划问题</span></span><br><span class="line">model = pulp.LpProblem(<span class="string">&quot;Minimize_Cost&quot;</span>, pulp.LpMinimize)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建决策变量</span></span><br><span class="line">RP = [pulp.LpVariable(<span class="string">f&#x27;RP_<span class="subst">&#123;i&#125;</span>&#x27;</span>, lowBound=<span class="number">0</span>, upBound=<span class="number">40</span>, cat=<span class="string">&#x27;Integer&#x27;</span>) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4</span>)]</span><br><span class="line">OP = [pulp.LpVariable(<span class="string">f&#x27;OP_<span class="subst">&#123;i&#125;</span>&#x27;</span>, lowBound=<span class="number">0</span>, cat=<span class="string">&#x27;Integer&#x27;</span>) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4</span>)]</span><br><span class="line">INV = [pulp.LpVariable(<span class="string">f&#x27;INV_<span class="subst">&#123;i&#125;</span>&#x27;</span>, lowBound=<span class="number">0</span>, cat=<span class="string">&#x27;Integer&#x27;</span>) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>)]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 目标函数</span></span><br><span class="line">model += pulp.lpSum([<span class="number">400</span> * RP[i] + <span class="number">450</span> * OP[i] + <span class="number">20</span> * INV[i + <span class="number">1</span>] <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4</span>)]), <span class="string">&quot;Total_Cost&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 约束2: INV(j) = RP(j) + OP(j) - DEM(j) + INV(j - 1)</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">5</span>):</span><br><span class="line">    model += RP[i - <span class="number">1</span>] + OP[i - <span class="number">1</span>] - DEM[i - <span class="number">1</span>] + INV[i - <span class="number">1</span>] - INV[i] == <span class="number">0</span>, <span class="string">f&quot;Constraint_INV_<span class="subst">&#123;i&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 约束3: INV[0] &gt;= 10</span></span><br><span class="line">model += INV[<span class="number">0</span>] == <span class="number">10</span>, <span class="string">&quot;Constraint_INV_0&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 求解模型</span></span><br><span class="line">model.solve()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出结果</span></span><br><span class="line"><span class="keyword">if</span> model.status == pulp.LpStatusOptimal:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;min z = <span class="subst">&#123;pulp.value(model.objective)&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;RP[<span class="subst">&#123;i&#125;</span>]: <span class="subst">&#123;RP[i].varValue&#125;</span>&quot;</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;OP[<span class="subst">&#123;i&#125;</span>]: <span class="subst">&#123;OP[i].varValue&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;INV[<span class="subst">&#123;i&#125;</span>]: <span class="subst">&#123;INV[i].varValue&#125;</span>&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;优化失败:&quot;</span>, pulp.LpStatus[model.status])</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test1-2"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">min z = 78450.0</span><br><span class="line">RP[0]: 40.0</span><br><span class="line">OP[0]: 0.0</span><br><span class="line">RP[1]: 40.0</span><br><span class="line">OP[1]: 10.0</span><br><span class="line">RP[2]: 40.0</span><br><span class="line">OP[2]: 35.0</span><br><span class="line">RP[3]: 25.0</span><br><span class="line">OP[3]: 0.0</span><br><span class="line">INV[0]: 10.0</span><br><span class="line">INV[1]: 10.0</span><br><span class="line">INV[2]: 0.0</span><br><span class="line">INV[3]: 0.0</span><br><span class="line">INV[4]: 0.0</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div>]]></content>
      
      
      <categories>
          
          <category> 数学建模 </category>
          
          <category> 整数规划 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>聘用方案问题</title>
      <link href="/posts/a41f2f02.html"/>
      <url>/posts/a41f2f02.html</url>
      
        <content type="html"><![CDATA[<h1 id="聘用方案问题"><a href="#聘用方案问题" class="headerlink" title="聘用方案问题"></a>聘用方案问题</h1><p><img src="https://bu.dusays.com/2024/08/06/66b18282848d0.png" alt="聘用方案"></p><h2 id="解析"><a href="#解析" class="headerlink" title="解析"></a>解析</h2><p>因为聘用人数必须是整数，所以这是一道整数规划的题目，plup 库无法解决整数规划，可以用 scipy 库求解</p><p>设该系统已经进入稳定状态，不处于刚开始的几周</p><h3 id="目标函数"><a href="#目标函数" class="headerlink" title="目标函数"></a>目标函数</h3><script type="math/tex; mode=display">min z = x_1 + x_2 + x_3 + x_4 + x_5 + x_6 + x_7</script><h3 id="约束条件"><a href="#约束条件" class="headerlink" title="约束条件"></a>约束条件</h3><script type="math/tex; mode=display">\begin{split}& x_1 + x_4 + x_5 + x_6 + x_7 \ge 50 \\& x_1 + x_2 + x_5 + x_6 + x_7 \ge 50 \\& x_1 + x_2 + x_3 + x_6 + x_7 \ge 50 \\& x_1 + x_2 + x_3 + x_4 + x_7 \ge 50 \\& x_1 + x_2 + x_3 + x_4 + x_5 \ge 80 \\& x_2 + x_3 + x_4 + x_5 + x_6 \ge 90 \\& x_3 + x_4 + x_5 + x_6 + x_7 \ge 90 \\& x_i \in Z^+\end{split}</script><div class="tabs" id="text1"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="text1-1">Python代码</button><button type="button" class="tab " data-href="text1-2">运行结果</button></ul><div class="tab-contents"><div class="tab-item-content active" id="text1-1"><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pulp</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建一个线性规划问题</span></span><br><span class="line">model = pulp.LpProblem(<span class="string">&quot;Minimize_Z&quot;</span>, pulp.LpMinimize)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建决策变量</span></span><br><span class="line">x1 = pulp.LpVariable(<span class="string">&#x27;x1&#x27;</span>, lowBound=<span class="number">0</span>, cat=<span class="string">&#x27;Integer&#x27;</span>) <span class="comment"># cat 有两个参数 Integer 和 Continuous 分别代表整数规划和线性规划</span></span><br><span class="line">x2 = pulp.LpVariable(<span class="string">&#x27;x2&#x27;</span>, lowBound=<span class="number">0</span>, cat=<span class="string">&#x27;Integer&#x27;</span>)</span><br><span class="line">x3 = pulp.LpVariable(<span class="string">&#x27;x3&#x27;</span>, lowBound=<span class="number">0</span>, cat=<span class="string">&#x27;Integer&#x27;</span>)</span><br><span class="line">x4 = pulp.LpVariable(<span class="string">&#x27;x4&#x27;</span>, lowBound=<span class="number">0</span>, cat=<span class="string">&#x27;Integer&#x27;</span>)</span><br><span class="line">x5 = pulp.LpVariable(<span class="string">&#x27;x5&#x27;</span>, lowBound=<span class="number">0</span>, cat=<span class="string">&#x27;Integer&#x27;</span>)</span><br><span class="line">x6 = pulp.LpVariable(<span class="string">&#x27;x6&#x27;</span>, lowBound=<span class="number">0</span>, cat=<span class="string">&#x27;Integer&#x27;</span>)</span><br><span class="line">x7 = pulp.LpVariable(<span class="string">&#x27;x7&#x27;</span>, lowBound=<span class="number">0</span>, cat=<span class="string">&#x27;Integer&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 目标函数</span></span><br><span class="line">model += x1 + x2 + x3 + x4 + x5 + x6 + x7, <span class="string">&quot;Objective&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加约束条件</span></span><br><span class="line">model += x1 + x4 + x5 + x6 + x7 &gt;= <span class="number">50</span>, <span class="string">&quot;Constraint_1&quot;</span></span><br><span class="line">model += x1 + x2 + x5 + x6 + x7 &gt;= <span class="number">50</span>, <span class="string">&quot;Constraint_2&quot;</span></span><br><span class="line">model += x1 + x2 + x3 + x6 + x7 &gt;= <span class="number">50</span>, <span class="string">&quot;Constraint_3&quot;</span></span><br><span class="line">model += x1 + x2 + x3 + x4 + x7 &gt;= <span class="number">50</span>, <span class="string">&quot;Constraint_4&quot;</span></span><br><span class="line">model += x1 + x2 + x3 + x4 + x5 &gt;= <span class="number">80</span>, <span class="string">&quot;Constraint_5&quot;</span></span><br><span class="line">model += x2 + x3 + x4 + x5 + x6 &gt;= <span class="number">90</span>, <span class="string">&quot;Constraint_6&quot;</span></span><br><span class="line">model += x3 + x4 + x5 + x6 + x7 &gt;= <span class="number">80</span>, <span class="string">&quot;Constraint_7&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 求解模型</span></span><br><span class="line">model.solve()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出结果</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;min z = &quot;</span>, pulp.value(model.objective))</span><br><span class="line"><span class="keyword">for</span> variable <span class="keyword">in</span> model.variables():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;variable.name&#125;</span>= <span class="subst">&#123;variable.varValue&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="text1-2"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">min z =  90.0</span><br><span class="line">x1= 0.0</span><br><span class="line">x2= 10.0</span><br><span class="line">x3= 30.0</span><br><span class="line">x4= 10.0</span><br><span class="line">x5= 30.0</span><br><span class="line">x6= 10.0</span><br><span class="line">x7= 0.0</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div>]]></content>
      
      
      <categories>
          
          <category> 数学建模 </category>
          
          <category> 整数规划 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学建模 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>选址问题</title>
      <link href="/posts/b425967a.html"/>
      <url>/posts/b425967a.html</url>
      
        <content type="html"><![CDATA[<h1 id="选址问题"><a href="#选址问题" class="headerlink" title="选址问题"></a>选址问题</h1><h2 id="题干"><a href="#题干" class="headerlink" title="题干"></a>题干</h2><p><img src="https://bu.dusays.com/2024/08/05/66b0454f6b0cc.png" alt="选址问题"></p><h2 id="解析"><a href="#解析" class="headerlink" title="解析"></a>解析</h2><p>设 $x_{ij}$为第 i 个料场向第 j 个建筑工地运送的货物吨数</p><h3 id="目标函数"><a href="#目标函数" class="headerlink" title="目标函数"></a>目标函数</h3><script type="math/tex; mode=display">min\sum_{i = 1}^{2} \sum_{j = 1}^{6}d_{ij}x_{ij}\\</script><h3 id="约束条件"><a href="#约束条件" class="headerlink" title="约束条件"></a>约束条件</h3><script type="math/tex; mode=display">\begin{split}&\begin{cases}x_{1j} + x_{2j} = d_{j} & \text{j = 1, 2, 3, 4, 5, 6} \\ x_{i1} + x_{i2} + x_{i3} + x_{i4} + x_{i5} + x_{i6} \le e_i & \text{i=1,2}\\\end{cases}\end{split}</script><h3 id="Python求解"><a href="#Python求解" class="headerlink" title="Python求解"></a>Python求解</h3><div class="tabs" id="test1"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test1-1">Python代码</button><button type="button" class="tab " data-href="test1-2">运行结果</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pulp <span class="keyword">as</span> pl</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义问题</span></span><br><span class="line">et = pl.LpProblem(<span class="string">&quot;问题&quot;</span>, pl.LpMinimize)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义变量</span></span><br><span class="line">material = [<span class="string">&#x27;x11&#x27;</span>, <span class="string">&#x27;x12&#x27;</span>, <span class="string">&#x27;x13&#x27;</span>, <span class="string">&#x27;x14&#x27;</span>, <span class="string">&#x27;x15&#x27;</span>, <span class="string">&#x27;x16&#x27;</span>, <span class="string">&#x27;x21&#x27;</span>, <span class="string">&#x27;x22&#x27;</span>, <span class="string">&#x27;x23&#x27;</span>, <span class="string">&#x27;x24&#x27;</span>, <span class="string">&#x27;x25&#x27;</span>, <span class="string">&#x27;x26&#x27;</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置常量</span></span><br><span class="line">a1 = [<span class="number">1.25</span>, <span class="number">8.75</span>, <span class="number">0.5</span>, <span class="number">5.75</span>, <span class="number">3</span>, <span class="number">7.25</span>]</span><br><span class="line">b1 = [<span class="number">1.25</span>, <span class="number">0.75</span>, <span class="number">4.75</span>, <span class="number">5</span>, <span class="number">6.5</span>, <span class="number">7.75</span>]</span><br><span class="line">a2 = [<span class="number">5</span>, <span class="number">2</span>]</span><br><span class="line">b2 = [<span class="number">1</span>, <span class="number">7</span>]</span><br><span class="line">d = [<span class="number">3</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">11</span>]</span><br><span class="line">e = [<span class="number">20</span>, <span class="number">20</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加目标函数</span></span><br><span class="line">mass = pl.LpVariable.dicts(<span class="string">&quot;水泥&quot;</span>, material, lowBound=<span class="number">0</span>, cat=<span class="string">&#x27;Continuous&#x27;</span>)</span><br><span class="line">et += pl.lpSum(</span><br><span class="line">    [np.sqrt(np.<span class="built_in">abs</span>(a1[i % <span class="number">6</span>] - a2[<span class="built_in">int</span>(i / <span class="number">6</span>)]) ** <span class="number">2</span> + np.<span class="built_in">abs</span>(b1[i % <span class="number">6</span>] - b2[<span class="built_in">int</span>(i / <span class="number">6</span>)]) ** <span class="number">2</span>) * mass[material[i]] <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">12</span>)])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加约束</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">6</span>):</span><br><span class="line">    et += (mass[material[i]] + mass[material[i + <span class="number">6</span>]] == d[i])</span><br><span class="line"></span><br><span class="line">et += pl.lpSum([mass[material[i]] <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">6</span>)]) &lt;= <span class="number">20</span></span><br><span class="line">et += pl.lpSum([mass[material[i]] <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">6</span>, <span class="number">12</span>)]) &lt;= <span class="number">20</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 求解问题</span></span><br><span class="line">et.solve()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> v <span class="keyword">in</span> et.variables():</span><br><span class="line">    <span class="built_in">print</span>(v.name, v.varValue)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;最小总吨公里数&quot;</span>, pl.value(et.objective))</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test1-2"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">水泥_x11 3.0</span><br><span class="line">水泥_x12 5.0</span><br><span class="line">水泥_x13 0.0</span><br><span class="line">水泥_x14 7.0</span><br><span class="line">水泥_x15 0.0</span><br><span class="line">水泥_x16 1.0</span><br><span class="line">水泥_x21 0.0</span><br><span class="line">水泥_x22 0.0</span><br><span class="line">水泥_x23 4.0</span><br><span class="line">水泥_x24 0.0</span><br><span class="line">水泥_x25 6.0</span><br><span class="line">水泥_x26 10.0</span><br><span class="line">最小总吨公里数 136.22751988318157</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h1 id="扩展问题"><a href="#扩展问题" class="headerlink" title="扩展问题"></a>扩展问题</h1><p><img src="https://bu.dusays.com/2024/08/05/66b091e646ae8.png" alt="非线性选址"></p><h2 id="解析-1"><a href="#解析-1" class="headerlink" title="解析"></a>解析</h2><p>目标函数与约束条件与原题相同，决策变量增加了四个，分别是料场A的横纵坐标与料场B的横纵坐标,由于有两变量的乘法，所以该问题是一个非线性规划问题</p><div class="tip "><p>Python的plup包用于解决线性规划与整数规划问题，无法用于解决非线性规划，下面解决该问题使用scipy包</p></div><h3 id="Python求解-1"><a href="#Python求解-1" class="headerlink" title="Python求解"></a>Python求解</h3><div class="tabs" id="test1"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test1-1">Python代码</button><button type="button" class="tab " data-href="test1-2">运行结果</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> scipy.optimize <span class="keyword">import</span> minimize</span><br><span class="line"></span><br><span class="line"><span class="comment"># 常量定义</span></span><br><span class="line">a1 = np.array([<span class="number">1.25</span>, <span class="number">8.75</span>, <span class="number">0.5</span>, <span class="number">5.75</span>, <span class="number">3</span>, <span class="number">7.25</span>])</span><br><span class="line">b1 = np.array([<span class="number">1.25</span>, <span class="number">0.75</span>, <span class="number">4.75</span>, <span class="number">5</span>, <span class="number">6.5</span>, <span class="number">7.75</span>])</span><br><span class="line">d = np.array([<span class="number">3</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">7</span>, <span class="number">6</span>, <span class="number">11</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 目标函数</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">objective</span>(<span class="params"><span class="built_in">vars</span></span>):</span><br><span class="line">    mass = <span class="built_in">vars</span>[:<span class="number">12</span>]  <span class="comment"># 前12个变量是质量</span></span><br><span class="line">    aa2 = <span class="built_in">vars</span>[<span class="number">12</span>:<span class="number">14</span>]  <span class="comment"># 第13和14个变量是料场坐标x</span></span><br><span class="line">    bb2 = <span class="built_in">vars</span>[<span class="number">14</span>:<span class="number">16</span>]  <span class="comment"># 第15和16个变量是料场坐标y</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 计算目标函数值</span></span><br><span class="line">    total_cost = (</span><br><span class="line">        np.<span class="built_in">sum</span>(np.sqrt((a1 - aa2[<span class="number">0</span>])**<span class="number">2</span> + (b1 - bb2[<span class="number">0</span>])**<span class="number">2</span>) * mass[:<span class="number">6</span>]) +</span><br><span class="line">        np.<span class="built_in">sum</span>(np.sqrt((a1 - aa2[<span class="number">1</span>])**<span class="number">2</span> + (b1 - bb2[<span class="number">1</span>])**<span class="number">2</span>) * mass[<span class="number">6</span>:])</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> total_cost</span><br><span class="line"></span><br><span class="line"><span class="comment"># 约束条件</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">constraint1</span>(<span class="params"><span class="built_in">vars</span></span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="number">20</span> - <span class="built_in">vars</span>[<span class="number">0</span>:<span class="number">6</span>].<span class="built_in">sum</span>()  <span class="comment"># Max_Weight_1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">constraint2</span>(<span class="params"><span class="built_in">vars</span></span>):</span><br><span class="line">    <span class="keyword">return</span> <span class="number">20</span> - <span class="built_in">vars</span>[<span class="number">6</span>:<span class="number">12</span>].<span class="built_in">sum</span>()  <span class="comment"># Max_Weight_2</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">mass_constraints</span>(<span class="params"><span class="built_in">vars</span></span>):</span><br><span class="line">    <span class="keyword">return</span> [<span class="built_in">vars</span>[i] + <span class="built_in">vars</span>[i + <span class="number">6</span>] - d[i] <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">6</span>)]  <span class="comment"># mass constraints</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 初始猜测</span></span><br><span class="line">initial_guess = np.zeros(<span class="number">16</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 变量的边界</span></span><br><span class="line">bounds = [(<span class="number">0</span>, <span class="literal">None</span>)] * <span class="number">16</span>  <span class="comment"># 所有变量的下限为0， 无上限</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义约束</span></span><br><span class="line">constraints = [&#123;<span class="string">&#x27;type&#x27;</span>: <span class="string">&#x27;ineq&#x27;</span>, <span class="string">&#x27;fun&#x27;</span>: constraint1&#125;,</span><br><span class="line">               &#123;<span class="string">&#x27;type&#x27;</span>: <span class="string">&#x27;ineq&#x27;</span>, <span class="string">&#x27;fun&#x27;</span>: constraint2&#125;] + [&#123;<span class="string">&#x27;type&#x27;</span>: <span class="string">&#x27;eq&#x27;</span>, <span class="string">&#x27;fun&#x27;</span>: <span class="keyword">lambda</span> <span class="built_in">vars</span>, i=i: <span class="built_in">vars</span>[i] + <span class="built_in">vars</span>[i + <span class="number">6</span>] - d[i]&#125; <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">6</span>)]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进行优化</span></span><br><span class="line">result = minimize(objective, initial_guess, bounds=bounds, constraints=constraints)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打印结果</span></span><br><span class="line"><span class="keyword">if</span> result.success:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;最小总吨公里数: <span class="subst">&#123;result.fun&#125;</span>&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;变量值:&quot;</span>)</span><br><span class="line">    <span class="keyword">for</span> i, v <span class="keyword">in</span> <span class="built_in">enumerate</span>(result.x):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&quot;变量 <span class="subst">&#123;i + <span class="number">1</span>&#125;</span>: <span class="subst">&#123;v&#125;</span>&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;优化失败:&quot;</span>, result.message)</span><br><span class="line"></span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test1-2"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">最小总吨公里数: 93.15855603619565</span><br><span class="line">变量值:</span><br><span class="line">变量 1: 3.3818180405279776e-09</span><br><span class="line">变量 2: 4.999999995727703</span><br><span class="line">变量 3: 5.255549236023211e-09</span><br><span class="line">变量 4: 6.99999999371573</span><br><span class="line">变量 5: 7.800029525181454e-09</span><br><span class="line">变量 6: 8.000000016817575</span><br><span class="line">变量 7: 3.000000007395729</span><br><span class="line">变量 8: 6.225972821268102e-09</span><br><span class="line">变量 9: 3.999999996393618</span><br><span class="line">变量 10: 9.157942967876833e-09</span><br><span class="line">变量 11: 5.9999999946475135</span><br><span class="line">变量 12: 2.999999983182425</span><br><span class="line">变量 13: 5.78658657298875</span><br><span class="line">变量 14: 3.0000000357429033</span><br><span class="line">变量 15: 5.013374747852657</span><br><span class="line">变量 16: 6.499999924427927</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div>]]></content>
      
      
      <categories>
          
          <category> 数学建模 </category>
          
          <category> 非线性规划 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学建模 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>货机运输问题</title>
      <link href="/posts/e760e6e8.html"/>
      <url>/posts/e760e6e8.html</url>
      
        <content type="html"><![CDATA[<h1 id="货机运输问题"><a href="#货机运输问题" class="headerlink" title="货机运输问题"></a>货机运输问题</h1><p><img src="https://bu.dusays.com/2024/08/03/66ad8deaebb4b.png" alt="货机运输"></p><p>设$x_{ij}$为货物 i 有多少吨装在第 j 个仓</p><h4 id="目标函数"><a href="#目标函数" class="headerlink" title="目标函数"></a>目标函数</h4><script type="math/tex; mode=display">Max Z = 3100 (x_{11} + x_{12} + x_{13}) + 3800 (x_{21} + x_{22} + x_{23}) + 2850 (x_{31} + x_{32} + x_{33})</script><h4 id="约束条件"><a href="#约束条件" class="headerlink" title="约束条件"></a>约束条件</h4><script type="math/tex; mode=display">\begin{split}& 小于等于最大载重量\\& \begin{cases}x_{11} + x_{21} + x_{31} + x_{41}  \le 10 \\x_{12} + x_{22} + x_{32} + x_{42}\le 16  \\x_{13} + x_{23} + x_{33} + x_{43}  \le 8 \\\end{cases}\\& 对每件货物的分配量小于等于有的货物量 \\& \begin{cases}x_{11} + x_{12} + x_{13} \le 18 \\x_{21} + x_{22} + x_{23} \le 15 \\x_{31} + x_{32} + x_{33} \le 23 \\x_{41} + x_{42} + x_{43} \le 12 \\\end{cases}\\& 小于等于最大容积 \\&\begin{cases}480x_{11} + 650_{21} + 580x_{31} + 390x_{41} \le 6800\\480x_{12} + 650_{22} + 580x_{32} + 390x_{42} \le 8700\\480x_{13} + 650_{23} + 580x_{33} + 390x_{43} \le 5300\\\end{cases}\\& 实际载重与最大载重成比例 \\& \begin{cases}\frac{1}{10}x_{11} + \frac{1}{10}x_{21} + \frac{1}{10}x_{31} + \frac{1}{10}x_{41} = 1\\\frac{1}{16}x_{12} + \frac{1}{16}x_{22} + \frac{1}{16}x_{32} + \frac{1}{16}x_{42} = 1\\\frac{1}{8}x_{13} + \frac{1}{8}x_{23} + \frac{1}{8}x_{33} + \frac{1}{8}x_{43} = 1\\\end{cases}\end{split}</script><p>转换为矩阵</p><p>不等式约束矩阵</p><script type="math/tex; mode=display">\begin{pmatrix} 1 & 0 & 0 & 1 & 0 &  0& 1 & 0 & 0 & 1 & 0 & 0\\ 0 & 1 & 0 & 0 & 1 &  0& 0 & 1 & 0 & 0 & 1 & 0\\0 & 0 & 1 & 0 & 0 &  1& 0 & 0 & 1 & 0 & 0 & 1\\0 & 0 & 0 & 1 & 0 &  0& 1 & 0 & 0 & 1 & 0 & 0\\1 & 1 & 1 & 0 & 0 &  0& 0 & 0 & 0 & 0 & 0 & 0\\0 & 0 & 0 & 1 & 1 &  1& 0 & 0 & 0 & 0 & 0 & 0\\0 & 0 & 0 & 0 & 0 &  0& 1 & 1 & 1 & 0 & 0 & 0\\480 & 0 & 0 & 650 & 0 &  0& 580 & 0 & 0 & 390 & 0 & 0\\0 & 480 & 0 & 0 & 650 &  0& 0 & 580 & 0 & 0 & 390 & 0\\0 & 0 & 480 &  0 & 0 &  650& 0 & 0 & 580 & 0 & 0 & 390\\\end{pmatrix}\begin{pmatrix}x_{11}\\x_{12}\\x_{13}\\x_{21}\\x_{22}\\x_{23}\\x_{31}\\x_{32}\\x_{33}\\x_{41}\\x_{42}\\x_{43}\\\end{pmatrix}\le\begin{pmatrix} 10 \\ 16 \\8 \\18 \\ 15 \\23 \\6800 \\ 8700 \\5300 \\\end{pmatrix}</script><p>等式约束矩阵</p><script type="math/tex; mode=display">\begin{pmatrix}\frac{1}{10} & 0 &  0 & \frac{1}{10} &  0 & 0 & \frac{1}{10} & 0 & 0 & \frac{1}{10}& 0 & 0\\0 & \frac{1}{16} &  0 & 0 &  \frac{1}{16} & 0 & 0 & \frac{1}{16} & 0 & 0 & \frac{1}{16} & 0\\0 & 0 &  \frac{1}{8} & 0 &  0 & \frac{1}{8} & 0 & 0 & \frac{1}{8} & 0& 0 & \frac{1}{8}\\\end{pmatrix}\begin{pmatrix}x_{11}\\x_{12}\\x_{13}\\x_{21}\\x_{22}\\x_{23}\\x_{31}\\x_{32}\\x_{33}\\x_{41}\\x_{42}\\x_{43}\\\end{pmatrix}=\begin{pmatrix}1 \\ 1 \\1 \\1 \\\end{pmatrix}</script><h4 id="Python求解"><a href="#Python求解" class="headerlink" title="Python求解"></a>Python求解</h4><div class="tabs" id="test1"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test1-1">Python代码</button><button type="button" class="tab " data-href="test1-2">运行结果</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> scipy.optimize <span class="keyword">import</span> linprog</span><br><span class="line"></span><br><span class="line"><span class="comment"># 目标函数的系数（取反以最小化）</span></span><br><span class="line">c = -np.array([<span class="number">3100</span>, <span class="number">3100</span>, <span class="number">3100</span>, <span class="number">3800</span>, <span class="number">3800</span>, <span class="number">3800</span>, <span class="number">3500</span>, <span class="number">3500</span>, <span class="number">3500</span>, <span class="number">2850</span>, <span class="number">2850</span>, <span class="number">2850</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 不等式约束矩阵</span></span><br><span class="line">A_ub = [</span><br><span class="line">    [<span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">    [<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>],</span><br><span class="line">    [<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>],</span><br><span class="line">    [<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">    [<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">    [<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">    [<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>],</span><br><span class="line">    [<span class="number">480</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">650</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">580</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">390</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">    [<span class="number">0</span>, <span class="number">480</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">650</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">580</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">390</span>, <span class="number">0</span>],</span><br><span class="line">    [<span class="number">0</span>, <span class="number">0</span>, <span class="number">480</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">650</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">580</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">390</span>],</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 不等式约束向量</span></span><br><span class="line">b_ub = [<span class="number">10</span>, <span class="number">16</span>, <span class="number">8</span>, <span class="number">18</span>, <span class="number">15</span>, <span class="number">23</span>, <span class="number">12</span>, <span class="number">6800</span>, <span class="number">8700</span>, <span class="number">5300</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 等式约束矩阵</span></span><br><span class="line">A_eq = [</span><br><span class="line">    [<span class="number">1</span>/<span class="number">10</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>/<span class="number">10</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>/<span class="number">10</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>/<span class="number">10</span>, <span class="number">0</span>, <span class="number">0</span>],</span><br><span class="line">    [<span class="number">0</span>, <span class="number">1</span>/<span class="number">16</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>/<span class="number">16</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>/<span class="number">16</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>/<span class="number">16</span>, <span class="number">0</span>],</span><br><span class="line">    [<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>/<span class="number">8</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>/<span class="number">8</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>/<span class="number">8</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>/<span class="number">8</span>]</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 等式约束向量</span></span><br><span class="line">b_eq = [<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用 linprog 求解</span></span><br><span class="line">result = linprog(c, A_ub=A_ub, b_ub=b_ub, A_eq=A_eq, b_eq=b_eq, method=<span class="string">&#x27;highs&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打印结果</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">12</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;x<span class="subst">&#123;i&#125;</span> = <span class="subst">&#123;result.x[i]&#125;</span>&quot;</span>, end = <span class="string">&#x27; &#x27;</span>)</span><br><span class="line"></span><br><span class="line">max_value = -result.fun</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;Max Z = <span class="subst">&#123;max_value&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test1-2"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">x0 = 0.0</span><br><span class="line">x1 = 0.0</span><br><span class="line">x2 = 0.0</span><br><span class="line">x3 = 10.0</span><br><span class="line">x4 = 0.0</span><br><span class="line">x5 = 5.0</span><br><span class="line">x6 = 0.0</span><br><span class="line">x7 = 12.947368421052632</span><br><span class="line">x8 = 3.0</span><br><span class="line">x9 = 0.0</span><br><span class="line">x10 = 3.052631578947368</span><br><span class="line">x11 = 0.0</span><br><span class="line">Max Z = 121515.78947368421</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div>]]></content>
      
      
      <categories>
          
          <category> 数学建模 </category>
          
          <category> 线性规划 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学建模 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>人口的预测控制问题与奶制品的生产销售问题</title>
      <link href="/posts/81ed58a3.html"/>
      <url>/posts/81ed58a3.html</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>今年我在七月底就结束了暑假生活，来学校参加数学建模的比赛集训，因为学校即将迎来本科评估和师范认证，各个老师暑假也留在学校忙的不可开交。他们在平常的工作时间没有空来指导我们，只有在早上七点半到九点半和晚上六点半到八点半能够抽出时间，这就意味着接下来的一段时间我们需要早起了···</p><p>在开学的两天里学习了两个问题的解决，下面言归正传。</p><h1 id="人口的预测和控制"><a href="#人口的预测和控制" class="headerlink" title="人口的预测和控制"></a>人口的预测和控制</h1><p>人类社会进入 20 世纪以来，在科学技术和生产力飞速发展的同时，世界人口也以空前的规模增长</p><p>以下是美国人口变化表</p><div class="table-container"><table><thead><tr><th style="text-align:center">年</th><th>1790</th><th>1800</th><th>1810</th><th>1820</th><th>1830</th></tr></thead><tbody><tr><td style="text-align:center">人口/百万</td><td>3.9</td><td>5.3</td><td>7.2</td><td>9.6</td><td>12.9</td></tr><tr><td style="text-align:center">年</td><td>1840</td><td>1850</td><td>1860</td><td>1870</td><td>1880</td></tr><tr><td style="text-align:center">人口/百万</td><td>17.1</td><td>23.2</td><td>31.4</td><td>38.6</td><td>50.2</td></tr><tr><td style="text-align:center">年</td><td>1890</td><td>1900</td><td>1910</td><td>1920</td><td>1930</td></tr><tr><td style="text-align:center">人口/百万</td><td>62.9</td><td>76.0</td><td>92.0</td><td>106.5</td><td>123.2</td></tr><tr><td style="text-align:center">年</td><td>1940</td><td>1950</td><td>1960</td><td>1970</td><td>1980</td></tr><tr><td style="text-align:center">人口/百万</td><td>131.7</td><td>150.7</td><td>179.3</td><td>204.0</td><td>226.5</td></tr><tr><td style="text-align:center">年</td><td>1990</td><td>2000</td><td></td><td></td><td></td></tr><tr><td style="text-align:center">人口/百万</td><td>251.4</td><td>281.4</td><td></td><td></td></tr></tbody></table></div><p>我们需要用以上数据对美国人口变化趋势做估计并绘制出图像。下面有两种最基本的人口模型</p><h2 id="指数增长模型"><a href="#指数增长模型" class="headerlink" title="指数增长模型"></a>指数增长模型</h2><p>记今年人口为 $x_0$, k 年后人口为 $x_k$,年增长率为 r</p><p>则有</p><script type="math/tex; mode=display">x_k = x_0 (1 + r) ^ k</script><p>记时刻 t 的人口为 x(t),初时刻(t = 0)的人口为 $x_0$</p><p>有求 r 公式</p><script type="math/tex; mode=display">x(t) = x_0e^{rt}</script><h2 id="阻滞增长模型——logistic模型"><a href="#阻滞增长模型——logistic模型" class="headerlink" title="阻滞增长模型——logistic模型"></a>阻滞增长模型——logistic模型</h2><p>自然资源和环境条件所能容纳的最大人口数量——人口容量为$x_m$</p><p>公式为</p><script type="math/tex; mode=display">x(t) = \frac{x_m}{1 + (\frac{x_m}{x_0})e^{-rt}}</script><h2 id="Python-绘制图像"><a href="#Python-绘制图像" class="headerlink" title="Python 绘制图像"></a>Python 绘制图像</h2><p>工欲善其事，必先利其器。我们需要先给 python 安装几个包。打开对应项目的终端，执行以下几句指令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pip install numpy</span><br><span class="line">pip install matplotlib</span><br><span class="line">pip install scipy</span><br></pre></td></tr></table></figure><p>将上面美国示例联合以上两种模型绘制在一张图表中</p><div class="tabs" id="test1"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test1-1">趋势图</button><button type="button" class="tab " data-href="test1-2">Python代码实现</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><p><img src="https://bu.dusays.com/2024/08/02/66ac9277ad2d3.png" alt="QQ_1722585666344"  /></p></div><div class="tab-item-content" id="test1-2"><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> scipy.integrate <span class="keyword">import</span> odeint</span><br><span class="line"><span class="keyword">from</span> scipy.optimize <span class="keyword">import</span> curve_fit</span><br><span class="line"><span class="keyword">from</span> pylab <span class="keyword">import</span> mpl</span><br><span class="line"></span><br><span class="line">year_list_1 = [<span class="number">1625</span>, <span class="number">1804</span>, <span class="number">1927</span>, <span class="number">1960</span>, <span class="number">1974</span>, <span class="number">1987</span>, <span class="number">1999</span>]</span><br><span class="line">num_list_1 = [<span class="number">5</span>, <span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>, <span class="number">40</span>, <span class="number">50</span>, <span class="number">60</span>]</span><br><span class="line"></span><br><span class="line">year_list_2 = [<span class="number">1901</span>, <span class="number">1929</span>, <span class="number">1953</span>, <span class="number">1965</span>, <span class="number">1982</span>, <span class="number">1990</span>, <span class="number">2000</span>]</span><br><span class="line">num_list_2 = [<span class="number">4.26</span>, <span class="number">5.48</span>, <span class="number">6.02</span>, <span class="number">7.25</span>, <span class="number">10.32</span>, <span class="number">11.30</span>, <span class="number">12.95</span>]</span><br><span class="line"></span><br><span class="line">year_list_3 = [x <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1790</span>, <span class="number">2001</span>, <span class="number">10</span>)]</span><br><span class="line">num_list_3 = [<span class="number">3.9</span>, <span class="number">5.3</span>, <span class="number">7.2</span>, <span class="number">9.6</span>, <span class="number">12.9</span>, <span class="number">17.1</span>, <span class="number">23.2</span>, <span class="number">31.4</span>,</span><br><span class="line">              <span class="number">38.6</span>, <span class="number">50.2</span>, <span class="number">62.9</span>, <span class="number">76.0</span>, <span class="number">92.0</span>, <span class="number">106.5</span>, <span class="number">123.2</span>, <span class="number">131.7</span>,</span><br><span class="line">              <span class="number">150.7</span>, <span class="number">179.3</span>, <span class="number">204.0</span>, <span class="number">226.5</span>, <span class="number">251.4</span>, <span class="number">281.4</span>]</span><br><span class="line"></span><br><span class="line">n = <span class="number">0</span></span><br><span class="line">rr = <span class="number">0</span></span><br><span class="line">rrr = <span class="number">0</span></span><br><span class="line">x_m = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 为了求出r</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">func</span>(<span class="params">t, r</span>):</span><br><span class="line">    <span class="keyword">return</span> num_list_3[<span class="number">0</span>] * np.exp(r * t)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 阻滞增长</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">func2</span>(<span class="params">t, r2, x_m</span>):</span><br><span class="line">    <span class="keyword">return</span> x_m / (<span class="number">1</span> + (((x_m / num_list_3[<span class="number">0</span>]) - <span class="number">1</span>) * np.exp((-r2) * t)))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 初级模型:dx/dt=rx,x(0)=x0（初始时刻）,x(t)表示t时刻下的人口</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">expbase</span>(<span class="params">x, t</span>):</span><br><span class="line">    <span class="keyword">return</span> np.array(rr * x + <span class="number">0</span> * t)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="comment"># 设置时间序列</span></span><br><span class="line">    t = np.array(year_list_3) - <span class="number">1790</span></span><br><span class="line"></span><br><span class="line">    y = np.array(num_list_3)</span><br><span class="line">    <span class="comment"># 默认误差不可大于0.4，可选择设置maxfev调整可以免于误差影响，popt是求出的值，pcov是</span></span><br><span class="line">    popt, pcov = curve_fit(func, t, y, p0=[<span class="number">0.2</span>])</span><br><span class="line">    <span class="built_in">print</span>(popt, pcov)</span><br><span class="line">    rr = popt[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">    popt2, pcov2 = curve_fit(func2, t, y, p0=[rr, <span class="number">400</span>])</span><br><span class="line">    <span class="built_in">print</span>(popt2)</span><br><span class="line">    rrr = popt2[<span class="number">0</span>]</span><br><span class="line">    x_m = popt2[<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 画图</span></span><br><span class="line">    yvals = func(t, rr)</span><br><span class="line">    yvals2 = func2(t, rrr, x_m)</span><br><span class="line">    plt.figure()</span><br><span class="line">    plot1 = plt.plot(t, y, <span class="string">&#x27;s&#x27;</span>, label=<span class="string">&#x27;original values&#x27;</span>)</span><br><span class="line">    plot2 = plt.plot(t, yvals, <span class="string">&#x27;r&#x27;</span>, label=<span class="string">&#x27;exp&#x27;</span>)</span><br><span class="line">    plot3 = plt.plot(t, yvals2, <span class="string">&#x27;g&#x27;</span>, label=<span class="string">&#x27;zuzhi&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    plt.xlabel(<span class="string">&#x27;t&#x27;</span>)</span><br><span class="line">    plt.ylabel(<span class="string">&#x27;y&#x27;</span>)</span><br><span class="line">    plt.legend(loc=<span class="number">4</span>)</span><br><span class="line">    plt.title(<span class="string">&#x27;curve_fit&#x27;</span>)</span><br><span class="line">    plt.show()</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h1 id="奶制品的生产销售问题"><a href="#奶制品的生产销售问题" class="headerlink" title="奶制品的生产销售问题"></a>奶制品的生产销售问题</h1><h2 id="粗加工"><a href="#粗加工" class="headerlink" title="粗加工"></a>粗加工</h2><script type="math/tex; mode=display">一桶牛奶= \begin{cases}12h \longrightarrow 3kg A_1 \longrightarrow 获利 24 元/kg \\8h \longrightarrow 4kg A_1 \longrightarrow 获利 16 元/kg\end{cases}</script><p>每天:<br>有 50 桶牛奶，正是工人总的劳动时间为 480 小时，至多加工 100 kg $A_1$</p><p>制订生产计划, 使每天获利最大</p><p>设 $x_1$桶牛奶用来生产 $A_1$,$x_2$桶牛奶用来生产$A_2$</p><h4 id="目标函数"><a href="#目标函数" class="headerlink" title="目标函数"></a>目标函数</h4><script type="math/tex; mode=display">max z = 72x_1 + 64x_2</script><h4 id="约束条件"><a href="#约束条件" class="headerlink" title="约束条件"></a>约束条件</h4><script type="math/tex; mode=display">f(n)= \begin{cases}\begin{pmatrix} 1 & 1 \\ 12 & 8 \\ \end{pmatrix} <= \begin{pmatrix} 50 \\ 480 \\ \end{pmatrix} & \text {牛奶数小于等于50桶，总工时小于等于480h} \\0 <= \begin{pmatrix} x_1 \\ x_2 \\ \end{pmatrix} <= \begin{pmatrix} \frac{1000}{3} \\ +\infty \\ \end{pmatrix} & \text{A1小于等于100kg}\end{cases}</script><h4 id="Python求解"><a href="#Python求解" class="headerlink" title="Python求解"></a>Python求解</h4><div class="tabs" id="test2"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test2-1">scipy求解</button><button type="button" class="tab " data-href="test2-2">plup求解</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test2-1"><p>用 scipy.optimize.linprog 函数求解</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> scipy.optimize <span class="keyword">import</span> linprog</span><br><span class="line">c=[-<span class="number">72</span>, -<span class="number">64</span>]    <span class="comment">#目标向量</span></span><br><span class="line">A=[[<span class="number">1</span>, <span class="number">1</span>],[<span class="number">12</span>, <span class="number">8</span>]]; b=[[<span class="number">50</span>],[<span class="number">480</span>]]</span><br><span class="line">bound=((<span class="number">0</span>,<span class="number">100</span>/<span class="number">3.0</span>),(<span class="number">0</span>,<span class="literal">None</span>))</span><br><span class="line">res=linprog(c,A,b,<span class="literal">None</span>,<span class="literal">None</span>,bound,method=<span class="string">&#x27;highs&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;最优值:&#x27;</span>,res.fun)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;最优解:&#x27;</span>,res.x)</span><br></pre></td></tr></table></figure><p>运行结果为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">最优值: -3360.0</span><br><span class="line">最优解: [20. 30.]</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test2-2"><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pulp <span class="keyword">as</span> pl</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义问题 LpMaximize 求最大值 LpMinimize 求最小值</span></span><br><span class="line">et = pl.LpProblem(<span class="string">&quot;et&quot;</span>, sense=pl.LpMaximize)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义变量</span></span><br><span class="line">x = pl.LpVariable(<span class="string">&quot;x&quot;</span>, lowBound=<span class="number">0</span>, upBound=<span class="number">1000</span>/<span class="number">3</span>, cat=<span class="string">&quot;Integer &quot;</span>)</span><br><span class="line">y = pl.LpVariable(<span class="string">&quot;y&quot;</span>, lowBound=<span class="number">0</span>, cat=<span class="string">&quot;Integer &quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加目标函数</span></span><br><span class="line">et += <span class="number">72</span> * x + <span class="number">64</span> * y</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加约束条件</span></span><br><span class="line">et += (x + y &lt;= <span class="number">50</span>)</span><br><span class="line">et += (<span class="number">12</span> * x + <span class="number">8</span> * y &lt;= <span class="number">480</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 求解</span></span><br><span class="line">et.solve()</span><br><span class="line"><span class="keyword">for</span> v <span class="keyword">in</span> et.variables():</span><br><span class="line">    <span class="built_in">print</span>(v.name, <span class="string">&quot;=&quot;</span>, v.varValue)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;F(x)=&quot;</span>, pl.value(et.objective))</span><br></pre></td></tr></table></figure><p>运行结果为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">x = 20.0</span><br><span class="line">y = 30.0</span><br><span class="line">F(x)= 3360.0</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><p>以上为该题目的最简单一问，用于参考，若要深入了解该问题或scipy.optimize.linprog，建议参考<a href="https://blog.csdn.net/qq_55851911/article/details/124437410">数学建模：线性规划—奶制品的生产销售计划模型 (Python 求解)_数学建模奶制品的生产与销售</a>和<a href="https://blog.csdn.net/qq_58539881/article/details/126349305">python模块：Scipy.optimize.linprog线性规划求解</a></p><h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><p>刚刚入门数学建模，还处于摸索状态，很多文章内容只能说是发表以下自己的理解，给大家提供一个参考，接下来的一个月我将进一步更新有关的学习内容（不定期），记录下我的数学建模学习历程。</p>]]></content>
      
      
      <categories>
          
          <category> 数学建模 </category>
          
          <category> 线性规划 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数学建模 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ThiRTy_30`Blog个人博客初步搭建成功！</title>
      <link href="/posts/b2519fd8.html"/>
      <url>/posts/b2519fd8.html</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>磕磕绊绊终于完成了我的个人博客的初步搭建。</p><p>刚步入大学时，我对博客还不甚了解，只在网络上听说学计算机可以尽早养成写博客的习惯。后来到了大一下学期，因为学校学长带我准备参加蓝桥杯，我开始频繁访问学长的个人博客网站学习各类算法，这也在我心中埋下了想要搭建属于自己的个人博客的一颗种子。</p><p>直到前不久，大一的学业全部结束，我迎来了我的暑假生活。暑假刚开始我过着的是百无聊赖的闲暇日子。因为我一直都相信空闲时间决定人生高度，所以我决定在这悠哉生活中给自己找点事干，于是我就开始了我个人博客的搭建。</p><p>但空闲的生活总是短暂的，很快我的决心就不得不被一些事情打断，那就是——玩！我被朋友邀请一起去看望以前的老师、去玩桌游、和女朋友一起去旅行、和家人一起去爬山等等。于是我的博客搭建计划缓了又缓，但是我依旧时刻记着有这么回事，因为我本身未学习过这方面的有关知识，我只能在紧凑的日子中忙里偷闲，边学习边搭建。</p><p>好在，大约历时一个月的时间，在边玩边学的情况下，我完成了个人博客的初步搭建，<del>其实认真在干活的就几天时间</del>（不是）。然开卷有益，开写亦有益，我就火急火燎的写下了这真正意义上的我人生的第一篇博客。</p><h1 id="搭建经历"><a href="#搭建经历" class="headerlink" title="搭建经历"></a>搭建经历</h1><p>别看如今样式简单，内容不多，要说搭建过程，也是一把辛酸泪。各样的报错层出不穷，各种样式调整屡试屡败，才完成了如今还算健全的小站。我的博客网站是使用 hexo ，通过 gtihub page 部署至互联网，使用了 hexo 的 butterfly 主题，经过了一些小的魔改与美化得到的一个小站。搭建途中，参考了很多大佬的博客教程，最开始是在 b 站看<a href="https://www.bilibili.com/video/BV13v4y1c75G/?spm_id_from=333.337.search-card.all.click&amp;vd_source=1fbb078d41c49333694a2c40e7097775">安知鱼大佬的 hexo 博客搭建系列视频</a> 入门的，也是感谢世界上有这么多无私的大佬分享的教程。</p><details class="folding-tag" cyan open><summary> 展开我的搭建流程明细 </summary>              <div class='content'>              <ul><li>Hexo 的安装与初始化设置</li><li>Hexo 使用 butterfly 主题</li><li>Hexo SEO优化</li><li>将个人博客通过 github page 部署至互联网</li><li>实现 github action 自动部署</li><li>aplayer 音乐插件的安装</li><li>安装 Hexo pwa</li><li>自定义各类 CSS 样式</li><li>添加外挂标签</li><li>安装设置 wowjs</li><li>侧边栏和导航栏的修改</li><li>侧边电子钟设置</li><li>页脚设置</li><li>实现一图流和每页单独配置背景图</li></ul>              </div>            </details><h1 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h1><p>我的博客主要记录内容分为以下两个方面：</p><ol><li>记录与分享学习，包括学习内容和学习经历</li><li>记录平常生活中有趣的事</li></ol><p>接下来的目标：</p><ol><li>不定期写博客，分享技术与心得</li><li>自定义域名，将博客部署到云服务器（为了更流畅的访问）</li><li>继续学习并美化我的博客</li><li>好好准备全国大学生数学建模比赛</li></ol><h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><p>最后，感谢你可以来访问我的博客。学习一途道阻且长，好在有前人引导，有同行人可以交流，同时，我也希望未来有后人可以寻着我的脚步，如果未来有实力，我也会写一些教程类的文章，给大家提供参考。</p>]]></content>
      
      
      <categories>
          
          <category> Blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Blog </tag>
            
        </tags>
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title></title>
      <link href="/manifest.json"/>
      <url>/manifest.json</url>
      
        <content type="html"><![CDATA[{"name":"ThiRTy_30`Blog","short_name":"ThiRTy_30","theme_color":"#3b70fc","background_color":"#3b70fc","display":"standalone","scope":"/","start_url":"/","icons":[{"src":"/img/siteicon/16.png","sizes":"16x16","type":"image/png"},{"src":"/img/siteicon/32.png","sizes":"32x32","type":"image/png"},{"src":"/img/siteicon/48.png","sizes":"48x48","type":"image/png"},{"src":"/img/siteicon/64.png","sizes":"64x64","type":"image/png"},{"src":"/img/siteicon/128.png","sizes":"128x128","type":"image/png"},{"src":"/img/siteicon/144.png","sizes":"144x144","type":"image/png"},{"src":"/img/siteicon/512.png","sizes":"512x512","type":"image/png"}],"splash_pages":null}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/title.js"/>
      <url>/js/title.js</url>
      
        <content type="html"><![CDATA[//动态标题var OriginTitile = document.title;var titleTime;document.addEventListener('visibilitychange', function () {    if (document.hidden) {        //离开当前页面时标签显示内容        document.title = '记得回来~';        clearTimeout(titleTime);    } else {        //返回当前页面时标签显示内容        document.title = '欢迎回来~';        //两秒后变回正常标题        titleTime = setTimeout(function () {            document.title = OriginTitile;        }, 2000);    }});]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>这里是我对文章的分类</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/custom.css"/>
      <url>/css/custom.css</url>
      
        <content type="html"><![CDATA[/* @font-face {  font-family: Candyhome;  src: url(https://npm.elemecdn.com/anzhiyu-blog@1.1.6/fonts/Candyhome.ttf);  font-display: swap;  font-weight: lighter;} */@font-face {    font-family: ZhuZiAYuanJWD;    src: url(https://npm.elemecdn.com/anzhiyu-blog@1.1.6/fonts/ZhuZiAWan.woff2);    font-display: swap;    font-weight: lighter;}div#menus {    font-family: "ZhuZiAYuanJWD";}h1#site-title {    font-family: ZhuZiAYuanJWD;    font-size: 3em !important;}a.article-title,a.blog-slider__title,a.categoryBar-list-link,h1.post-title {    font-family: ZhuZiAYuanJWD;}.iconfont {    font-family: "iconfont" !important;    font-size: 3em;    /* 可以定义图标大小 */    font-style: normal;    -webkit-font-smoothing: antialiased;    -moz-osx-font-smoothing: grayscale;}/* 时间轴生肖icon */svg.icon {    /* 这里定义svg.icon，避免和Butterfly自带的note标签冲突 */    width: 1em;    height: 1em;    /* width和height定义图标的默认宽度和高度*/    vertical-align: -0.15em;    fill: currentColor;    overflow: hidden;}.icon-zhongbiao::before {    color: #f7c768;}/* 解决artitalk的图标问题 */#uploadSource>svg {    width: 1.19em;    height: 1.5em;}/*top-img黑色透明玻璃效果移除，不建议加，除非你执着于完全一图流或者背景图对比色明显 */#page-header:not(.not-top-img):before {    background-color: transparent !important;}/* 首页文章卡片 */#recent-posts>.recent-post-item {    background: rgba(255, 255, 255, 0.9);}/* 首页侧栏卡片 */#aside-content .card-widget {    background: rgba(255, 255, 255, 0.9);}/* 文章页面正文背景 */div#post {    background: rgba(255, 255, 255, 0.9);}/* 分页页面 */div#page {    background: rgba(255, 255, 255, 0.9);}/* 归档页面 */div#archive {    background: rgba(255, 255, 255, 0.9);}/* 标签页面 */div#tag {    background: rgba(255, 255, 255, 0.9);}/* 分类页面 */div#category {    background: rgba(255, 255, 255, 0.9);}/*夜间模式伪类遮罩层透明*/[data-theme="dark"] #recent-posts>.recent-post-item {    background: #121212;}[data-theme="dark"] .card-widget {    background: #121212 !important;}[data-theme="dark"] div#post {    background: #121212 !important;}[data-theme="dark"] div#tag {    background: #121212 !important;}[data-theme="dark"] div#archive {    background: #121212 !important;}[data-theme="dark"] div#page {    background: #121212 !important;}[data-theme="dark"] div#category {    background: #121212 !important;}[data-theme="dark"] div#category {    background: transparent !important;}/* 页脚透明 */#footer {    background: transparent !important;}/* 头图透明 */#page-header {    background: transparent !important;}#rightside>div>button {    border-radius: 5px;}/* 滚动条 */::-webkit-scrollbar {    width: 10px;    height: 10px;}::-webkit-scrollbar-thumb {    background-color: #3b70fc;    border-radius: 2em;}::-webkit-scrollbar-corner {    background-color: transparent;}::-moz-selection {    color: #fff;    background-color: #3b70fc;}/* 音乐播放器 *//* .aplayer .aplayer-lrc {  display: none !important;} */.aplayer.aplayer-fixed.aplayer-narrow .aplayer-body {    left: -66px !important;    transition: all 0.3s;    /* 默认情况下缩进左侧66px，只留一点箭头部分 */}.aplayer.aplayer-fixed.aplayer-narrow .aplayer-body:hover {    left: 0 !important;    transition: all 0.3s;    /*标悬停是左侧缩进归零，完全显示按钮 */}.aplayer.aplayer-fixed {    z-index: 999999 !important;}/* 评论框  */.vwrap {    box-shadow: 2px 2px 5px #bbb;    background: rgba(255, 255, 255, 0.3);    border-radius: 8px;    padding: 30px;    margin: 30px 0px 30px 0px;}/* 设置评论框 */.vcard {    box-shadow: 2px 2px 5px #bbb;    background: rgba(255, 255, 255, 0.3);    border-radius: 8px;    padding: 30px;    margin: 30px 0px 0px 0px;}/* md网站下划线 */#article-container a:hover {    text-decoration: none !important;}#article-container #hpp_talk p img {    display: inline;}/* 404页面 */#error-wrap {    position: absolute;    top: 40%;    right: 0;    left: 0;    margin: 0 auto;    padding: 0 1rem;    max-width: 1000px;    transform: translate(0, -50%);}#error-wrap .error-content {    display: flex;    flex-direction: row;    justify-content: center;    align-items: center;    margin: 0 1rem;    height: 18rem;    border-radius: 8px;    background: var(--card-bg);    box-shadow: var(--card-box-shadow);    transition: all 0.3s;}#error-wrap .error-content .error-img {    box-flex: 1;    flex: 1;    height: 100%;    border-top-left-radius: 8px;    border-bottom-left-radius: 8px;    background-color: #3b70fc;    background-position: center;    background-size: cover;}#error-wrap .error-content .error-info {    box-flex: 1;    flex: 1;    padding: 0.5rem;    text-align: center;    font-size: 14px;    font-family: Titillium Web, "PingFang SC", "Hiragino Sans GB", "Microsoft JhengHei", "Microsoft YaHei", sans-serif;}#error-wrap .error-content .error-info .error_title {    margin-top: -4rem;    font-size: 9em;}#error-wrap .error-content .error-info .error_subtitle {    margin-top: -3.5rem;    word-break: break-word;    font-size: 1.6em;}#error-wrap .error-content .error-info a {    display: inline-block;    margin-top: 0.5rem;    padding: 0.3rem 1.5rem;    background: var(--btn-bg);    color: var(--btn-color);}#body-wrap.error .aside-list {    display: flex;    flex-direction: row;    flex-wrap: nowrap;    bottom: 0px;    position: absolute;    padding: 1rem;    width: 100%;    overflow: scroll;}#body-wrap.error .aside-list .aside-list-group {    display: flex;    flex-direction: row;    flex-wrap: nowrap;    max-width: 1200px;    margin: 0 auto;}#body-wrap.error .aside-list .aside-list-item {    padding: 0.5rem;}#body-wrap.error .aside-list .aside-list-item img {    width: 100%;    object-fit: cover;    border-radius: 12px;}#body-wrap.error .aside-list .aside-list-item .thumbnail {    overflow: hidden;    width: 230px;    height: 143px;    background: var(--heo-card-bg);    display: flex;}#body-wrap.error .aside-list .aside-list-item .content .title {    -webkit-line-clamp: 2;    overflow: hidden;    display: -webkit-box;    -webkit-box-orient: vertical;    line-height: 1.5;    justify-content: center;    align-items: flex-end;    align-content: center;    padding-top: 0.5rem;    color: white;}#body-wrap.error .aside-list .aside-list-item .content time {    display: none;}/* 代码框主题 */#article-container figure.highlight {    border-radius: 10px;}/* 分类页样式 began */.category-list-link:hover {    transform: scale(1.1);    box-shadow: 10px 10px 15px 2px rgba(0, 0, 0, .12), 0 0 6px 0 rgba(104, 104, 105, 0.1);    border-radius: 15px;    padding: 6px 16px;    margin-left: 0px;    font-size: 16px;    transition-duration: 0.15s;    /* display:flex; */}a.category-list-link:before {    top: 10px;    width: 18px;    height: 18px;    content: "📚";    margin-right: 5px;    font: normal normal normal 14px/1 FontAwesome;    font-size: 15px;    line-height: 18px;}/* 分类页样式 end */]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>这里有我的各项文章标签</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/runtime/runtime.css"/>
      <url>/css/runtime/runtime.css</url>
      
        <content type="html"><![CDATA[div#runtime{width:180px;margin:auto;color:#ffffffa6;padding-inline:5px;border-radius:10px;background-color:rgba(0,0,0,.7)}#workboard{font-size:12px}[data-theme=dark] div#runtime{color:#28b4c8;box-shadow:0 0 5px rgba(28,69,218,.71);animation:flashlight 1s linear infinite alternate}#ghbdages .github-badge img{height:20px}@-moz-keyframes flashlight{from{box-shadow:0 0 5px #1478d2}to{box-shadow:0 0 2px #1478d2}}@-webkit-keyframes flashlight{from{box-shadow:0 0 5px #1478d2}to{box-shadow:0 0 2px #1478d2}}@-o-keyframes flashlight{from{box-shadow:0 0 5px #1478d2}to{box-shadow:0 0 2px #1478d2}}@keyframes flashlight{from{box-shadow:0 0 5px #1478d2}to{box-shadow:0 0 2px #1478d2}}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/runtime/runtime.js"/>
      <url>/js/runtime/runtime.js</url>
      
        <content type="html"><![CDATA[var now=new Date;function createtime(){var t=new Date("07/26/2024 00:00:00");now.setTime(now.getTime()+250);var e=(now-t)/1e3/60/60/24,a=Math.floor(e),n=(now-t)/1e3/60/60-24*a,r=Math.floor(n);1==String(r).length&&(r="0"+r);var s=(now-t)/1e3/60-1440*a-60*r,i=Math.floor(s);1==String(i).length&&(i="0"+i);var o=(now-t)/1e3-86400*a-3600*r-60*i,l=Math.round(o);1==String(l).length&&(l="0"+l);let g="";g=r<18&&r>=9?`<img class='boardsign' src='https://img.shields.io/badge/ThiRTy_30-%E8%AE%A4%E7%9C%9F%E4%B8%8A%E7%8F%AD%E4%B8%AD-yellow?style=for-the-badge&labelColor=green' title='奋进是永恒的主题！'><span class='textTip'> <br> 本站居然运行了 ${a} 天</span><span id='runtime'> ${r} 小时 ${i} 分 ${l} 秒 </span> <i class='fas fa-heartbeat' style='color:red'></i>`:`<img class='boardsign' src='https://img.shields.io/badge/ThiRTy_30-%E4%B8%8D%E4%B8%8B%E7%8F%AD-blue?style=for-the-badge&labelColor=green' title='对国家没有用的人才下班'><span class='textTip'> <br> 本站居然运行了 ${a} 天</span><span id='runtime'> ${r} 小时 ${i} 分 ${l} 秒 </span> <i class='fas fa-heartbeat' style='color:red'></i>`,document.getElementById("workboard")&&(document.getElementById("workboard").innerHTML=g)}setInterval(()=>{createtime()},250);]]></content>
      
    </entry>
    
    
  
</search>
