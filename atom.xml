<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ThiRTy_30`Blog</title>
  
  <subtitle>一万年太久, 只争朝夕</subtitle>
  <link href="https://thirty30ww.github.io/atom.xml" rel="self"/>
  
  <link href="https://thirty30ww.github.io/"/>
  <updated>2024-09-13T01:04:16.063Z</updated>
  <id>https://thirty30ww.github.io/</id>
  
  <author>
    <name>ThiRTy_30</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>数据库查询语言DQL</title>
    <link href="https://thirty30ww.github.io/posts/9ed5776f.html"/>
    <id>https://thirty30ww.github.io/posts/9ed5776f.html</id>
    <published>2024-09-13T08:35:14.000Z</published>
    <updated>2024-09-13T01:04:16.063Z</updated>
    
    <content type="html"><![CDATA[<details class="folding-tag" cyan><summary> 点击查看该文章的更新日志 </summary>              <div class='content'>              <div class="timeline blue"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>更新日志</p></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2024-09-13</p></div></div><div class='timeline-item-content'><ol><li>重点在结语</li></ol></div></div></div>              </div>            </details><h1 id="数据库查询语言-DQL"><a href="#数据库查询语言-DQL" class="headerlink" title="数据库查询语言 DQL"></a>数据库查询语言 DQL</h1><p>DQL 在 MySQL 中可以说是最重要也较为复杂的，我们需要花时间单独学习</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> 要查询的列名称</span><br><span class="line"><span class="keyword">FROM</span> 表名称</span><br><span class="line"><span class="keyword">WHERE</span> 限定条件 （ 行条件 ）</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> grouping_columns （对结果分组）</span><br><span class="line"><span class="keyword">HAVING</span> <span class="keyword">condition</span> （分组后的行条件 ）</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> sorting_columns （对结果分组）</span><br><span class="line">LIMIT offset_start，row_count （结果限定）</span><br></pre></td></tr></table></figure><h2 id="添加示例数据"><a href="#添加示例数据" class="headerlink" title="添加示例数据"></a>添加示例数据</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"># 创建 student 表</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> student</span><br><span class="line">(</span><br><span class="line">    StudentNo   <span class="type">int</span>               <span class="keyword">not</span> <span class="keyword">null</span></span><br><span class="line">        <span class="keyword">primary</span> key,</span><br><span class="line">    LoginPwd    <span class="type">varchar</span>(<span class="number">20</span>)       <span class="keyword">null</span>,</span><br><span class="line">    StudentName <span class="type">varchar</span>(<span class="number">20</span>)       <span class="keyword">null</span>,</span><br><span class="line">    Sex         enum (<span class="string">&#x27;男&#x27;</span>, <span class="string">&#x27;女&#x27;</span>) <span class="keyword">null</span>,</span><br><span class="line">    GradeID     <span class="type">int</span>               <span class="keyword">null</span></span><br><span class="line">)</span><br><span class="line">    engine <span class="operator">=</span> MyISAM</span><br><span class="line">    charset <span class="operator">=</span> utf8mb3;</span><br><span class="line"># 插入数据</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> school.student (StudentNo, LoginPwd, StudentName, Sex, GradeID)</span><br><span class="line"><span class="keyword">values</span>  (<span class="number">1000</span>, <span class="string">&#x27;1241&#x27;</span>, <span class="string">&#x27;dsaf&#x27;</span>, <span class="string">&#x27;男&#x27;</span>, <span class="number">2</span>),</span><br><span class="line">        (<span class="number">1001</span>, <span class="string">&#x27;6666&#x27;</span>, <span class="string">&#x27;dfdj&#x27;</span>, <span class="string">&#x27;女&#x27;</span>, <span class="number">2</span>),</span><br><span class="line">        (<span class="number">1002</span>, <span class="string">&#x27;1633&#x27;</span>, <span class="string">&#x27;fangziye&#x27;</span>, <span class="string">&#x27;女&#x27;</span>, <span class="number">3</span>),</span><br><span class="line">        (<span class="number">1003</span>, <span class="string">&#x27;1645&#x27;</span>, <span class="string">&#x27;wanlei&#x27;</span>, <span class="string">&#x27;男&#x27;</span>, <span class="number">2</span>),</span><br><span class="line">        </span><br><span class="line"># 创建 <span class="keyword">result</span> 表</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> <span class="keyword">result</span></span><br><span class="line">(</span><br><span class="line">    StudentNo     <span class="type">int</span>      <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">    SubjectNo     <span class="type">int</span>      <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">    ExamDate      datetime <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">    StudentResult <span class="type">int</span>      <span class="keyword">null</span></span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> index SubjectNo</span><br><span class="line">    <span class="keyword">on</span> <span class="keyword">result</span> (SubjectNo);</span><br><span class="line"># 添加表格数据</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> school.result (StudentNo, SubjectNo, ExamDate, StudentResult)</span><br><span class="line"><span class="keyword">values</span>  (<span class="number">1000</span>, <span class="number">1</span>, <span class="string">&#x27;2019-10-21 16:00:00.0&#x27;</span>, <span class="number">95</span>),</span><br><span class="line">        (<span class="number">1001</span>, <span class="number">1</span>, <span class="string">&#x27;2019-10-21 16:00:00.0&#x27;</span>, <span class="number">98</span>),</span><br><span class="line">        (<span class="number">1000</span>, <span class="number">2</span>, <span class="string">&#x27;2019-10-21 16:00:00.0&#x27;</span>, <span class="number">86</span>),</span><br><span class="line">        (<span class="number">1001</span>, <span class="number">3</span>, <span class="string">&#x27;2019-10-21 16:00:00.0&#x27;</span>, <span class="number">98</span>),</span><br><span class="line">        (<span class="number">1002</span>, <span class="number">1</span>, <span class="string">&#x27;2019-10-21 16:00:00.0&#x27;</span>, <span class="number">95</span>),</span><br><span class="line">        (<span class="number">1002</span>, <span class="number">2</span>, <span class="string">&#x27;2019-10-21 16:00:00.0&#x27;</span>, <span class="number">90</span>),</span><br><span class="line">        (<span class="number">1000</span>, <span class="number">3</span>, <span class="string">&#x27;2019-10-21 16:00:00.0&#x27;</span>, <span class="number">90</span>),</span><br><span class="line">        (<span class="number">1001</span>, <span class="number">2</span>, <span class="string">&#x27;2019-10-21 16:00:00.0&#x27;</span>, <span class="number">87</span>),</span><br><span class="line">        (<span class="number">1002</span>, <span class="number">3</span>, <span class="string">&#x27;2019-10-21 16:00:00.0&#x27;</span>, <span class="number">89</span>),</span><br><span class="line">        (<span class="number">1003</span>, <span class="number">1</span>, <span class="string">&#x27;2019-10-21 16:00:00.0&#x27;</span>, <span class="number">90</span>);</span><br></pre></td></tr></table></figure><h2 id="简单查询"><a href="#简单查询" class="headerlink" title="简单查询"></a>简单查询</h2><p>查询 student 表中的所有列</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span><span class="keyword">from</span> student;</span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+----------+-------------+------+---------+</span></span><br><span class="line"><span class="operator">|</span> StudentNo <span class="operator">|</span> LoginPwd <span class="operator">|</span> StudentName <span class="operator">|</span> Sex  <span class="operator">|</span> GradeID <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+----------+-------------+------+---------+</span></span><br><span class="line"><span class="operator">|</span>      <span class="number">1000</span> <span class="operator">|</span> <span class="number">1241</span>     <span class="operator">|</span> dsaf        <span class="operator">|</span> 男   <span class="operator">|</span>       <span class="number">2</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>      <span class="number">1001</span> <span class="operator">|</span> <span class="number">6666</span>     <span class="operator">|</span> dfdj        <span class="operator">|</span> 女   <span class="operator">|</span>       <span class="number">2</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>      <span class="number">1002</span> <span class="operator">|</span> <span class="number">1633</span>     <span class="operator">|</span> fangziye    <span class="operator">|</span> 女   <span class="operator">|</span>       <span class="number">3</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>      <span class="number">1003</span> <span class="operator">|</span> <span class="number">1645</span>     <span class="operator">|</span> wanlei      <span class="operator">|</span> 男   <span class="operator">|</span>       <span class="number">2</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>      <span class="number">1004</span> <span class="operator">|</span> <span class="number">1646</span>     <span class="operator">|</span> Jake        <span class="operator">|</span> 男   <span class="operator">|</span>       <span class="number">3</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>      <span class="number">1005</span> <span class="operator">|</span> <span class="number">1647</span>     <span class="operator">|</span> Mike        <span class="operator">|</span> 男   <span class="operator">|</span>       <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+----------+-------------+------+---------+</span></span><br></pre></td></tr></table></figure><p>查询指定列的信息</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> StudentNo,Sex,GradeID <span class="keyword">from</span> student;</span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+------+---------+</span></span><br><span class="line"><span class="operator">|</span> StudentNo <span class="operator">|</span> Sex  <span class="operator">|</span> GradeID <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+------+---------+</span></span><br><span class="line"><span class="operator">|</span>      <span class="number">1000</span> <span class="operator">|</span> 男   <span class="operator">|</span>       <span class="number">2</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>      <span class="number">1001</span> <span class="operator">|</span> 女   <span class="operator">|</span>       <span class="number">2</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>      <span class="number">1002</span> <span class="operator">|</span> 女   <span class="operator">|</span>       <span class="number">3</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>      <span class="number">1003</span> <span class="operator">|</span> 男   <span class="operator">|</span>       <span class="number">2</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>      <span class="number">1004</span> <span class="operator">|</span> 男   <span class="operator">|</span>       <span class="number">3</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>      <span class="number">1005</span> <span class="operator">|</span> 男   <span class="operator">|</span>       <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+------+---------+</span></span><br></pre></td></tr></table></figure><h2 id="条件查询"><a href="#条件查询" class="headerlink" title="条件查询"></a>条件查询</h2><p>条件查询就是在查询时给出<code>where</code>的子句，在<code>where</code>子句中可以使用如下运算符及关键字：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">= 、!= 、 &lt;&gt;(不等于) 、&lt; 、&lt;= 、&gt; 、&gt;= ; BETWEEN…AND; IN(set); IS NULL; AND; OR; NOT;</span><br></pre></td></tr></table></figure><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><blockquote><p>我在网上发现一篇文章写的非常具体，<a href="[数据库基础——DQL数据查询（常用语句）_dql常用语法-CSDN博客](https://blog.csdn.net/weixin_45819587/article/details/119835014">不如直接去看那篇文章吧</a>)</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;details class=&quot;folding-tag&quot; cyan&gt;&lt;summary&gt; 点击查看该文章的更新日志 &lt;/summary&gt;
              &lt;div class=&#39;content&#39;&gt;
              &lt;div class=&quot;timeline b</summary>
      
    
    
    
    <category term="数据库" scheme="https://thirty30ww.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
    <category term="数据库" scheme="https://thirty30ww.github.io/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>SpringMVC简介与环境配置</title>
    <link href="https://thirty30ww.github.io/posts/9d62d4dd.html"/>
    <id>https://thirty30ww.github.io/posts/9d62d4dd.html</id>
    <published>2024-09-10T18:37:37.000Z</published>
    <updated>2024-09-13T01:04:16.063Z</updated>
    
    <content type="html"><![CDATA[<details class="folding-tag" cyan><summary> 点击查看该文章的更新日志 </summary>              <div class='content'>              <div class="timeline blue"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>更新日志</p></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2024-09-11</p></div></div><div class='timeline-item-content'><ol><li>SpringMVC简介</li><li>配置环境并搭建项目</li><li>配置视图解析器和控制器</li></ol></div></div></div>              </div>            </details><h1 id="SpringMVC简介"><a href="#SpringMVC简介" class="headerlink" title="SpringMVC简介"></a>SpringMVC简介</h1><p>网站的开发有三层架构，如下图所示</p><p><img src="https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fs4.51cto.com%2Fwyfs02%2FM00%2F8B%2FBA%2FwKioL1hXU8vRX8elAAA2bXqAxMs799.png&amp;refer=http%3A%2F%2Fs4.51cto.com&amp;app=2002&amp;size=f9999,10000&amp;q=a80&amp;n=0&amp;g=0n&amp;fmt=jpeg?sec=1641788288&amp;t=1658084627505c12812596d8ca1b9885" alt="点击查看源网页"></p><p>每一层都有着各自的职责，其中最关键的当属表示层，因为它相当于就是直接与用户的浏览器打交道的一层，并且所有的请求都会经过它进行解析，然后再告知业务层进行处理，任何页面的返回和数据填充也全靠表示层来完成，因此它实际上是整个三层架构中最关键的一层。</p><p>MVC解释如下：</p><ul><li>M是指业务模型（Model）：通俗的讲就是我们之前用于封装数据传递的实体类。</li><li>V是指用户界面（View）：一般指的是前端页面。</li><li>C则是控制器（Controller）：控制器就相当于Servlet的基本功能，处理请求，返回响应。</li></ul><h1 id="配置环境并搭建项目"><a href="#配置环境并搭建项目" class="headerlink" title="配置环境并搭建项目"></a>配置环境并搭建项目</h1><p>首先创建一个 Jakarta EE 项目，将不需要的文件删除，接着有些文件需要创建，最后的文件如下</p><p><img src="https://thirty30ww.oss-cn-hangzhou.aliyuncs.com/img/202409111457204.png" alt="image-20240911145756173" style="zoom:67%;" /></p><h2 id="注入依赖"><a href="#注入依赖" class="headerlink" title="注入依赖"></a>注入依赖</h2><p>添加SpringMVC的依赖：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-webmvc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>6.0.10<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="添加配置"><a href="#添加配置" class="headerlink" title="添加配置"></a>添加配置</h2><p>接着我们在根目录下创建 <code>config</code> 包，在其中创建 <code>MainInitializer</code> 类和 <code>WebConfiguration</code> 类，编写以下代码</p><p>首先是 <code>MainInitializer</code> </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainInitializer</span> <span class="keyword">extends</span> <span class="title class_">AbstractAnnotationConfigDispatcherServletInitializer</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> Class&lt;?&gt;[] getRootConfigClasses() &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Class</span>[]&#123;WebConfiguration.class&#125;;   <span class="comment">//基本的Spring配置类，一般用于业务层配置</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> Class&lt;?&gt;[] getServletConfigClasses() &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Class</span>[<span class="number">0</span>];  <span class="comment">//配置DispatcherServlet的配置类、主要用于Controller等配置</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> String[] getServletMappings() &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">String</span>[]&#123;<span class="string">&quot;/&quot;</span>&#125;;    <span class="comment">//匹配路径，与上面一致</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接着是  <code>WebConfiguration</code>  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@EnableWebMvc</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@ComponentScan(&quot;com.example.controller&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WebConfiguration</span> &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="尝试运行"><a href="#尝试运行" class="headerlink" title="尝试运行"></a>尝试运行</h2><p>我们在根目录下创建 <code>controller</code> 包，并创建 <code>MainController</code> 类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainController</span> &#123;</span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="meta">@RequestMapping(&quot;/&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">index</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Hello World!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接下来就可以成功运行啦！</p><h1 id="配置视图解析器和控制器"><a href="#配置视图解析器和控制器" class="headerlink" title="配置视图解析器和控制器"></a>配置视图解析器和控制器</h1><h2 id="注入依赖-1"><a href="#注入依赖-1" class="headerlink" title="注入依赖"></a>注入依赖</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.thymeleaf<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>thymeleaf-spring6<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1.1.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="添加配置与运行"><a href="#添加配置与运行" class="headerlink" title="添加配置与运行"></a>添加配置与运行</h2><p>我们需要将对应的<code>ViewResolver</code>注册为Bean即可，在 <code>WebConfiguration</code> 配置类中编写如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@EnableWebMvc</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@ComponentScan(&quot;com.example.controller&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WebConfiguration</span> <span class="keyword">implements</span> <span class="title class_">WebMvcConfigurer</span> &#123;</span><br><span class="line">    <span class="comment">//我们需要使用ThymeleafViewResolver作为视图解析器，并解析我们的HTML页面</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> ThymeleafViewResolver <span class="title function_">thymeleafViewResolver</span><span class="params">(<span class="meta">@Autowired</span> SpringTemplateEngine springTemplateEngine)</span>&#123;</span><br><span class="line">        <span class="type">ThymeleafViewResolver</span> <span class="variable">resolver</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ThymeleafViewResolver</span>();</span><br><span class="line">        resolver.setOrder(<span class="number">1</span>);   <span class="comment">//可以存在多个视图解析器，并且可以为他们设定解析顺序</span></span><br><span class="line">        resolver.setCharacterEncoding(<span class="string">&quot;UTF-8&quot;</span>);   <span class="comment">//编码格式是重中之重</span></span><br><span class="line">        resolver.setTemplateEngine(springTemplateEngine);   <span class="comment">//和之前JavaWeb阶段一样，需要使用模板引擎进行解析，所以这里也需要设定一下模板引擎</span></span><br><span class="line">        <span class="keyword">return</span> resolver;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//配置模板解析器</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> SpringResourceTemplateResolver <span class="title function_">templateResolver</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">SpringResourceTemplateResolver</span> <span class="variable">resolver</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SpringResourceTemplateResolver</span>();</span><br><span class="line">        resolver.setSuffix(<span class="string">&quot;.html&quot;</span>);   <span class="comment">//需要解析的后缀名称</span></span><br><span class="line">        resolver.setPrefix(<span class="string">&quot;classpath:&quot;</span>);   <span class="comment">//需要解析的HTML页面文件存放的位置</span></span><br><span class="line">        resolver.setCharacterEncoding(<span class="string">&quot;UTF-8&quot;</span>);  <span class="comment">// 确保设置字符编码为 UTF-8</span></span><br><span class="line">        <span class="keyword">return</span> resolver;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//配置模板引擎Bean</span></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> SpringTemplateEngine <span class="title function_">springTemplateEngine</span><span class="params">(<span class="meta">@Autowired</span> ITemplateResolver resolver)</span>&#123;</span><br><span class="line">        <span class="type">SpringTemplateEngine</span> <span class="variable">engine</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SpringTemplateEngine</span>();</span><br><span class="line">        engine.setTemplateResolver(resolver);   <span class="comment">//模板解析器，默认即可</span></span><br><span class="line">        <span class="keyword">return</span> engine;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">configureDefaultServletHandling</span><span class="params">(DefaultServletHandlerConfigurer configurer)</span> &#123;</span><br><span class="line">        configurer.enable();   <span class="comment">//开启默认的Servlet</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addResourceHandlers</span><span class="params">(ResourceHandlerRegistry registry)</span> &#123;</span><br><span class="line">        registry.addResourceHandler(<span class="string">&quot;/static/**&quot;</span>).addResourceLocations(<span class="string">&quot;classpath:/static/&quot;</span>);</span><br><span class="line">        <span class="comment">//配置静态资源的访问路径</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>MainController</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainController</span> &#123;</span><br><span class="line">    <span class="meta">@RequestMapping(value = &quot;/&quot;)</span>   <span class="comment">//直接填写访问路径</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">index</span><span class="params">(Model model)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;index&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>index.html</code></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>测试<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;static/test.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>欢迎光临<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--&lt;p th:text = $&#123;name&#125;&gt; &lt;/p&gt;--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>test.js</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">alert</span>(<span class="string">&quot;你好&quot;</span>)</span><br></pre></td></tr></table></figure><p>最后运行就会发现直接访问了HTML页面了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;details class=&quot;folding-tag&quot; cyan&gt;&lt;summary&gt; 点击查看该文章的更新日志 &lt;/summary&gt;
              &lt;div class=&#39;content&#39;&gt;
              &lt;div class=&quot;timeline b</summary>
      
    
    
    
    <category term="SpringMVC" scheme="https://thirty30ww.github.io/categories/SpringMVC/"/>
    
    
    <category term="SpringMVC" scheme="https://thirty30ww.github.io/tags/SpringMVC/"/>
    
  </entry>
  
  <entry>
    <title>Mybatis整合</title>
    <link href="https://thirty30ww.github.io/posts/b320b50b.html"/>
    <id>https://thirty30ww.github.io/posts/b320b50b.html</id>
    <published>2024-09-10T14:46:51.000Z</published>
    <updated>2024-09-13T01:04:16.063Z</updated>
    
    <content type="html"><![CDATA[<details class="folding-tag" cyan><summary> 点击查看该文章的更新日志 </summary>              <div class='content'>              <div class="timeline blue"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>更新日志</p></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'></div></div><div class='timeline-item-content'><ol><li>整合 Mybatis 框架</li></ol></div></div></div>              </div>            </details><h1 id="整合-Mybatis-框架"><a href="#整合-Mybatis-框架" class="headerlink" title="整合 Mybatis 框架"></a>整合 Mybatis 框架</h1><p>本文主要是记录 Mybatis 如何与 Spring 更好的结合</p><p>比如我们现在希望将SqlSessionFactory交给IoC容器进行管理，而不是我们自己创建工具类来管理（我们之前一直都在使用工具类管理和创建会话）</p><h2 id="导入依赖"><a href="#导入依赖" class="headerlink" title="导入依赖"></a>导入依赖</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>6.0.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.18.34<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.0.33<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.16<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis-spring<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.0.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>6.0.10<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="框架使用"><a href="#框架使用" class="headerlink" title="框架使用"></a>框架使用</h2><p>在mybatis-spring依赖中，为我们提供了<code>SqlSessionTemplate</code>类，它其实就是官方封装的一个工具类，我们可以将其注册为Bean，这样我们随时都可以向IoC容器索要，而不用自己再去编写一个工具类了，我们可以直接在配置类中创建：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@EnableAspectJAutoProxy</span></span><br><span class="line"><span class="meta">@ComponentScan(&quot;com.book.entity&quot;)</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainConfiguration</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> SqlSessionTemplate <span class="title function_">sqlSessionTemplate</span><span class="params">()</span> <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        <span class="type">SqlSessionFactory</span> <span class="variable">factory</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">SqlSessionFactoryBuilder</span>().build(Resources.getResourceAsReader(<span class="string">&quot;mybatis-config.xml&quot;</span>));</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">SqlSessionTemplate</span>(factory);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在 resources 中创建 mybatis 配置文件 <code>mybatis-config.xml</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">configuration</span></span></span><br><span class="line"><span class="meta">        <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- configuration核心配置文件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>/&gt;</span></span><br><span class="line">                <span class="comment">&lt;!-- com.mysql.cj.jdbc.Driver --&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql://localhost:3306/study&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;778105&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">class</span>=<span class="string">&quot;com.book.mapper.TestMapper&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><p> 创建映射器，创建 mapper 包在其中创建 TestMapper 接口，编写如下代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">TestMapper</span> &#123;</span><br><span class="line">    <span class="meta">@Select(&quot;select * from users where id = 1&quot;)</span></span><br><span class="line">    Student <span class="title function_">getStudent</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>创建对应的实体类，entity包下创建 Student 类，编写如下代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> &#123;</span><br><span class="line">    <span class="type">int</span> id;</span><br><span class="line">    String username;</span><br><span class="line">    String password;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>最后成功得到Student实体类，证明<code>SqlSessionTemplate</code>成功注册为Bean可以使用了。虽然这样已经很方便了，但是还不够方便，我们依然需要手动去获取Mapper对象，那么能否直接得到对应的Mapper对象呢，我们希望让Spring直接帮助我们管理所有的Mapper，当需要时，可以直接从容器中获取，我们可以直接在配置类上方添加注解：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@MapperScan(&quot;com.book.mapper&quot;)</span></span><br></pre></td></tr></table></figure><p>这样，Spring会自动扫描所有的Mapper，并将其实现注册为Bean，那么我们现在就可以直接通过容器获取了：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">AnnotationConfigApplicationContext</span> <span class="variable">context</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AnnotationConfigApplicationContext</span>(MainConfiguration.class);</span><br><span class="line">        <span class="type">TestMapper</span> <span class="variable">testMapper</span> <span class="operator">=</span> context.getBean(TestMapper.class);</span><br><span class="line">        System.out.println(testMapper.getStudent());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>请一定注意，必须存在<code>SqlSessionTemplate</code>或是<code>SqlSessionFactoryBean</code>的Bean，否则会无法初始化（毕竟要数据库的链接信息）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;details class=&quot;folding-tag&quot; cyan&gt;&lt;summary&gt; 点击查看该文章的更新日志 &lt;/summary&gt;
              &lt;div class=&#39;content&#39;&gt;
              &lt;div class=&quot;timeline b</summary>
      
    
    
    
    <category term="Spring" scheme="https://thirty30ww.github.io/categories/Spring/"/>
    
    
    <category term="Mybatis" scheme="https://thirty30ww.github.io/tags/Mybatis/"/>
    
    <category term="Spring" scheme="https://thirty30ww.github.io/tags/Spring/"/>
    
  </entry>
  
  <entry>
    <title>AOP</title>
    <link href="https://thirty30ww.github.io/posts/92933cdb.html"/>
    <id>https://thirty30ww.github.io/posts/92933cdb.html</id>
    <published>2024-09-10T11:14:25.000Z</published>
    <updated>2024-09-13T01:04:16.063Z</updated>
    
    <content type="html"><![CDATA[<details class="folding-tag" cyan><summary> 点击查看该文章的更新日志 </summary>              <div class='content'>              <div class="timeline blue"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>更新日志</p></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'></div></div><div class='timeline-item-content'><ol><li>使用 SpringAOP</li></ol></div></div></div>              </div>            </details><h1 id="面向切面-AOP"><a href="#面向切面-AOP" class="headerlink" title="面向切面 AOP"></a>面向切面 AOP</h1><p>听起来高大上，AOP思想实际上就是：在运行时，动态地将代码切入到类的指定方法、指定位置上的编程思想就是面向切面的编程。也就是说，我们可以使用AOP来帮助我们在方法执行前或执行之后，做一些额外的操作，实际上，就是代理！</p><h1 id="使用-SpringAOP"><a href="#使用-SpringAOP" class="headerlink" title="使用 SpringAOP"></a>使用 SpringAOP</h1><p>Spring是支持AOP编程的框架之一</p><h2 id="导入依赖"><a href="#导入依赖" class="headerlink" title="导入依赖"></a>导入依赖</h2><p>要使用AOP我们需要先导入一个依赖：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-aspects<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>6.0.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="注解实现"><a href="#注解实现" class="headerlink" title="注解实现"></a>注解实现</h2><p>那么，如何使用AOP呢？首先我们要明确，要实现AOP操作，我们需要知道这些内容：</p><ol><li>需要切入的类，类的哪个方法需要被切入</li><li>切入之后需要执行什么动作</li><li>是在方法执行前切入还是在方法执行后切入</li><li>如何告诉Spring需要进行切入</li></ol><p>首先要找到需要切入的类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component(&quot;student&quot;)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> &#123;</span><br><span class="line">    String name;</span><br><span class="line">    <span class="type">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">test</span><span class="params">(String str)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;我是一个测试方法：&quot;</span>+str);</span><br><span class="line">        <span class="keyword">return</span> str.length();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>现在我们希望在<code>test</code>方法执行前后添加我们的额外执行的内容，接着，我们来看看如何为方法执行前和执行后添加切入动作。比如现在我们想在方法返回之后，再执行我们的动作，首先定义我们要执行的操作：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StudentAOP</span> &#123;</span><br><span class="line">    <span class="comment">//执行之后的方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">after</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;我是执行之后&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//执行之前的方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">before</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;我是执行之前&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>那么，现在如何告诉Spring我们需要在方法执行之前和之后插入其他逻辑呢？首先我们将要进行AOP操作的类注册为Bean：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StudentAOP</span> &#123;</span><br><span class="line">    <span class="comment">//执行之后的方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">after</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;我是执行之后&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//执行之前的方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">before</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;我是执行之前&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接着来看如何通过注解实现AOP操作，首先我们需要在Bean的配置类中添加<code>@EnableAspectJAutoProxy</code>注解，开启AOP注解支持：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@EnableAspectJAutoProxy</span></span><br><span class="line"><span class="meta">@ComponentScan(&quot;com.book.entity&quot;)</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainConfiguration</span> &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接着我们只需在定义AOP增强操作的类上添加<code>@Aspect</code>注解</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Aspect</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StudentAOP</span> &#123;</span><br><span class="line">    <span class="comment">//执行之后的方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">after</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;我是执行之后&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//执行之前的方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">before</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;我是执行之前&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接着，我们要将 StudentAOP 中编写的方法切入到 Student 的 test 方法中</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Aspect</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StudentAOP</span> &#123;</span><br><span class="line">    <span class="comment">//执行之后的方法</span></span><br><span class="line">    <span class="meta">@After(&quot;execution(* com.book.entity.Student.test(..))&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">after</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;我是执行之后&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//执行之前的方法</span></span><br><span class="line">    <span class="meta">@Before(&quot;execution(* com.book.entity.Student.test(..))&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">before</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;我是执行之前&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中，<code>expression</code>属性的<code>execution</code>填写格式如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">修饰符 包名.类名.方法名称(方法参数)</span><br></pre></td></tr></table></figure><ul><li>修饰符：public、protected、private、包括返回值类型、static等等（使用*代表任意修饰符）</li><li>包名：如com.test（<em>代表全部，比如com.</em>代表com包下的全部包）</li><li>类名：使用*也可以代表包下的所有类</li><li>方法名称：可以使用*代表全部方法</li><li>方法参数：填写对应的参数即可，比如(String, String)，也可以使用*来代表任意一个参数，使用..代表所有参数。</li></ul><p>也可以使用其他属性来进行匹配，比如<code>@annotation</code>可以用于表示标记了哪些注解的方法被切入。</p><p>最后在 Main 函数中编写调用 Student 中的 test 方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">AnnotationConfigApplicationContext</span> <span class="variable">context</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AnnotationConfigApplicationContext</span>(MainConfiguration.class);</span><br><span class="line">        <span class="type">Student</span> <span class="variable">bean</span> <span class="operator">=</span> context.getBean(<span class="string">&quot;student&quot;</span>, Student.class);</span><br><span class="line">        bean.test(<span class="string">&quot;AAA&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="获取切入点信息"><a href="#获取切入点信息" class="headerlink" title="获取切入点信息"></a>获取切入点信息</h2><p>可以为其添加<code>JoinPoint</code>参数来获取切入点信息，即上面输入的 AAA</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="meta">@Aspect</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StudentAOP</span> &#123;</span><br><span class="line">    <span class="comment">//执行之后的方法</span></span><br><span class="line">    <span class="meta">@After(&quot;execution(* com.book.entity.Student.test(..))&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">after</span><span class="params">(JoinPoint point)</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;我是执行之后&quot;</span> + Arrays.toString(point.getArgs()));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//执行之前的方法</span></span><br><span class="line">    <span class="meta">@Before(&quot;execution(* com.book.entity.Student.test(..))&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">before</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;我是执行之前&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="环绕方法"><a href="#环绕方法" class="headerlink" title="环绕方法"></a>环绕方法</h2><p>环绕方法相当于完全代理了此方法，它完全将此方法包含在中间，需要我们手动调用才可以执行此方法，并且我们可以直接获取更多的参数</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StudentAOP</span> &#123;</span><br><span class="line">    <span class="meta">@Around(&quot;execution(* com.book.entity.Student.test(..))&quot;)</span></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">around</span><span class="params">(ProceedingJoinPoint point)</span> <span class="keyword">throws</span> Throwable &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;我是执行之前&quot;</span>);</span><br><span class="line">        <span class="type">Object</span> <span class="variable">val</span> <span class="operator">=</span> point.proceed();</span><br><span class="line">        System.out.println(<span class="string">&quot;我是执行之后&quot;</span> + Arrays.toString(point.getArgs()));</span><br><span class="line">        <span class="keyword">return</span> val;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>将 studentAOP 修改为以下信息，输出结果与上面完全相同</p>]]></content>
    
    
      
      
    <summary type="html">&lt;details class=&quot;folding-tag&quot; cyan&gt;&lt;summary&gt; 点击查看该文章的更新日志 &lt;/summary&gt;
              &lt;div class=&#39;content&#39;&gt;
              &lt;div class=&quot;timeline b</summary>
      
    
    
    
    <category term="Spring" scheme="https://thirty30ww.github.io/categories/Spring/"/>
    
    
    <category term="Spring" scheme="https://thirty30ww.github.io/tags/Spring/"/>
    
    <category term="AOP" scheme="https://thirty30ww.github.io/tags/AOP/"/>
    
  </entry>
  
  <entry>
    <title>Spring框架简介及IoC</title>
    <link href="https://thirty30ww.github.io/posts/69ae272f.html"/>
    <id>https://thirty30ww.github.io/posts/69ae272f.html</id>
    <published>2024-09-09T16:56:40.000Z</published>
    <updated>2024-09-13T01:04:16.063Z</updated>
    
    <content type="html"><![CDATA[<details class="folding-tag" cyan><summary> 点击查看该文章的更新日志 </summary>              <div class='content'>              <div class="timeline blue"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>更新日志</p></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2024-09-10</p></div></div><div class='timeline-item-content'><ol><li>SSM的概念</li><li>Spring的简介</li><li>IoC理论基础</li><li>使用IoC容器</li></ol></div></div></div>              </div>            </details><h1 id="SSM的概念"><a href="#SSM的概念" class="headerlink" title="SSM的概念"></a>SSM的概念</h1><p>SSM，即（Spring + SpringMVC + Mybatis），首先学习的就是 Spring，当然也可以事先学学 Mybatis</p><h1 id="Spring的简介"><a href="#Spring的简介" class="headerlink" title="Spring的简介"></a>Spring的简介</h1><p>开发中会遇到开发效率太慢，对于对象创建和管理有很多不妥等问题，因此我们需要学习框架来简化和规范 Java 开发</p><p>而 Spring 正是为了简化开发而生，它是轻量级的<strong>IoC</strong>和<strong>AOP</strong>的容器框架，主要是针对<strong>JavaBean</strong>的生命周期进行管理的轻量级容器，并且它的生态已经发展得极为庞大。</p><p>那么首先我们得了解，么是<strong>IoC</strong>和<strong>AOP</strong>，什么又是<strong>JavaBean</strong>呢？</p><h1 id="JavaBean"><a href="#JavaBean" class="headerlink" title="JavaBean"></a>JavaBean</h1><p>JavaBean就是有一定规范的Java实体类，跟普通类差不多，不同的是类内部提供了一些公共的方法以便外界对该对象内部属性进行操作，比如set、get操作，实际上，就是我们之前一直在用的：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">User</span>&#123;</span><br><span class="line"><span class="keyword">private</span> String name;</span><br><span class="line"><span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span>&#123;</span><br><span class="line"><span class="keyword">return</span> name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> String <span class="title function_">getAge</span><span class="params">()</span>&#123;</span><br><span class="line"><span class="keyword">return</span> age;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span>&#123;</span><br><span class="line"><span class="built_in">this</span>.name = name;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(<span class="type">int</span> age)</span>&#123;</span><br><span class="line"><span class="built_in">this</span>.age = age;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>它的所有属性都是private，所有的属性都可以通过get/set方法进行访问，同时还需要有一个无参构造（默认就有）</p><p>因此我们之前编写的很多类，其实都可以是一个JavaBean。</p><h1 id="IoC理论基础"><a href="#IoC理论基础" class="headerlink" title="IoC理论基础"></a>IoC理论基础</h1><p>我们知道在面向对象设计的软件系统中，它的底层都是由N个对象构成的，各个对象之间通过相互合作，最终实现系统地业务逻辑，它们之间的关系就像连在一起的齿轮一样，谁都离不开谁</p><p><img src="https://thirty30ww.oss-cn-hangzhou.aliyuncs.com/img/202409091712526.png" alt="img"></p><p>就像一个团队，每个人的分工都很明确，流水线上的一套操作必须环环相扣，这是一种高度耦合的体系。但是对象之间耦合度过高的系统，必然会出现牵一发而动全身的情形。</p><p>而IoC，正是用来实现对象之间的“解耦”</p><p>IoC (Inversion of Control)，多数书籍翻译成“控制反转”，也叫“依赖注入”</p><p>IOC理论提出的观点大体是这样的：借助于“第三方”实现具有依赖关系的对象之间的解耦。如下图：</p><p><img src="https://thirty30ww.oss-cn-hangzhou.aliyuncs.com/img/202409091717058.png" alt="img"></p><h1 id="使用IoC容器"><a href="#使用IoC容器" class="headerlink" title="使用IoC容器"></a>使用IoC容器</h1><h2 id="导入依赖"><a href="#导入依赖" class="headerlink" title="导入依赖"></a>导入依赖</h2><p>我们创建一个新的Maven项目，并导入Spring框架的依赖，Spring框架的坐标：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-context<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>6.0.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><p>接下来的笔记只记录 IoC 的注解开发方式</p><p>首先创建在根目录下创建 config 包，再在其中创建作为配置的类 <code>MainConfiguration</code> ，编写以下内容</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainConfiguration</span> &#123;</span><br><span class="line">    <span class="comment">//没有配置任何Bean</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接着在主函数里编写</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//这里需要告诉Spring哪个类作为配置类</span></span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">AnnotationConfigApplicationContext</span>(MainConfiguration.class);</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样，一个最基本的 Spring 项目就创建完成了</p><h2 id="使用-IoC-容器注册-JavaBean"><a href="#使用-IoC-容器注册-JavaBean" class="headerlink" title="使用 IoC 容器注册 JavaBean"></a>使用 IoC 容器注册 JavaBean</h2><p>我们可以创建 entity 包再在其中创建 Student 类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 添加此注解即注册为 Bean</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> &#123;</span><br><span class="line">    String name;</span><br><span class="line">    <span class="type">int</span> age;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接着我们需要在配置文件中添加扫描 Student 类所在的包</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ComponentScan(&quot;com.book.entity&quot;)</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MainConfiguration</span> &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>现在，这个对象不需要我们再去用 new 生成了，而是由IoC容器来提供：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">AnnotationConfigApplicationContext</span> <span class="variable">context</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">AnnotationConfigApplicationContext</span>(MainConfiguration.class);</span><br><span class="line">        <span class="type">Student</span> <span class="variable">bean</span> <span class="operator">=</span> context.getBean(Student.class);</span><br><span class="line">        System.out.println(bean);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>有个迷惑的问题，为什么要这样来创建对象，我们直接new一个它不香吗？为什么要交给IoC容器管理呢？在后面的学习中，我们再慢慢进行体会。</p><h2 id="JavaBean-详细配置"><a href="#JavaBean-详细配置" class="headerlink" title="JavaBean 详细配置"></a>JavaBean 详细配置</h2><p>JavaBean 还有很多详细配置，等用到了再逐条记录</p>]]></content>
    
    
      
      
    <summary type="html">&lt;details class=&quot;folding-tag&quot; cyan&gt;&lt;summary&gt; 点击查看该文章的更新日志 &lt;/summary&gt;
              &lt;div class=&#39;content&#39;&gt;
              &lt;div class=&quot;timeline b</summary>
      
    
    
    
    <category term="Spring" scheme="https://thirty30ww.github.io/categories/Spring/"/>
    
    
    <category term="Spring" scheme="https://thirty30ww.github.io/tags/Spring/"/>
    
    <category term="IoC" scheme="https://thirty30ww.github.io/tags/IoC/"/>
    
  </entry>
  
  <entry>
    <title>数据库操作语言DML</title>
    <link href="https://thirty30ww.github.io/posts/3e80a187.html"/>
    <id>https://thirty30ww.github.io/posts/3e80a187.html</id>
    <published>2024-09-02T08:27:51.000Z</published>
    <updated>2024-09-13T01:04:16.063Z</updated>
    
    <content type="html"><![CDATA[<details class="folding-tag" cyan><summary> 点击查看该文章的更新日志 </summary>              <div class='content'>              <div class="timeline blue"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>更新日志</p></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2024-09-02</p></div></div><div class='timeline-item-content'><ol><li>可以进行什么操作</li><li>增删改</li></ol></div></div></div>              </div>            </details><h1 id="数据库操作语言-DML"><a href="#数据库操作语言-DML" class="headerlink" title="数据库操作语言 DML"></a>数据库操作语言 DML</h1><p>数据库操作语言用来操作数据库表中的记录，如对表中的数据增删改。</p><p>首先我们需要了解一下数据库查询语言中的查询表中所有数据的操作，以验证我们对表的增删改操作是否顺利执行。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span><span class="keyword">from</span> 表名</span><br></pre></td></tr></table></figure><p>创建 <code>student</code> 表数据如下</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator">+</span><span class="comment">-----+---------+--------+-------+</span></span><br><span class="line"><span class="operator">|</span> sid <span class="operator">|</span> name    <span class="operator">|</span> sex    <span class="operator">|</span> grade <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----+---------+--------+-------+</span></span><br><span class="line"><span class="operator">|</span>   <span class="number">1</span> <span class="operator">|</span> Merrick <span class="operator">|</span> male   <span class="operator">|</span>  <span class="number">2023</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>   <span class="number">6</span> <span class="operator">|</span> Addy    <span class="operator">|</span> female <span class="operator">|</span>  <span class="number">2022</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>   <span class="number">7</span> <span class="operator">|</span> Mike    <span class="operator">|</span> male   <span class="operator">|</span>  <span class="number">2024</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>   <span class="number">8</span> <span class="operator">|</span> Rose    <span class="operator">|</span> female <span class="operator">|</span>  <span class="number">2024</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>   <span class="number">9</span> <span class="operator">|</span> Jeck    <span class="operator">|</span> male   <span class="operator">|</span>  <span class="number">2023</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">10</span> <span class="operator">|</span> jeason  <span class="operator">|</span> male   <span class="operator">|</span>  <span class="number">2024</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>  <span class="number">11</span> <span class="operator">|</span> Bob     <span class="operator">|</span> male   <span class="operator">|</span>  <span class="number">2022</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----+---------+--------+-------+</span></span><br></pre></td></tr></table></figure><p>其建表语句如下</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> student</span><br><span class="line">(</span><br><span class="line">    sid   <span class="type">int</span> auto_increment</span><br><span class="line">        <span class="keyword">primary</span> key,</span><br><span class="line">    name  <span class="type">varchar</span>(<span class="number">255</span>)                           <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">    sex   enum (<span class="string">&#x27;male&#x27;</span>, <span class="string">&#x27;female&#x27;</span>) <span class="keyword">default</span> <span class="string">&#x27;male&#x27;</span> <span class="keyword">not</span> <span class="keyword">null</span>,</span><br><span class="line">    grade <span class="type">int</span>                                    <span class="keyword">not</span> <span class="keyword">null</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>接下来我们要对该表进行操作</p><h2 id="插入数据"><a href="#插入数据" class="headerlink" title="插入数据"></a>插入数据</h2><p>插入单条数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student(name, sex, grade) <span class="keyword">value</span>(<span class="string">&#x27;LiHua&#x27;</span>, <span class="string">&#x27;male&#x27;</span>, <span class="number">2021</span>);</span><br></pre></td></tr></table></figure><p>若要插入单条数据也可以把 <code>student</code> 后的括号及括号中的内容去掉，如下（用以下方法必须把所有列值都写出来，上面的方法则不用）</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student <span class="keyword">value</span>(<span class="string">&#x27;LiHua&#x27;</span>, <span class="string">&#x27;male&#x27;</span>, <span class="number">2021</span>);</span><br></pre></td></tr></table></figure><p>若要用一条语句插入多条数据，将 <code>value</code> 改为 <code>values</code> ，后面加多条数据即可</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> student <span class="keyword">values</span>(<span class="string">&#x27;LiHua&#x27;</span>, <span class="string">&#x27;male&#x27;</span>, <span class="number">2021</span>),(<span class="string">&#x27;Ammy&#x27;</span>, <span class="string">&#x27;female&#x27;</span>, <span class="number">2022</span>);</span><br></pre></td></tr></table></figure><h2 id="删除数据"><a href="#删除数据" class="headerlink" title="删除数据"></a>删除数据</h2><p>删除表里的所有数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">truncate</span> <span class="keyword">table</span> student;</span><br></pre></td></tr></table></figure><p>删除指定条件的数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> student <span class="keyword">where</span> sid <span class="operator">=</span> <span class="number">1</span>;</span><br></pre></td></tr></table></figure><p>以上操作删除了 <code>sid = 1</code> 的数据</p><h2 id="修改数据"><a href="#修改数据" class="headerlink" title="修改数据"></a>修改数据</h2><p>修改所有数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">update</span> student <span class="keyword">set</span> grade <span class="operator">=</span> <span class="number">2024</span></span><br></pre></td></tr></table></figure><p>将所有学生的 <code>grade</code> 修改为 2024</p><p>修改指定条件的数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">update</span> student <span class="keyword">set</span> grade <span class="operator">=</span> <span class="number">2023</span> <span class="keyword">where</span> sid <span class="operator">=</span> <span class="number">1</span>;</span><br></pre></td></tr></table></figure><p>修改 <code>sid = 1</code> 的学生的 <code>grade</code> 为 2023</p>]]></content>
    
    
      
      
    <summary type="html">&lt;details class=&quot;folding-tag&quot; cyan&gt;&lt;summary&gt; 点击查看该文章的更新日志 &lt;/summary&gt;
              &lt;div class=&#39;content&#39;&gt;
              &lt;div class=&quot;timeline b</summary>
      
    
    
    
    <category term="数据库" scheme="https://thirty30ww.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
    <category term="数据库" scheme="https://thirty30ww.github.io/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>Maven管理项目导入依赖</title>
    <link href="https://thirty30ww.github.io/posts/bbd32472.html"/>
    <id>https://thirty30ww.github.io/posts/bbd32472.html</id>
    <published>2024-08-30T19:39:33.000Z</published>
    <updated>2024-09-13T01:04:16.063Z</updated>
    
    <content type="html"><![CDATA[<details class="folding-tag" cyan><summary> 点击查看该文章的更新日志 </summary>              <div class='content'>              <div class="timeline blue"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>更新日志</p></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2024-08-30</p></div></div><div class='timeline-item-content'><ol><li>Maven 简介</li><li>Maven 配置</li><li>Maven 项目结构</li><li>Maven 导入依赖</li></ol></div></div></div>              </div>            </details><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>Maven 是一款项目管理工具</p><p>通过Maven，可以帮助我们做：</p><ul><li>项目的自动构建，包括代码的编译、测试、打包、安装、部署等操作。</li><li>依赖管理，项目使用到哪些依赖，可以快速完成导入。</li></ul><h1 id="Maven-的配置"><a href="#Maven-的配置" class="headerlink" title="Maven 的配置"></a>Maven 的配置</h1><p>Maven也需要安装环境，但是IDEA已经自带了Maven环境，因此我们不需要再去进行额外的环境安装</p><p><img src="https://thirty30ww.oss-cn-hangzhou.aliyuncs.com/img/202408302009373.png" alt="image-20240830194752099" style="zoom:50%;" /></p><p>在新建项目的时候选择 Maven 项目即可</p><h1 id="Maven-项目的结构"><a href="#Maven-项目的结构" class="headerlink" title="Maven 项目的结构"></a>Maven 项目的结构</h1><p>我们可以来看一下，一个Maven项目和我们普通的项目有什么区别：</p><div class="tabs" id="test1"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test1-1">Maven 项目目录</button><button type="button" class="tab " data-href="test1-2">Maven 项目结构图</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><p><img src="https://thirty30ww.oss-cn-hangzhou.aliyuncs.com/img/202408301951342.png" alt="image-20240830195109066" style="zoom:67%;" /></p></div><div class="tab-item-content" id="test1-2"><p><img src="https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fimg-blog.csdnimg.cn%2Fimg_convert%2F910235ebc812ba94abb0f762e3914f67.png&amp;refer=http%3A%2F%2Fimg-blog.csdnimg.cn&amp;app=2002&amp;size=f9999,10000&amp;q=a80&amp;n=0&amp;g=0n&amp;fmt=jpeg?sec=1639621411&amp;t=2a62e7ef9b056d8cbe772e34fea0cc6f" alt="img"></p></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><p>其中 POM 文件相当于整个 Maven 项目的配置文件，它是使用 XML 编写的</p><h2 id="Maven-依赖导入"><a href="#Maven-依赖导入" class="headerlink" title="Maven 依赖导入"></a>Maven 依赖导入</h2><p>现在我们尝试使用Maven来帮助我们快速导入依赖</p><p>我们可以创建一个<code>dependencies</code>节点：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    //里面填写的就是所有的依赖</span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><p>然后就可以向节点中填写依赖了</p><p>下面来导入我们常用的JDBC驱动依赖、JUnit依赖、Mybatis依赖、Lombok依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.18.34<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.junit.jupiter<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>junit-jupiter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>5.8.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.0.33<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.16<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>接下来我们需要刷新以下 Maven</p><p><img src="https://thirty30ww.oss-cn-hangzhou.aliyuncs.com/img/202408302005910.png" alt="image-20240830200520203" style="zoom: 67%;" /></p><p>我们需要的依赖就导入到外部库当中啦</p><p><img src="https://thirty30ww.oss-cn-hangzhou.aliyuncs.com/img/202408302006541.png" alt="image-20240830200651246" style="zoom:67%;" /></p><p>是不是很方便呢，当然 Maven 的作用不止这一项，当这确实是 Maven 一项非常实用的功能，多的作用留待以后慢慢介绍</p>]]></content>
    
    
      
      
    <summary type="html">&lt;details class=&quot;folding-tag&quot; cyan&gt;&lt;summary&gt; 点击查看该文章的更新日志 &lt;/summary&gt;
              &lt;div class=&#39;content&#39;&gt;
              &lt;div class=&quot;timeline b</summary>
      
    
    
    
    <category term="Java 升级之路" scheme="https://thirty30ww.github.io/categories/Java-%E5%8D%87%E7%BA%A7%E4%B9%8B%E8%B7%AF/"/>
    
    <category term="Maven" scheme="https://thirty30ww.github.io/categories/Java-%E5%8D%87%E7%BA%A7%E4%B9%8B%E8%B7%AF/Maven/"/>
    
    
    <category term="Maven" scheme="https://thirty30ww.github.io/tags/Maven/"/>
    
  </entry>
  
  <entry>
    <title>随记</title>
    <link href="https://thirty30ww.github.io/posts/f211d1c6.html"/>
    <id>https://thirty30ww.github.io/posts/f211d1c6.html</id>
    <published>2024-08-30T19:02:17.000Z</published>
    <updated>2024-09-13T01:04:16.063Z</updated>
    
    <content type="html"><![CDATA[<details class="folding-tag" cyan><summary> 点击查看该文章的更新日志 </summary>              <div class='content'>              <div class="timeline blue"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>更新日志</p></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2024-08-30</p></div></div><div class='timeline-item-content'><ol><li>前言</li><li>Lombok 使用链式写法</li><li>Mybatis 文件读取问题</li></ol></div></div></div>              </div>            </details><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>在 Java 升级之路中遇到大大小小的不好分门别类的问题，只要是一些小问题的记录，我将把它们写在这篇随记中</p><h1 id="Lombok"><a href="#Lombok" class="headerlink" title="Lombok"></a>Lombok</h1><p>这里将记录我学习 Lombok 时遇到的问题</p><h2 id="Lombok-使用链式写法"><a href="#Lombok-使用链式写法" class="headerlink" title="Lombok 使用链式写法"></a>Lombok 使用链式写法</h2><p>可以添加注释 <code>@Accessors(chain = true)</code> 来开启链式写法</p><p>在 <code>Student</code> 类中，编写以下代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="meta">@Accessors(chain = true)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> &#123;</span><br><span class="line">    <span class="type">int</span> StudentNo;</span><br><span class="line">    <span class="type">int</span> LoginPwd;</span><br><span class="line">    String StudentName;</span><br><span class="line">    String Sex;</span><br><span class="line">    <span class="type">int</span> GradeID;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接着，就可以这样调用该类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Student</span> <span class="variable">student</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>().setStudentNo(<span class="number">1</span>).setStudentName(<span class="string">&quot;Rose&quot;</span>).setLoginPwd(<span class="number">1000</span>).setSex(<span class="string">&quot;男&quot;</span>).setGradeID(<span class="number">4</span>);</span><br></pre></td></tr></table></figure><h1 id="Mybatis"><a href="#Mybatis" class="headerlink" title="Mybatis"></a>Mybatis</h1><h2 id="文件读取问题"><a href="#文件读取问题" class="headerlink" title="文件读取问题"></a>文件读取问题</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">factory = <span class="keyword">new</span> <span class="title class_">SqlSessionFactoryBuilder</span>().build(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;mybatis-config.xml&quot;</span>));</span><br><span class="line">factory = <span class="keyword">new</span> <span class="title class_">SqlSessionFactoryBuilder</span>().build(Resources.getResourceAsReader(<span class="string">&quot;mybatis-config.xml&quot;</span>));</span><br></pre></td></tr></table></figure><p>主要是需要分清楚这两者的区别</p><p>其实，当把 <code>mybatis-config.xml</code> 文件放在根目录下，如下图</p><p><img src="https://thirty30ww.oss-cn-hangzhou.aliyuncs.com/img/202408301910575.png" alt="image-20240830191056451" style="zoom:80%;" /></p><p>则使用 <code>new FileInputStream(&quot;mybatis-config.xml&quot;)</code></p><p>而当这是个 Maven 项目并且你把 <code>mybatis-config.xml</code> 文件放在 resources 目录下，如下图</p><p><img src="https://thirty30ww.oss-cn-hangzhou.aliyuncs.com/img/202408301913111.png" alt="image-20240830191351835" style="zoom:80%;" /></p><p>则使用 <code>Resources.getResourceAsReader(&quot;mybatis-config.xml&quot;)</code></p>]]></content>
    
    
      
      
    <summary type="html">&lt;details class=&quot;folding-tag&quot; cyan&gt;&lt;summary&gt; 点击查看该文章的更新日志 &lt;/summary&gt;
              &lt;div class=&#39;content&#39;&gt;
              &lt;div class=&quot;timeline b</summary>
      
    
    
    
    <category term="Java 升级之路" scheme="https://thirty30ww.github.io/categories/Java-%E5%8D%87%E7%BA%A7%E4%B9%8B%E8%B7%AF/"/>
    
    
    <category term="随记" scheme="https://thirty30ww.github.io/tags/%E9%9A%8F%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>初步学习Mybatis（增删改查）</title>
    <link href="https://thirty30ww.github.io/posts/12b1f7c5.html"/>
    <id>https://thirty30ww.github.io/posts/12b1f7c5.html</id>
    <published>2024-08-29T14:45:57.000Z</published>
    <updated>2024-09-13T01:04:16.063Z</updated>
    
    <content type="html"><![CDATA[<details class="folding-tag" cyan><summary> 点击查看该文章的更新日志 </summary>              <div class='content'>              <div class="timeline blue"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>更新日志</p></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2024-08-29</p></div></div><div class='timeline-item-content'><ol><li>Mybatis 简介</li><li>Mybatis 配置</li><li>Mybatis 初使用</li></ol></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2024-08-30</p></div></div><div class='timeline-item-content'><ol><li>使用注解进行开发</li><li>增删改查</li></ol></div></div></div>              </div>            </details><h1 id="Mybatis-简介"><a href="#Mybatis-简介" class="headerlink" title="Mybatis 简介"></a>Mybatis 简介</h1><p>学习了 Java 基本语法和 MySQL，我们需要利用 Mybatis 对数据库进行存取操作，实际上 Mybatis 是对 JDBC 进行了进一步封装，JDBC(<strong>J</strong>ava <strong>D</strong>ata<strong>B</strong>ase <strong>C</strong>onnectivity)，译为 Java 语言连接数据库。</p><p>而 Mybatis 相较于 JDBC，可以减少很多重复的代码块，更容易学习，提高开发效率。</p><p>当然，如果你没有学习过 JDBC，也完全没有关系，只需要掌握 MySQL 的基本操作，就可以愉快的学习相比 JDBC 更加易上手的 Mybatis 来和数据库进行交互啦</p><h1 id="Mybatis-的配置"><a href="#Mybatis-的配置" class="headerlink" title="Mybatis 的配置"></a>Mybatis 的配置</h1><ul><li><p>同样的我们可以下载后手动导入<a href="https://mybatis.org/mybatis-3/zh/configuration.html">与 MyBatis 相关的 jar 包</a><br><img src="https://thirty30ww.oss-cn-hangzhou.aliyuncs.com/img/202408291550133.png" alt="image-20240829155025446"><br>为了方便，我们引入以上三个 jar 包</p></li><li><p>另外当然也可以通过 Maven 导入依赖的方式</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.18.34<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.0.33<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.16<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="Mybatis-的初使用"><a href="#Mybatis-的初使用" class="headerlink" title="Mybatis 的初使用"></a>Mybatis 的初使用</h1><h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><p>打开一个普通项目，导入好依赖，我们可以编写 Mybatis 的配置文件了，我们通过一个 XML 文件去进行配置</p><p>在根目录下新建名为 <code>mybatis-config.xml</code> 的文件，并填写一下内容</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">configuration</span></span></span><br><span class="line"><span class="meta">  <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">  <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- configuration核心配置文件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;驱动类（含包名）&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- com.mysql.cj.jdbc.Driver --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;数据库连接URL&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;用户名&#125;&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;$&#123;密码&#125;&quot;</span>/&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><p>我们发现，在最上方还引入了一个叫做DTD（文档类型定义）的东西，它提前帮助我们规定了一些标签，我们就需要使用Mybatis提前帮助我们规定好的标签来进行配置（因为只有这样Mybatis才能正确识别我们配置的内容）</p><p>通过进行配置，我们就告诉了Mybatis我们链接数据库的一些信息，包括URL、用户名、密码等，这样Mybatis就知道该链接哪个数据库、使用哪个账号进行登陆了</p><h2 id="Mybatis-工具类"><a href="#Mybatis-工具类" class="headerlink" title="Mybatis 工具类"></a>Mybatis 工具类</h2><p>为了方便会话的创建，我们需要编写一个 Mybatis 工具类，在所在包目录下创建 utils/MybatisUtils.class，编写代码如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.school;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactoryBuilder;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.FileNotFoundException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MybatisUtils</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> SqlSessionFactory factory;</span><br><span class="line">    <span class="comment">//使用mybatis第一步，获取sqlSessionFactory对象</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            factory = <span class="keyword">new</span> <span class="title class_">SqlSessionFactoryBuilder</span>().build(<span class="keyword">new</span> <span class="title class_">FileInputStream</span>(<span class="string">&quot;mybatis-config.xml&quot;</span>));</span><br><span class="line">            <span class="comment">// new SqlSessionFactoryBuilder().build(...) 创建一个 SqlSessionFactory 实例</span></span><br><span class="line">            <span class="comment">// new FileInputStream(&quot;Mybatis-config.xml&quot;) 读取名为 Mybatis-config.xml 的配置文件</span></span><br><span class="line">        &#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;<span class="comment">// 如果 Mybatis-config.xml 文件没有找到，会抛出 FileNotFoundException</span></span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);<span class="comment">// 在这种情况下，捕获这个异常并将其包装在一个 RuntimeException 中重新抛出，以便程序可以适当地处理这个错误。</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// factory.openSession(autoCommit) 使用静态变量 factory 创建并返回一个新的 SqlSession 对象。</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> SqlSession <span class="title function_">openSession</span><span class="params">(<span class="type">boolean</span> autoCommit)</span> &#123;</span><br><span class="line">        <span class="comment">// autoCommit 参数决定了事务是否自动提交。传入 true 表示会话会自动提交事务，传入 false 表示事务需要手动提交。</span></span><br><span class="line">        <span class="keyword">return</span> factory.openSession(autoCommit);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>每个基于 MyBatis 的应用都是以一个 SqlSessionFactory 的实例为核心的，我们可以通过<code>SqlSessionFactory</code>来创建多个新的会话，<code>SqlSession</code>对象，每个会话就相当于我不同的地方登陆一个账号去访问数据库。</p><p><code>MybatisUtils</code> 类封装了 MyBatis 的配置和会话管理。它在静态初始化块中加载 MyBatis 的配置文件，并提供了一个公共静态方法 <code>openSession</code> 用于获取 <code>SqlSession</code> 实例。这样，其他类在需要与数据库交互时可以方便地获取 <code>SqlSession</code>。</p><h2 id="创建实体类"><a href="#创建实体类" class="headerlink" title="创建实体类"></a>创建实体类</h2><p>对于数据库中的表，我们通常是将它读取到 java 的一个实体类当中。</p><p><img src="https://thirty30ww.oss-cn-hangzhou.aliyuncs.com/img/202408291628248.png" alt="image-20240829162816080"></p><p>比如对于这张表，我们创建 src/包名/entity/Student 作为它的实体类，编写代码如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.school.entity;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Data;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> &#123;</span><br><span class="line">    <span class="type">int</span> StudentNo;</span><br><span class="line">    <span class="type">int</span> LoginPwd;</span><br><span class="line">    String StudentName;</span><br><span class="line">    String Sex;</span><br><span class="line">    <span class="type">int</span> GradeID;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Mapper-映射器与接口"><a href="#Mapper-映射器与接口" class="headerlink" title="Mapper 映射器与接口"></a>Mapper 映射器与接口</h2><p>读取实体类肯定需要一个映射规则，比如类中的哪个字段对应数据库中的哪个字段，在查询语句返回结果后，Mybatis就会自动将对应的结果填入到对象的对应字段上。</p><h3 id="Mapper-映射器"><a href="#Mapper-映射器" class="headerlink" title="Mapper 映射器"></a>Mapper 映射器</h3><p>在根目录下重新创建一个mapper文件夹，新建名为<code>SchoolMapper.xml</code>的文件作为我们的映射器，编写代码如下</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="keyword">PUBLIC</span> <span class="string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--namespace就是命名空间，每个Mapper都是唯一的，因此需要用一个命名空间来区分，它还可以用来绑定一个接口--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.school.mapper.SchoolMapper&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 用下面的方法简化之后，可以写为 resultType = Student --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;selectAllStudent&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;com.school.entity.Student&quot;</span>&gt;</span></span><br><span class="line">        select * from student</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><p>我们还可以给类型起一个别名，以简化Mapper的编写，打开 mybatis-config.xml ，在 environments 的上方插入以下代码</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">typeAlias</span> <span class="attr">type</span>=<span class="string">&quot;com.school.entity.Student&quot;</span> <span class="attr">alias</span>=<span class="string">&quot;Student&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br></pre></td></tr></table></figure><p>如果这样还是很麻烦，我们也可以直接让Mybatis去扫描一个包，并将包下的所有类自动起别名（别名为首字母小写的类名）</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;com.school.entity&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="Mapper-接口"><a href="#Mapper-接口" class="headerlink" title="Mapper 接口"></a>Mapper 接口</h3><p>在 mapper 文件中新建名为 SchoolMapper.interface 的文件作为映射器所绑定的接口，编写代码如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.school.mapper;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.school.entity.Student;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">SchoolMapper</span> &#123;</span><br><span class="line">    List&lt;Student&gt; <span class="title function_">selectAllStudent</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>建议将映射器和它的接口同时将其放到同一个包中，作为内部资源</p><p>此时记得要将刚才的UserMapper.xml注册到mybatis-config.xml文件中，<strong>非常重要，此后每编写一个Mapper.xml文件都要注册一次！！！</strong>，在mybatis-config.xml文件更新为如下代码</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 每一个Mapper.XML都需要在Mybatis核心配置文件中注册！--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">&quot;com/school/mapper/SchoolMapper.xml&quot;</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- resource表示是Jar内部的文件 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="在程序中使用我们定义好的映射"><a href="#在程序中使用我们定义好的映射" class="headerlink" title="在程序中使用我们定义好的映射"></a>在程序中使用我们定义好的映射</h2><div class="tabs" id="test2"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test2-1">查询所有学生</button><button type="button" class="tab " data-href="test2-2">运行结果</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test2-1"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.school;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.school.entity.Student;</span><br><span class="line"><span class="keyword">import</span> com.school.mapper.SchoolMapper;</span><br><span class="line"><span class="keyword">import</span> com.school.utils.MybatisUtils;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> (<span class="type">SqlSession</span> <span class="variable">sqlSession</span> <span class="operator">=</span> MybatisUtils.openSession(<span class="literal">true</span>)) &#123;</span><br><span class="line">            <span class="comment">// MybatisUtils.openSession(true) 调用 MybatisUtils 类中的静态方法来获取一个新的 SqlSession 实例，并且事务自动提交（autoCommit 参数为 true）。</span></span><br><span class="line">            <span class="type">SchoolMapper</span> <span class="variable">schoolMapper</span> <span class="operator">=</span> sqlSession.getMapper(SchoolMapper.class);</span><br><span class="line">            <span class="comment">// 通过 sqlSession.getMapper(SchoolMapper.class) 获取 SchoolMapper 接口的实现。SchoolMapper 是一个 MyBatis 的映射器接口，用于定义数据库操作的方法。</span></span><br><span class="line">            List&lt;Student&gt; student = schoolMapper.selectAllStudent();</span><br><span class="line">            <span class="comment">// 调用 schoolMapper.selectAllStudent() 方法执行 SQL 查询，获取所有学生记录。selectAllStudent 方法应该在 SchoolMapper 接口中定义，并对应一个 SQL 查询语句。</span></span><br><span class="line">            student.forEach(System.out::println);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test2-2"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Student(StudentNo=<span class="number">1000</span>, LoginPwd=<span class="number">1241</span>, StudentName=dsaf, Sex=男, GradeID=<span class="number">2</span>)</span><br><span class="line">Student(StudentNo=<span class="number">1001</span>, LoginPwd=<span class="number">1321</span>, StudentName=dfdj, Sex=女, GradeID=<span class="number">2</span>)</span><br><span class="line">Student(StudentNo=<span class="number">1002</span>, LoginPwd=<span class="number">1633</span>, StudentName=fangziye, Sex=女, GradeID=<span class="number">3</span>)</span><br><span class="line">Student(StudentNo=<span class="number">1003</span>, LoginPwd=<span class="number">1645</span>, StudentName=wanlei, Sex=男, GradeID=<span class="number">2</span>)</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><p>将运行结果对比上述 student 表，是不是一模一样呢</p><h1 id="使用注解进行开发"><a href="#使用注解进行开发" class="headerlink" title="使用注解进行开发"></a>使用注解进行开发</h1><p>Mybatis 为我们带来的便捷已经昭然若揭，他就像是一个 JDBC 的升级版，只需要编写对应的映射器并绑定在接口上，其可以通过接口执行我们的 SQL 语句，极大的简化了我们之前JDBC那样的代码编写模式。</p><p>现在，有一个方法能实现无需 XML 映射器配置，而是直接使用注解在接口上进行配置，这是一种现在非常推荐的一种方式。</p><p>现在我们对比一下 XML 映射器编写和直接用注解编写语句的区别</p><div class="tabs" id="test3"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test3-1">XML 映射编写</button><button type="button" class="tab " data-href="test3-2">注解编写</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test3-1"><p>XML 映射文件中</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;addStudent&quot;</span>&gt;</span></span><br><span class="line">    insert into student(StudentNo, Sex) values(#&#123;StudentNo&#125;, #&#123;Sex&#125;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br></pre></td></tr></table></figure><p>对应的接口类中</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">addStudent</span><span class="params">(Student student)</span>;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test3-2"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Insert(&quot;insert into student(StudentNo, Sex) values(#&#123;StudentNo&#125;, #&#123;Sex&#125;)&quot;)</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">addStudent</span><span class="params">(Student student)</span>;</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><p>当然，在将 XML 映射器方法修改为注解开发方法时，我们还需要修改一下配置文件中的映射器注册</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">    - <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">&quot;com.school.mapper.SchoolMapper.xml&quot;</span> /&gt;</span></span><br><span class="line">    + <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">class</span>=<span class="string">&quot;com.school.mapper.MyMapper&quot;</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--  也可以直接注册整个包下的 &lt;package name=&quot;com.test.mapper&quot;/&gt;  --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br></pre></td></tr></table></figure><p>通过直接指定Class，来让Mybatis知道我们这里有一个通过注解实现的映射器。</p><h1 id="增删改查"><a href="#增删改查" class="headerlink" title="增删改查"></a>增删改查</h1><p>下面我们使用注解开发的方式实现对数据库的增删改查功能</p><h2 id="向数据库插入数据"><a href="#向数据库插入数据" class="headerlink" title="向数据库插入数据"></a>向数据库插入数据</h2><p>非常简单</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Insert(&quot;insert into student values(#&#123;StudentNo&#125;, #&#123;LoginPwd&#125;, #&#123;StudentName&#125;, #&#123;Sex&#125;, #&#123;GradeID&#125;)&quot;)</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">addStudent</span><span class="params">(Student student)</span>;</span><br></pre></td></tr></table></figure><p>返回值为 <code>int</code> ，如果插入成功返回成功插入数，如果插入失败返回 0</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">SchoolMapper</span> <span class="variable">schoolMapper</span> <span class="operator">=</span> sqlSession.getMapper(SchoolMapper.class);</span><br><span class="line"><span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> schoolMapper.addStudent(<span class="keyword">new</span> <span class="title class_">Student</span>(<span class="number">1005</span>, <span class="number">1647</span>, <span class="string">&quot;Mike&quot;</span>, <span class="string">&quot;男&quot;</span>, <span class="number">1</span>));</span><br><span class="line">System.out.println(i);</span><br></pre></td></tr></table></figure><p>在 <code>Main</code> 函数中运行，运行结果为 <code>1</code>，说明插入成功</p><p><img src="https://thirty30ww.oss-cn-hangzhou.aliyuncs.com/img/202408301729358.png" alt="image-20240830172930848"></p><p>打开数据库验证，确实插入成功了</p><h2 id="删除数据库中的数据"><a href="#删除数据库中的数据" class="headerlink" title="删除数据库中的数据"></a>删除数据库中的数据</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Delete(&quot;delete from student where StudentNo = #&#123;StudentNo&#125;&quot;)</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">deleteStudentByStudentNo</span><span class="params">(<span class="type">int</span> StudentNo)</span>;</span><br></pre></td></tr></table></figure><p>接下来就是和插入一样操作</p><h2 id="修改数据库中的数据"><a href="#修改数据库中的数据" class="headerlink" title="修改数据库中的数据"></a>修改数据库中的数据</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Update(&quot;UPDATE student SET LoginPwd = #&#123;student.LoginPwd&#125;, StudentName = #&#123;student.StudentName&#125;, Sex = #&#123;student.Sex&#125;, GradeID = #&#123;student.GradeID&#125; WHERE StudentNo = #&#123;studentNo&#125;&quot;)</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">updateStudentByStudentNo</span><span class="params">(<span class="meta">@Param(&quot;studentNo&quot;)</span> <span class="type">int</span> StudentNo, <span class="meta">@Param(&quot;student&quot;)</span> Student student)</span>;</span><br></pre></td></tr></table></figure><p><code>@Param</code> 这个注解是为 SQL 语句中参数赋值而服务的</p><p>当接口函数中存在多个参数时需要添加 <code>@Param</code> ，如果只有一个参数 SQL 语句则可以自动识别出写入的参数是哪个</p><h2 id="查找数据库中的数据"><a href="#查找数据库中的数据" class="headerlink" title="查找数据库中的数据"></a>查找数据库中的数据</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Select(&quot;select * from student&quot;)</span></span><br><span class="line">List&lt;Student&gt; <span class="title function_">selectAllStudent</span><span class="params">()</span>;</span><br></pre></td></tr></table></figure><p>运行结果为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Student(StudentNo=1000, LoginPwd=1241, StudentName=dsaf, Sex=男, GradeID=2)</span><br><span class="line">Student(StudentNo=1001, LoginPwd=6666, StudentName=dfdj, Sex=女, GradeID=2)</span><br><span class="line">Student(StudentNo=1002, LoginPwd=1633, StudentName=fangziye, Sex=女, GradeID=3)</span><br><span class="line">Student(StudentNo=1003, LoginPwd=1645, StudentName=wanlei, Sex=男, GradeID=2)</span><br><span class="line">Student(StudentNo=1004, LoginPwd=1646, StudentName=Jake, Sex=男, GradeID=3)</span><br><span class="line">Student(StudentNo=1005, LoginPwd=1647, StudentName=Mike, Sex=男, GradeID=1)</span><br></pre></td></tr></table></figure><p>符合 student 表中的数据</p>]]></content>
    
    
      
      
    <summary type="html">&lt;details class=&quot;folding-tag&quot; cyan&gt;&lt;summary&gt; 点击查看该文章的更新日志 &lt;/summary&gt;
              &lt;div class=&#39;content&#39;&gt;
              &lt;div class=&quot;timeline b</summary>
      
    
    
    
    <category term="Java 升级之路" scheme="https://thirty30ww.github.io/categories/Java-%E5%8D%87%E7%BA%A7%E4%B9%8B%E8%B7%AF/"/>
    
    <category term="Mybatis" scheme="https://thirty30ww.github.io/categories/Java-%E5%8D%87%E7%BA%A7%E4%B9%8B%E8%B7%AF/Mybatis/"/>
    
    
    <category term="Mybatis" scheme="https://thirty30ww.github.io/tags/Mybatis/"/>
    
  </entry>
  
  <entry>
    <title>XML语言概述</title>
    <link href="https://thirty30ww.github.io/posts/30ba6793.html"/>
    <id>https://thirty30ww.github.io/posts/30ba6793.html</id>
    <published>2024-08-29T14:43:30.000Z</published>
    <updated>2024-09-13T01:04:16.063Z</updated>
    
    <content type="html"><![CDATA[<details class="folding-tag" cyan><summary> 点击查看该文章的更新日志 </summary>              <div class='content'>              <div class="timeline blue"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>更新日志</p></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2024-08-29</p></div></div><div class='timeline-item-content'><ol><li>语言概述</li><li>格式规范</li><li>转义字符</li></ol></div></div></div>              </div>            </details><p>在学习 Mybatis 之前，我们对 XML 需要有初步的学习认识。学习使用 XML 是为了更好的理解 Mybatis，也是为了学习如何使用 XML 来作为 Mybatis 的配置文件</p><h1 id="XML-语言概述"><a href="#XML-语言概述" class="headerlink" title="XML 语言概述"></a>XML 语言概述</h1><p>XML（Extensible Markup Language），中文为可扩展标记语言，XML语言发明最初是用于数据的存储和传输，它可以长这样：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">outer</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>坤坤<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">desc</span>&gt;</span>jinitaimei<span class="tag">&lt;/<span class="name">desc</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">inner</span> <span class="attr">type</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">age</span>&gt;</span>18<span class="tag">&lt;/<span class="name">age</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">sex</span>&gt;</span>男<span class="tag">&lt;/<span class="name">sex</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">inner</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">outer</span>&gt;</span></span><br></pre></td></tr></table></figure><p>如果你学过前端知识，你会发现它和 HTML 简直是一个模子里刻出来的，但用处却是截然不同的。XML 主要用于存放数据，它更像是一个配置文件</p><h1 id="XML-文件的格式规范"><a href="#XML-文件的格式规范" class="headerlink" title="XML 文件的格式规范"></a>XML 文件的格式规范</h1><p>一个XML文件存在以下的格式规范：</p><ul><li>必须存在一个根节点，将所有的子标签全部包含。</li><li>可以但不必须包含一个头部声明（主要是可以设定编码格式）</li><li>所有的标签必须成对出现，可以嵌套但不能交叉嵌套</li><li>区分大小写。</li><li>标签中可以存在属性，比如上面的<code>type=&quot;1&quot;</code>就是<code>inner</code>标签的一个属性，属性的值由单引号或双引号包括。</li></ul><p>XML文件也可以使用注释：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span> ?&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 注释内容 --&gt;</span></span><br></pre></td></tr></table></figure><h1 id="XML-的转义字符"><a href="#XML-的转义字符" class="headerlink" title="XML 的转义字符"></a>XML 的转义字符</h1><p>由于 XML 文件中一些符号比如 “ &gt; “, “ &lt; “ 已经被用作是括号的作用，不能被使用者直接拿来使用，这个时候，我们需要用 XML 的转义字符来替代：</p><p><img src="https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fimg.jxdoc.com%2Fpic%2F28d1ff67caaedd3383c4d358%2F1-332-jpg_6_0_______-505-0-0-505.jpg&amp;refer=http%3A%2F%2Fimg.jxdoc.com&amp;app=2002&amp;size=f9999,10000&amp;q=a80&amp;n=0&amp;g=0n&amp;fmt=jpeg?sec=1639322216&amp;t=88d1ea1adb9cbf1611eaf4c9fa16b8b0" alt="img"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;details class=&quot;folding-tag&quot; cyan&gt;&lt;summary&gt; 点击查看该文章的更新日志 &lt;/summary&gt;
              &lt;div class=&#39;content&#39;&gt;
              &lt;div class=&quot;timeline b</summary>
      
    
    
    
    <category term="Java 升级之路" scheme="https://thirty30ww.github.io/categories/Java-%E5%8D%87%E7%BA%A7%E4%B9%8B%E8%B7%AF/"/>
    
    <category term="Mybatis" scheme="https://thirty30ww.github.io/categories/Java-%E5%8D%87%E7%BA%A7%E4%B9%8B%E8%B7%AF/Mybatis/"/>
    
    
    <category term="XML" scheme="https://thirty30ww.github.io/tags/XML/"/>
    
  </entry>
  
  <entry>
    <title>Lombok</title>
    <link href="https://thirty30ww.github.io/posts/f5c04c86.html"/>
    <id>https://thirty30ww.github.io/posts/f5c04c86.html</id>
    <published>2024-08-29T11:10:54.000Z</published>
    <updated>2024-09-13T01:04:16.063Z</updated>
    
    <content type="html"><![CDATA[<details class="folding-tag" cyan><summary> 点击查看该文章的更新日志 </summary>              <div class='content'>              <div class="timeline blue"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>更新日志</p></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2024-08-29</p></div></div><div class='timeline-item-content'><ol><li>Lombok 简介</li><li>Lombok 配置</li><li>Lombok 使用</li><li>Lombok 原理</li></ol></div></div></div>              </div>            </details><h1 id="Lombok-简介"><a href="#Lombok-简介" class="headerlink" title="Lombok 简介"></a>Lombok 简介</h1><p>我们发现，在以往编写项目时，尤其是在类进行类内部成员字段封装时，需要编写大量的 get / set 方法，这不仅使得我们类定义中充满了 get 和 set 方法，同时如果字段名称发生改变，又要挨个进行修改，甚至当字段变得很多时，构造方法的编写会非常麻烦！</p><p>Lombok是一个Java库，能自动插入编辑器并构建工具，简化Java开发。通过添加注解的方式，不需要为类编写getter或eques方法，同时可以自动化日志变量。</p><p><img src="https://gimg2.baidu.com/image_search/src=http%3A%2F%2Finews.gtimg.com%2Fnewsapp_bt%2F0%2F14004711543%2F1000&amp;refer=http%3A%2F%2Finews.gtimg.com&amp;app=2002&amp;size=f9999,10000&amp;q=a80&amp;n=0&amp;g=0n&amp;fmt=jpeg?sec=1638080575&amp;t=91a3937a42d14fe8129b3761bbdef82c" alt="img"></p><p>我们可以对比一下使用原生方式和小辣椒方式编写类的区别</p><div class="tabs" id="test1"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test1-1">原生方式</button><button type="button" class="tab " data-href="test1-2">小辣椒方式</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Integer sid;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String sex;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">(Integer sid, String name, String sex)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.sid = sid;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.sex = sex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Integer <span class="title function_">getSid</span><span class="params">()</span> &#123;             <span class="comment">//长！</span></span><br><span class="line">        <span class="keyword">return</span> sid;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setSid</span><span class="params">(Integer sid)</span> &#123;     <span class="comment">//到！</span></span><br><span class="line">        <span class="built_in">this</span>.sid = sid;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;             <span class="comment">//爆！</span></span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;    <span class="comment">//炸！</span></span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getSex</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> sex;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setSex</span><span class="params">(String sex)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.sex = sex;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test1-2"><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Getter</span></span><br><span class="line"><span class="meta">@Setter</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> Integer sid;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String sex;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><p>作为一位软件工程师而非码农，我们应该专注于代码的质量和逻辑，而非垄长而繁复，而使用 Lombok ，能以简单的注解形式来简化 java 代码，提高开发人员的开发效率！</p><h1 id="Lombok-的配置"><a href="#Lombok-的配置" class="headerlink" title="Lombok 的配置"></a>Lombok 的配置</h1><h2 id="添加依赖"><a href="#添加依赖" class="headerlink" title="添加依赖"></a>添加依赖</h2><ul><li><p>我们可以通过导入 jar 包的方式配置 Lombok ，<a href="https://projectlombok.org/download">我们需要去官网进行下载</a> 。</p></li><li><p>当然我们还可以通过添加 Maven 依赖导入 Lombok</p><p>​    </p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.18.34<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="安装插件"><a href="#安装插件" class="headerlink" title="安装插件"></a>安装插件</h2><p>然后我们要安装一下Lombok插件，Lombok 的插件叫做 Browse repositories，然而由于 IDEA 默认都安装了 Lombok 的插件，因此直接导入依赖后就可以使用了。</p><h1 id="使用-Lombok"><a href="#使用-Lombok" class="headerlink" title="使用 Lombok"></a>使用 Lombok</h1><p>通过添加 Lombok 注解，简化 java 代码，下面是常用的几种注解</p><ul><li><strong>@Setter</strong> 注解在类或字段，注解在类时为所有字段生成 set 方法，注解在字段上时只为该字段生成 set 方法。</li><li><strong>@Getter</strong> 使用方法同上，区别在于生成的是 get 方法。<ul><li>注意以上两种静态字段不会生成，final字段不会生成set方法。</li></ul></li><li><strong>@ToString</strong> 注解在类，添加toString方法。</li><li><strong>@EqualsAndHashCode</strong> 注解在类，生成hashCode和equals方法。</li><li><strong>@NoArgsConstructor</strong> 注解在类，生成无参的构造方法。</li><li><strong>@Data</strong> 注解在类，生成setter/getter、equals、canEqual、hashCode、toString方法，如为final属性，则不会为该属性生成setter方法。</li></ul><h1 id="Lombok-工作原理"><a href="#Lombok-工作原理" class="headerlink" title="Lombok 工作原理"></a>Lombok 工作原理</h1><p>在Lombok使用的过程中，只需要添加相应的注解，无需再为此写任何代码。自动生成的代码到底是如何产生的呢？</p><p>具体的原理我也不怎么了解，但很显然，就算使用 Lombok 也不可能改变 java 本身的语法，之所以可以这样使用小辣椒简化代码，是因为编译源文件后，会反向编译 class 文件，具体效果如下</p><div class="tabs" id="test2"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test2-1">源文件</button><button type="button" class="tab " data-href="test2-2">小辣椒方式</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test2-1"><p><img src="https://thirty30ww.oss-cn-hangzhou.aliyuncs.com/img/202408291406736.png" alt="image-20240829140622810" style="zoom:67%;" /></p></div><div class="tab-item-content" id="test2-2"><p><img src="https://thirty30ww.oss-cn-hangzhou.aliyuncs.com/img/202408291407354.png" alt="image-20240829140725039" style="zoom: 80%;" /></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Source code recreated from a .class file by IntelliJ IDEA</span></span><br><span class="line"><span class="comment">// (powered by FernFlower decompiler)</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.Generated;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Account</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line">    <span class="keyword">private</span> String gender;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Generated</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getId</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Generated</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Generated</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Generated</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getGender</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>.gender;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Generated</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">equals</span><span class="params">(Object o)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (o == <span class="built_in">this</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (!(o <span class="keyword">instanceof</span> Account)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="type">Account</span> <span class="variable">other</span> <span class="operator">=</span> (Account)o;</span><br><span class="line">            <span class="keyword">if</span> (!other.canEqual(<span class="built_in">this</span>)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">this</span>.getId() != other.getId()) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">this</span>.getAge() != other.getAge()) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                label40: &#123;</span><br><span class="line">                    <span class="type">Object</span> <span class="variable">this$name</span> <span class="operator">=</span> <span class="built_in">this</span>.getName();</span><br><span class="line">                    <span class="type">Object</span> <span class="variable">other$name</span> <span class="operator">=</span> other.getName();</span><br><span class="line">                    <span class="keyword">if</span> (<span class="built_in">this</span>$name == <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">if</span> (other$name == <span class="literal">null</span>) &#123;</span><br><span class="line">                            <span class="keyword">break</span> label40;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">this</span>$name.equals(other$name)) &#123;</span><br><span class="line">                        <span class="keyword">break</span> label40;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="type">Object</span> <span class="variable">this$gender</span> <span class="operator">=</span> <span class="built_in">this</span>.getGender();</span><br><span class="line">                <span class="type">Object</span> <span class="variable">other$gender</span> <span class="operator">=</span> other.getGender();</span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">this</span>$gender == <span class="literal">null</span>) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (other$gender != <span class="literal">null</span>) &#123;</span><br><span class="line">                        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (!<span class="built_in">this</span>$gender.equals(other$gender)) &#123;</span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Generated</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="type">boolean</span> <span class="title function_">canEqual</span><span class="params">(Object other)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> other <span class="keyword">instanceof</span> Account;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Generated</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">hashCode</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">PRIME</span> <span class="operator">=</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">result</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">        result = result * <span class="number">59</span> + <span class="built_in">this</span>.getId();</span><br><span class="line">        result = result * <span class="number">59</span> + <span class="built_in">this</span>.getAge();</span><br><span class="line">        <span class="type">Object</span> <span class="variable">$name</span> <span class="operator">=</span> <span class="built_in">this</span>.getName();</span><br><span class="line">        result = result * <span class="number">59</span> + ($name == <span class="literal">null</span> ? <span class="number">43</span> : $name.hashCode());</span><br><span class="line">        <span class="type">Object</span> <span class="variable">$gender</span> <span class="operator">=</span> <span class="built_in">this</span>.getGender();</span><br><span class="line">        result = result * <span class="number">59</span> + ($gender == <span class="literal">null</span> ? <span class="number">43</span> : $gender.hashCode());</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Generated</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">var10000</span> <span class="operator">=</span> <span class="built_in">this</span>.getId();</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Account(id=&quot;</span> + var10000 + <span class="string">&quot;, name=&quot;</span> + <span class="built_in">this</span>.getName() + <span class="string">&quot;, age=&quot;</span> + <span class="built_in">this</span>.getAge() + <span class="string">&quot;, gender=&quot;</span> + <span class="built_in">this</span>.getGender() + <span class="string">&quot;)&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Generated</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Account</span><span class="params">(<span class="type">int</span> id, String name, <span class="type">int</span> age, String gender)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">        <span class="built_in">this</span>.gender = gender;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Generated</span></span><br><span class="line">    <span class="keyword">public</span> Account <span class="title function_">setId</span><span class="params">(<span class="type">int</span> id)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Generated</span></span><br><span class="line">    <span class="keyword">public</span> Account <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Generated</span></span><br><span class="line">    <span class="keyword">public</span> Account <span class="title function_">setAge</span><span class="params">(<span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Generated</span></span><br><span class="line">    <span class="keyword">public</span> Account <span class="title function_">setGender</span><span class="params">(String gender)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.gender = gender;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div>]]></content>
    
    
      
      
    <summary type="html">&lt;details class=&quot;folding-tag&quot; cyan&gt;&lt;summary&gt; 点击查看该文章的更新日志 &lt;/summary&gt;
              &lt;div class=&#39;content&#39;&gt;
              &lt;div class=&quot;timeline b</summary>
      
    
    
    
    <category term="Java 升级之路" scheme="https://thirty30ww.github.io/categories/Java-%E5%8D%87%E7%BA%A7%E4%B9%8B%E8%B7%AF/"/>
    
    <category term="Lombok" scheme="https://thirty30ww.github.io/categories/Java-%E5%8D%87%E7%BA%A7%E4%B9%8B%E8%B7%AF/Lombok/"/>
    
    
    <category term="Lombok(小辣椒)" scheme="https://thirty30ww.github.io/tags/Lombok-%E5%B0%8F%E8%BE%A3%E6%A4%92/"/>
    
  </entry>
  
  <entry>
    <title>数据库简介与数据库定义语言DDL</title>
    <link href="https://thirty30ww.github.io/posts/f068f0dd.html"/>
    <id>https://thirty30ww.github.io/posts/f068f0dd.html</id>
    <published>2024-08-20T11:02:02.000Z</published>
    <updated>2024-09-13T01:04:16.063Z</updated>
    
    <content type="html"><![CDATA[<details class="folding-tag" cyan><summary> 点击查看该文章的更新日志 </summary>              <div class='content'>              <div class="timeline blue"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>更新日志</p></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2024-8-20</p></div></div><div class='timeline-item-content'><ol><li>数据库简介</li><li>常见数据类型</li><li>常用SQL语句中的DDL</li></ol><p>剩下的我打算以后上课的时候再写，先去自己学学hhh</p></div></div></div>              </div>            </details><h1 id="数据库的简介"><a href="#数据库的简介" class="headerlink" title="数据库的简介"></a>数据库的简介</h1><p><strong>数据库(Database，DB)</strong> 是按照数据结构来组织，存储和管理数据的仓库。</p><p><strong>数据表</strong>是关系数据库的基本存储结构，二维数据表有行(Row),和列(Column)组成，也叫作记录(行)和字段(列)。</p><h1 id="MySQL-常见数据类型"><a href="#MySQL-常见数据类型" class="headerlink" title="MySQL 常见数据类型"></a>MySQL 常见数据类型</h1><div class="note info flat"><p>以下是几种最常见的</p></div><p>整数：<code>int</code><br>浮点数：<code>double</code><br>日期：<code>date datetime timestamp</code><br>字符串：<code>varchar</code> 省空间 <code>char</code> 效率高<br>大数据：<code>blob text</code></p><details class="folding-tag" cyan><summary> 点击查看其他数据类型 </summary>              <div class='content'>              <div class="table-container"><table><thead><tr><th style="text-align:center">分类</th><th style="text-align:center">类型名称</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center">整数类型</td><td style="text-align:center">tinyInt</td><td style="text-align:center">很小的整数</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">smallint</td><td style="text-align:center">小的整数</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">mediumint</td><td style="text-align:center">中等大小的整数</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">int(integer)</td><td style="text-align:center">普通大小的整数</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">bigint</td><td style="text-align:center">大整数</td></tr><tr><td style="text-align:center">小数类型</td><td style="text-align:center">float（m,d）</td><td style="text-align:center">单精度浮点数</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">double（m,d）</td><td style="text-align:center">双精度浮点数</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">decimal（m,d）</td><td style="text-align:center">压缩严格的定点数（小数的精确运算）浪费空间</td></tr><tr><td style="text-align:center">日期类型</td><td style="text-align:center">year</td><td style="text-align:center">YYYY 1901~2155</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">time</td><td style="text-align:center">HH:MM:SS -838:59:59~838:59:59</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">date</td><td style="text-align:center">YYYY-MM-DD 1000-01-01~9999-12-3</td></tr><tr><td style="text-align:center">datetime</td><td style="text-align:center">YYYY-MM-DD</td><td style="text-align:center">HH:MM:SS 1000-01-01 00:00:00~ 9999-12-31 23:59:59</td></tr><tr><td style="text-align:center">timestamp</td><td style="text-align:center">YYYY-MM-DD</td><td style="text-align:center">HH:MM:SS 19700101 00:00:01 UTC~2038-01-19 03:14:07UTC</td></tr><tr><td style="text-align:center">文本、二进制类型</td><td style="text-align:center">CHAR(M)(定长字符串)</td><td style="text-align:center">M为0~255之间的整数</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">VARCHAR(M)（变长字符串）</td><td style="text-align:center">M为0~65535之间的整数</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">TINYBLOB</td><td style="text-align:center">允许长度0~255字节</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">BLOB</td><td style="text-align:center">允许长度0~65535字节</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">MEDIUMBLOB</td><td style="text-align:center">允许长度0~167772150字节</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">LONGBLOB</td><td style="text-align:center">允许长度0~4294967295字节</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">TINYTEXT</td><td style="text-align:center">允许长度0~255字节</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">TEXT</td><td style="text-align:center">允许长度0~65535字节</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">MEDIUMTEXT</td><td style="text-align:center">允许长度0~167772150字节</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">LONGTEXT</td><td style="text-align:center">允许长度0~4294967295字节</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">VARBINARY(M)</td><td style="text-align:center">允许长度0~M个字节的变长字节字符串</td></tr><tr><td style="text-align:center"></td><td style="text-align:center">BINARY(M)</td><td style="text-align:center">允许长度0~M个字节的定长字节字符串</td></tr></tbody></table></div>              </div>            </details><h1 id="SQL概述"><a href="#SQL概述" class="headerlink" title="SQL概述"></a>SQL概述</h1><h2 id="SQL-的概念"><a href="#SQL-的概念" class="headerlink" title="SQL 的概念"></a>SQL 的概念</h2><p><strong>Structed Query Language(结构化查询语言)</strong>，简称  SQL</p><p>程序员或者DBA(数据库管理员)使用SQL和DBSM进行交互，操纵数据库中的资源</p><h2 id="SQL-语句分类"><a href="#SQL-语句分类" class="headerlink" title="SQL 语句分类"></a>SQL 语句分类</h2><ol><li><strong>DDL(Data Definition Language)数据定义语言</strong> 用来定义数据库对象</li><li><strong>DML(Data Manipulation Language)数据操作语言</strong> 用来对数据库中表的数据进行增删改</li><li><strong>DQL(Data Query Language)数据查询语言</strong> 用来查询数据库中表的记录(数据)</li><li><strong>DCL(Data Control Language)数据控制语言</strong>(了解) 用来定义数据库的访问权限和安全级别，及创建用户</li></ol><h2 id="SQL通用语法"><a href="#SQL通用语法" class="headerlink" title="SQL通用语法"></a>SQL通用语法</h2><ol><li>SQL语句可以单行或多行书写</li><li>可使用空格和缩进来增强语句的可读性</li><li>MySQL数据库的SQL语句不区分大小写</li><li>3种注释<ul><li>单行注释:<ul><li>– 注释内容  </li><li>#注释内容(mysql特有) </li></ul></li><li>多行注释: <ul><li>/<em> 注释 </em>/</li></ul></li></ul></li></ol><h1 id="数据定义语言DDL（定义-修改-删除-表-数据库-）"><a href="#数据定义语言DDL（定义-修改-删除-表-数据库-）" class="headerlink" title="数据定义语言DDL（定义 修改 删除 表[数据库]）"></a>数据定义语言DDL（定义 修改 删除 表[数据库]）</h1><h2 id="DDL-操作数据库"><a href="#DDL-操作数据库" class="headerlink" title="DDL 操作数据库"></a>DDL 操作数据库</h2><p>首先要在控制台打开 MySQL</p><p>打开 cmd</p><p>输入 <code>mysql -u你的用户名 -p密码</code>用户名默认是<code>root</code></p><p><img src="https://thirty30ww.oss-cn-hangzhou.aliyuncs.com/img/202408201303382.png" alt="image-20240820130343461" style="zoom:50%;" /></p><h3 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h3><details class="folding-tag" cyan><summary> 创建数据库 </summary>              <div class='content'>              <p>直接创建数据库 <code>create database 数据库名;</code></p><p><img src="https://thirty30ww.oss-cn-hangzhou.aliyuncs.com/img/202408201308221.png" alt="image-20240820130845683" style="zoom:80%;" /></p>              </div>            </details><h3 id="查看数据库"><a href="#查看数据库" class="headerlink" title="查看数据库"></a>查看数据库</h3><details class="folding-tag" cyan><summary> 查看数据库 </summary>              <div class='content'>              <p>查看所有的数据库 <code>show databases;</code></p><p><img src="https://thirty30ww.oss-cn-hangzhou.aliyuncs.com/img/202408201307659.png" alt="image-20240820130733852" style="zoom: 50%;" /></p>              </div>            </details><h3 id="修改数据库"><a href="#修改数据库" class="headerlink" title="修改数据库"></a>修改数据库</h3><details class="folding-tag" cyan><summary> 修改数据库 </summary>              <div class='content'>              <p>修改数据库字符集格式<br><code>alter database 数据库名 default character set 字符集;</code></p><p><img src="https://thirty30ww.oss-cn-hangzhou.aliyuncs.com/img/202408201314067.png" alt="image-20240820131403227" style="zoom: 67%;" /></p>              </div>            </details><h3 id="删除数据库"><a href="#删除数据库" class="headerlink" title="删除数据库"></a>删除数据库</h3><details class="folding-tag" cyan><summary> 删除数据库 </summary>              <div class='content'>              <p><code>drop database 数据库名;</code></p><p><img src="https://thirty30ww.oss-cn-hangzhou.aliyuncs.com/img/202408201316479.png" alt="image-20240820131642061" style="zoom:50%;" /></p>              </div>            </details><h3 id="使用数据库"><a href="#使用数据库" class="headerlink" title="使用数据库"></a>使用数据库</h3><details class="folding-tag" cyan><summary> 使用数据库 </summary>              <div class='content'>              <p>使用 / 切换数据库 <code>use 数据库名;</code></p><p>查看正在使用的数据库 <code>select database();</code></p><p><img src="https://thirty30ww.oss-cn-hangzhou.aliyuncs.com/img/202408201323082.png" alt="image-20240820132305369" style="zoom:50%;" /></p>              </div>            </details><h2 id="DDL-操作数据表"><a href="#DDL-操作数据表" class="headerlink" title="DDL 操作数据表"></a>DDL 操作数据表</h2><h3 id="创建表"><a href="#创建表" class="headerlink" title="创建表"></a>创建表</h3><details class="folding-tag" cyan><summary> 创建表 </summary>              <div class='content'>              <p>在当前使用的数据库中创建数据表 <code>create table 表名(字段名1 字段类型1, 字段名2 字段类型2…);</code></p><p>可以写成以下形式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">create table 表名 (</span><br><span class="line">字段名1 字段类型1,</span><br><span class="line">字段名2 字段类型2</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p><img src="https://thirty30ww.oss-cn-hangzhou.aliyuncs.com/img/202408201338357.png" alt="image-20240820133820983" style="zoom:67%;" /></p>              </div>            </details><h3 id="查看表"><a href="#查看表" class="headerlink" title="查看表"></a>查看表</h3><details class="folding-tag" cyan><summary> 查看表 </summary>              <div class='content'>              <p>查看当前使用数据库中的所有表 <code>show tables;</code></p><p>查看表的结构 <code>desc 表名;</code> (我猜 <code>desc</code> 是 <code>description</code>的意思)</p><p>查看创建表的 SQL 语句 <code>show create table 表名</code></p><p><img src="https://thirty30ww.oss-cn-hangzhou.aliyuncs.com/img/202408201342933.png" alt="image-20240820134254633" style="zoom: 50%;" /></p>              </div>            </details><h3 id="快速创建一个与已有表结构相同的表"><a href="#快速创建一个与已有表结构相同的表" class="headerlink" title="快速创建一个与已有表结构相同的表"></a>快速创建一个与已有表结构相同的表</h3><details class="folding-tag" cyan><summary> 创建相同表 </summary>              <div class='content'>              <p><code>create table 新表名 like 旧表名;</code></p><p><img src="https://thirty30ww.oss-cn-hangzhou.aliyuncs.com/img/202408201349932.png" alt="image-20240820134900084" style="zoom:50%;" /></p>              </div>            </details><h3 id="删除表"><a href="#删除表" class="headerlink" title="删除表"></a>删除表</h3><details class="folding-tag" cyan><summary> 删除表 </summary>              <div class='content'>              <p>直接删除表 <code>drop table 表名;</code></p><p><img src="https://thirty30ww.oss-cn-hangzhou.aliyuncs.com/img/202408201351655.png" alt="image-20240820135113246" style="zoom:67%;" /></p>              </div>            </details><h3 id="修改表"><a href="#修改表" class="headerlink" title="修改表"></a>修改表</h3><details class="folding-tag" cyan><summary> 添加表列 </summary>              <div class='content'>              <p>添加表列 <code>alter table 表名 add 列名 类型;</code></p><p><img src="https://thirty30ww.oss-cn-hangzhou.aliyuncs.com/img/202408201400859.png" alt="image-20240820140058314" style="zoom:50%;" /></p>              </div>            </details><details class="folding-tag" cyan><summary> 修改表列类型 </summary>              <div class='content'>              <p>修改表列类型 <code>alter table 表名 modify 列名 新的类型;</code></p><p><img src="https://thirty30ww.oss-cn-hangzhou.aliyuncs.com/img/202408201403747.png" alt="image-20240820140339604" style="zoom:50%;" /></p>              </div>            </details><details class="folding-tag" cyan><summary> 修改表列名 </summary>              <div class='content'>              <p>修改表列名 <code>alter table 表名 change 旧列名 新列名 类型;</code></p><p><img src="https://thirty30ww.oss-cn-hangzhou.aliyuncs.com/img/202408201406786.png" alt="image-20240820140612275" style="zoom:50%;" /></p>              </div>            </details><details class="folding-tag" cyan><summary> 删除表列名 </summary>              <div class='content'>              <p>删除表列 <code>alter table 表名 drop 列名;</code></p><p><img src="https://thirty30ww.oss-cn-hangzhou.aliyuncs.com/img/202408201408644.png" alt="image-20240820140801946" style="zoom:50%;" /></p>              </div>            </details><h3 id="修改表名"><a href="#修改表名" class="headerlink" title="修改表名"></a>修改表名</h3><details class="folding-tag" cyan><summary> 修改表名 </summary>              <div class='content'>              <p><code>rename table 旧表名 to 新表名;</code></p><p><img src="https://thirty30ww.oss-cn-hangzhou.aliyuncs.com/img/202408201411357.png" alt="image-20240820141113744" style="zoom:50%;" /></p>              </div>            </details>]]></content>
    
    
      
      
    <summary type="html">&lt;details class=&quot;folding-tag&quot; cyan&gt;&lt;summary&gt; 点击查看该文章的更新日志 &lt;/summary&gt;
              &lt;div class=&#39;content&#39;&gt;
              &lt;div class=&quot;timeline b</summary>
      
    
    
    
    <category term="数据库" scheme="https://thirty30ww.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
    <category term="数据库" scheme="https://thirty30ww.github.io/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>钢琴销售的存储策略问题</title>
    <link href="https://thirty30ww.github.io/posts/590bc224.html"/>
    <id>https://thirty30ww.github.io/posts/590bc224.html</id>
    <published>2024-08-13T17:04:18.000Z</published>
    <updated>2024-09-13T01:04:16.063Z</updated>
    
    <content type="html"><![CDATA[<h1 id="钢琴销售的存储策略"><a href="#钢琴销售的存储策略" class="headerlink" title="钢琴销售的存储策略"></a>钢琴销售的存储策略</h1><h2 id="题干"><a href="#题干" class="headerlink" title="题干"></a>题干</h2><p>钢琴销售量很小，商店的库存量不大以免积压资金一家商店根据经验估计，平均每周的钢琴需求为1架</p><p>存贮策略：每周末检查库存量，仅当库存量为零时，才订购3架供下周销售；否则，不订购。</p><p>估计在这种策略下失去销售机会的可能性有多大，以及每周的平均销售量是多少。</p><h2 id="解析"><a href="#解析" class="headerlink" title="解析"></a>解析</h2><p>顾客的到来相互独立，需求量近似服从波松分布，其参数由需求均值为每周1架确定，由此计算需求概率</p><p>动态过程中每周销售量不同，失去销售机会（需求超过库存）的概率不同。 </p><p>可按稳态情况（时间充分长以后）计算失去销售机会的概率和每周的平均销售量。</p><h2 id="状态转移"><a href="#状态转移" class="headerlink" title="状态转移"></a>状态转移</h2><p>$D_n$ 表示第 n 周的需求量，用均值为 1 的波松分布</p><script type="math/tex; mode=display">\begin{split}P(D_n = k) = e^{-1} / k!,(k = 0, 1, 2····)\end{split}</script><p>即</p><div class="table-container"><table><thead><tr><th style="text-align:center">$D_n$</th><th>0</th><th>1</th><th>2</th><th>3</th><th>&gt;3</th></tr></thead><tbody><tr><td style="text-align:center">P</td><td>0.368</td><td>0.368</td><td>0.184</td><td>0.061</td><td>0.019</td></tr></tbody></table></div><p>$S_n$ 表示第 n 周的初库存量 $S_n \in {1, 2, 3}$  </p><p>状态转移规律</p><script type="math/tex; mode=display">S_{n + 1} = \begin{cases}S_n - D_n & D_n \lt S_n \\3 & D_n \ge S_n\end{cases}</script><p>设 $p<em>{ij}$ 为 $S</em>{n} = i$ 并且 $S_{n + 1} = j$ 的概率  $i,j \in {1, 2, 3} $ </p><script type="math/tex; mode=display">\begin{split}& p_{11} = p(S_{n + 1} = 1 | S_n = 1) = P(D_n = 0) = 0.368 \\& p_{12} = p(S_{n + 1} = 2 | S_n = 1) = 0 \\& p_{13} = p(S_{n + 1} = 3 | S_n = 1) = P(D_n \ge 1) = 0.632 \\& ······ \\& p_{33} = p(S_{n + 1} = 3 | S_n = 3) = P(D_n = 0) + P(D_n \ge 3) = 0.448\end{split}</script><p>设 $a_i(n)$ 为第 n 周钢琴数为 i 的概率 $i \in 1, 2, 3$</p><p>另设</p><script type="math/tex; mode=display">\begin{split}& a(n) = \begin{pmatrix}a_1(n) & a_2(n) & a_3(n)\end{pmatrix}\\& P = \begin{pmatrix}p_{11} & p_{12} & p_{13} \\p_{21} & p_{22} & p_{23} \\p_{31} & p_{32} & p_{33} \\\end{pmatrix}=\begin{pmatrix}0.368 & 0 & 0.632 \\0.368 & 0.368 & 0.264 \\0.184 & 0.368 & 0.448\end{pmatrix}\end{split}</script><p>根据题意得</p><script type="math/tex; mode=display">\begin{split}a(n + 1) = a(n)P\end{split}</script><p>稳态概率分布满足 $a(n) = a(n + 1)$</p><p>解得(具体解法见 Python 计算稳态概率)</p><script type="math/tex; mode=display">a(n) = a(n + 1) =  \begin{pmatrix} 0.285 & 0.263 & 0.452 \end{pmatrix}</script><p>前提是当 n 充分大，即$ n \rightarrow \infty$</p><h2 id="Python-计算稳态概率"><a href="#Python-计算稳态概率" class="headerlink" title="Python 计算稳态概率"></a>Python 计算稳态概率</h2><div class="tabs" id="test1"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test1-1">Python代码</button><button type="button" class="tab " data-href="test1-2">运行结果</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="comment"># 定义矩阵，array 创建的是数组，无法进行矩阵乘法，所以这里用 matrix 创建矩阵</span></span><br><span class="line">matrix = np.matrix([[<span class="number">0.368</span>, <span class="number">0</span>, <span class="number">0.632</span>],</span><br><span class="line">                    [<span class="number">0.368</span>, <span class="number">0.368</span>, <span class="number">0.264</span>],</span><br><span class="line">                    [<span class="number">0.184</span>, <span class="number">0.368</span>, <span class="number">0.448</span>]])</span><br><span class="line">vector1 = np.matrix([[<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>]])</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">50</span>):</span><br><span class="line">    vector1 = vector1 * matrix</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;第&#123;&#125;周&#x27;</span>.<span class="built_in">format</span>(i + <span class="number">1</span>))</span><br><span class="line">    <span class="built_in">print</span>(vector1)</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test1-2"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">第1周</span><br><span class="line">[[0.184 0.368 0.448]]</span><br><span class="line">第2周</span><br><span class="line">[[0.285568 0.300288 0.414144]]</span><br><span class="line">······</span><br><span class="line">第48周</span><br><span class="line">[[0.28483488 0.26318076 0.45198436]]</span><br><span class="line">第49周</span><br><span class="line">[[0.28483488 0.26318076 0.45198436]]</span><br><span class="line">第50周</span><br><span class="line">[[0.28483488 0.26318076 0.45198436]]</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h2 id="问题求解"><a href="#问题求解" class="headerlink" title="问题求解"></a>问题求解</h2><p>设</p><script type="math/tex; mode=display">w = \begin{pmatrix}w_1 & w_2 & w_3\end{pmatrix}=\begin{pmatrix}0.285 & 0.263 & 0.452\end{pmatrix}</script><p>第 n 周失去销售机会的概率，n 充分大</p><script type="math/tex; mode=display">\begin{split}P(D_n \gt S_n) & = \sum_{i = 1}^{3}P(D_n \gt i | S_n = i)P(S_n = i) \\& = P(D \gt 1)w_1 + P(D \gt 2)w_2 + P(D \gt 3)w_3 \\& = 0.264 * 0.368 + 0.080 * 0.263 + 0.019 * 0.452 \\& = 0.105\end{split}</script><p>所以，从长期来看，失去销售机会的可能性大约10% </p><p>第 n 周的平均售量 $R_n$, n 充分大</p><script type="math/tex; mode=display">\begin{split}R_n & = \sum_{i = 1}^{3}[\sum_{j = 1}^{i}jP(D_n = j | S_n = i) + iP(D_n \gt i | S_n = i)]P(S_n = i) \\& = 0.632 * 0.285 + 0.896 * 0.263 + 0.977 * 0.452 \\& = 0.857\end{split}</script><p>从长远来看，每周平均销售量为 0.857 架</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;钢琴销售的存储策略&quot;&gt;&lt;a href=&quot;#钢琴销售的存储策略&quot; class=&quot;headerlink&quot; title=&quot;钢琴销售的存储策略&quot;&gt;&lt;/a&gt;钢琴销售的存储策略&lt;/h1&gt;&lt;h2 id=&quot;题干&quot;&gt;&lt;a href=&quot;#题干&quot; class=&quot;headerlink&quot; </summary>
      
    
    
    
    <category term="数学建模" scheme="https://thirty30ww.github.io/categories/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/"/>
    
    <category term="马氏链模型" scheme="https://thirty30ww.github.io/categories/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/%E9%A9%AC%E6%B0%8F%E9%93%BE%E6%A8%A1%E5%9E%8B/"/>
    
    
    <category term="数学建模" scheme="https://thirty30ww.github.io/tags/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/"/>
    
  </entry>
  
  <entry>
    <title>插值问题</title>
    <link href="https://thirty30ww.github.io/posts/27a6c0e.html"/>
    <id>https://thirty30ww.github.io/posts/27a6c0e.html</id>
    <published>2024-08-12T13:23:50.000Z</published>
    <updated>2024-09-13T01:04:16.063Z</updated>
    
    <content type="html"><![CDATA[<h1 id="插值与拟合"><a href="#插值与拟合" class="headerlink" title="插值与拟合"></a>插值与拟合</h1><p>插值问题和拟合问题有所不同</p><p>函数插值与曲线拟合都是要根据一组数据构造一个函数作为近似，由于近似的要求不同，二者在数学方法上是完全不同的．</p><ul><li>若要求所求曲线（面）通过所给所有数据点，就是插值问题</li><li>若不要求曲线（面）通过所有数据点，而是要求它反映对象整体的变化趋势，这就是数据拟合，又称曲线拟合或曲面拟合</li></ul><h1 id="线性插值"><a href="#线性插值" class="headerlink" title="线性插值"></a>线性插值</h1><div class="tabs" id="test1"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test1-1">Python代码</button><button type="button" class="tab " data-href="test1-2">运行结果</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> scipy.interpolate <span class="keyword">import</span> interp1d</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line">x = np.array([<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>])</span><br><span class="line">y = np.array([<span class="number">0</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">4</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建线性插值函数</span></span><br><span class="line">f = interp1d(x, y, kind=<span class="string">&#x27;linear&#x27;</span>)</span><br><span class="line"><span class="comment"># 计算插值结果</span></span><br><span class="line">x_new = np.linspace(<span class="number">0</span>, <span class="number">5</span>, <span class="number">100</span>)</span><br><span class="line">y_new = f(x_new)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘制x和y的图形</span></span><br><span class="line">plt.rcParams[<span class="string">&#x27;font.sans-serif&#x27;</span>] = [<span class="string">&#x27;SimHei&#x27;</span>] <span class="comment"># 显示中文</span></span><br><span class="line"><span class="comment"># 黑体SimHei</span></span><br><span class="line"><span class="comment"># 微软雅黑Microsoft YaHei</span></span><br><span class="line"><span class="comment"># 微软正黑体Microsoft JhengHei</span></span><br><span class="line"><span class="comment"># 新宋体NSimSun</span></span><br><span class="line"><span class="comment"># 新细明体PMingLiU</span></span><br><span class="line"><span class="comment"># 细明体MingLiU</span></span><br><span class="line"><span class="comment"># 标楷体DFKai-SB</span></span><br><span class="line"><span class="comment"># 仿宋FangSong</span></span><br><span class="line"><span class="comment"># 楷体KaiTi</span></span><br><span class="line"><span class="comment"># 仿宋_GB2312FangSong_GB2312</span></span><br><span class="line"><span class="comment"># 楷体_GB2312KaiTi_GB2312</span></span><br><span class="line"></span><br><span class="line">plt.plot(x, y, <span class="string">&#x27;o&#x27;</span>, label=<span class="string">&#x27;原始数据&#x27;</span>)</span><br><span class="line"><span class="comment"># 绘制x_new和y_new的图形</span></span><br><span class="line">plt.plot(x_new, y_new, <span class="string">&#x27;-&#x27;</span>, label=<span class="string">&#x27;线性插值结果&#x27;</span>)</span><br><span class="line"><span class="comment"># 添加图例</span></span><br><span class="line">plt.legend()</span><br><span class="line"><span class="comment"># 显示图形</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test1-2"><p><img src="https://thirty30ww.oss-cn-hangzhou.aliyuncs.com/img/202408121328256.png" alt="image-20240812132802768"></p></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h1 id="多项式插值"><a href="#多项式插值" class="headerlink" title="多项式插值"></a>多项式插值</h1><div class="tabs" id="test2"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test2-1">Python代码</button><button type="button" class="tab " data-href="test2-2">运行结果</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test2-1"><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> scipy.interpolate <span class="keyword">import</span> BarycentricInterpolator</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line">x = np.array([<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>])</span><br><span class="line">y = np.array([<span class="number">0</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">4</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建多项式插值函数</span></span><br><span class="line">f = BarycentricInterpolator(x, y)</span><br><span class="line"><span class="comment"># 计算插值结果</span></span><br><span class="line">x_new = np.linspace(<span class="number">0</span>, <span class="number">5</span>, <span class="number">100</span>)</span><br><span class="line">y_new = f(x_new)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 绘制x和y的图形</span></span><br><span class="line">plt.rcParams[<span class="string">&#x27;font.sans-serif&#x27;</span>] = [<span class="string">&#x27;SimHei&#x27;</span>] <span class="comment"># 显示中文</span></span><br><span class="line">plt.plot(x, y, <span class="string">&#x27;o&#x27;</span>, label=<span class="string">&#x27;原始数据&#x27;</span>)</span><br><span class="line"><span class="comment"># 绘制x_new和y_new的图形</span></span><br><span class="line">plt.plot(x_new, y_new, <span class="string">&#x27;-&#x27;</span>, label=<span class="string">&#x27;多项式插值结果&#x27;</span>)</span><br><span class="line"><span class="comment"># 添加图例</span></span><br><span class="line">plt.legend()</span><br><span class="line"><span class="comment"># 显示图形</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test2-2"><p><img src="https://thirty30ww.oss-cn-hangzhou.aliyuncs.com/img/202408121329044.png" alt="image-20240812132916929"></p></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;插值与拟合&quot;&gt;&lt;a href=&quot;#插值与拟合&quot; class=&quot;headerlink&quot; title=&quot;插值与拟合&quot;&gt;&lt;/a&gt;插值与拟合&lt;/h1&gt;&lt;p&gt;插值问题和拟合问题有所不同&lt;/p&gt;
&lt;p&gt;函数插值与曲线拟合都是要根据一组数据构造一个函数作为近似，由于近似的要求不</summary>
      
    
    
    
    <category term="数学建模" scheme="https://thirty30ww.github.io/categories/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/"/>
    
    <category term="插值问题" scheme="https://thirty30ww.github.io/categories/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/%E6%8F%92%E5%80%BC%E9%97%AE%E9%A2%98/"/>
    
    
    <category term="数学建模" scheme="https://thirty30ww.github.io/tags/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/"/>
    
  </entry>
  
  <entry>
    <title>静脉注射血液浓度问题</title>
    <link href="https://thirty30ww.github.io/posts/569e446b.html"/>
    <id>https://thirty30ww.github.io/posts/569e446b.html</id>
    <published>2024-08-12T10:28:50.000Z</published>
    <updated>2024-09-13T01:04:16.063Z</updated>
    
    <content type="html"><![CDATA[<h1 id="静脉注射血液浓度问题"><a href="#静脉注射血液浓度问题" class="headerlink" title="静脉注射血液浓度问题"></a>静脉注射血液浓度问题</h1><h2 id="题干"><a href="#题干" class="headerlink" title="题干"></a>题干</h2><p><img src="https://thirty30ww.oss-cn-hangzhou.aliyuncs.com/img/202408121032592.png" alt="image-20240812103207455"></p><h2 id="解析"><a href="#解析" class="headerlink" title="解析"></a>解析</h2><p>经过对数据的分析得出时间 <code>t</code> 与浓度 <code>R</code> 大概呈指数关系</p><p>设</p><script type="math/tex; mode=display">c(t) = c_0 e^{-kt}</script><p><code>c、 k</code> 为待定系数，$k &gt; 0$</p><h3 id="Python求解"><a href="#Python求解" class="headerlink" title="Python求解"></a>Python求解</h3><div class="tabs" id="test1"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test1-1">Python代码</button><button type="button" class="tab " data-href="test1-2">运行结果</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> scipy.optimize <span class="keyword">import</span> curve_fit</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">fun</span>(<span class="params">t, k, c</span>): <span class="comment">#定义拟合函数</span></span><br><span class="line">    <span class="keyword">return</span> c * np.exp(k * t)</span><br><span class="line"></span><br><span class="line">t0=np.array([<span class="number">0.25</span>, <span class="number">0.5</span>, <span class="number">1</span>, <span class="number">1.5</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">8</span>])</span><br><span class="line">c0=np.array([<span class="number">19.21</span>, <span class="number">18.15</span>, <span class="number">15.36</span>, <span class="number">14.1</span>, <span class="number">12.89</span>, <span class="number">9.32</span>, <span class="number">7.45</span>, <span class="number">5.24</span>, <span class="number">3.01</span>])</span><br><span class="line">popt, pcov=curve_fit(fun, t0, c0) <span class="comment">#用curve_fit函数拟合</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;k与c0的拟合值为&quot;</span>, popt)</span><br><span class="line"></span><br><span class="line">kk = popt[<span class="number">0</span>]</span><br><span class="line">cc = popt[<span class="number">1</span>]</span><br><span class="line">cyals = fun(t0, kk, cc)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 画图</span></span><br><span class="line">plt.figure(figsize=(<span class="number">8</span>, <span class="number">6</span>)) <span class="comment"># 设置图形的宽度为10英寸，高度为6英寸</span></span><br><span class="line">plt.rc(<span class="string">&#x27;font&#x27;</span>, size=<span class="number">16</span>) <span class="comment"># 设置了所有字体的大小为 16</span></span><br><span class="line">plt.xlabel(<span class="string">&#x27;t(℃)&#x27;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;R(Ω)&#x27;</span>)</span><br><span class="line"></span><br><span class="line">plt.plot(t0, c0, <span class="string">&#x27;*&#x27;</span>)</span><br><span class="line">plt.plot(t0, cyals, <span class="string">&#x27;-&#x27;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test1-2"><p><img src="https://thirty30ww.oss-cn-hangzhou.aliyuncs.com/img/202408121113317.png" alt="image-20240812111342666"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">k与c0的拟合值为 [-0.24197009 20.24132534]</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><p>即</p><script type="math/tex; mode=display">c(t) = 20.24132534 e ^ {-0.24197009t}</script>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;静脉注射血液浓度问题&quot;&gt;&lt;a href=&quot;#静脉注射血液浓度问题&quot; class=&quot;headerlink&quot; title=&quot;静脉注射血液浓度问题&quot;&gt;&lt;/a&gt;静脉注射血液浓度问题&lt;/h1&gt;&lt;h2 id=&quot;题干&quot;&gt;&lt;a href=&quot;#题干&quot; class=&quot;headerli</summary>
      
    
    
    
    <category term="数学建模" scheme="https://thirty30ww.github.io/categories/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/"/>
    
    <category term="拟合问题" scheme="https://thirty30ww.github.io/categories/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/%E6%8B%9F%E5%90%88%E9%97%AE%E9%A2%98/"/>
    
    
    <category term="数学建模" scheme="https://thirty30ww.github.io/tags/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/"/>
    
  </entry>
  
  <entry>
    <title>电阻问题</title>
    <link href="https://thirty30ww.github.io/posts/35449c43.html"/>
    <id>https://thirty30ww.github.io/posts/35449c43.html</id>
    <published>2024-08-12T10:02:46.000Z</published>
    <updated>2024-09-13T01:04:16.063Z</updated>
    
    <content type="html"><![CDATA[<h1 id="电阻问题"><a href="#电阻问题" class="headerlink" title="电阻问题"></a>电阻问题</h1><h2 id="题干"><a href="#题干" class="headerlink" title="题干"></a>题干</h2><p>已知热敏电阻数据</p><div class="table-container"><table><thead><tr><th style="text-align:center">温度t(ºC)</th><th style="text-align:center">20.5</th><th style="text-align:center">32.7</th><th style="text-align:center">51.0</th><th style="text-align:center">73.0</th><th style="text-align:center">95.7</th></tr></thead><tbody><tr><td style="text-align:center">电阻R(Ω)</td><td style="text-align:center">765</td><td style="text-align:center">826</td><td style="text-align:center">873</td><td style="text-align:center">942</td><td style="text-align:center">1032</td></tr></tbody></table></div><p>画出电阻 <code>R</code> 温度 <code>t</code> 的关系图并求出 <code>60ºC</code> 时的电阻 <code>R</code></p><h2 id="解析"><a href="#解析" class="headerlink" title="解析"></a>解析</h2><p>经过对数据的分析得出温度 <code>t</code> 与电阻 <code>R</code> 大概呈线性关系</p><p>则设</p><script type="math/tex; mode=display">R = at + b</script><p>其中 <code>a, b</code> 为待定系数</p><h3 id="Python求解"><a href="#Python求解" class="headerlink" title="Python求解"></a>Python求解</h3><div class="tabs" id="test1"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test1-1">Python代码</button><button type="button" class="tab " data-href="test1-2">运行结果</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line">x0 = np.array([<span class="number">20.5</span>, <span class="number">32.7</span>, <span class="number">51</span>, <span class="number">73</span>, <span class="number">95.7</span>])</span><br><span class="line">y0 = np.array([<span class="number">765</span>, <span class="number">826</span>, <span class="number">873</span>, <span class="number">942</span>, <span class="number">1032</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出多项式各项的系数以及预测值</span></span><br><span class="line">p = np.polyfit(x0, y0, <span class="number">1</span>)  <span class="comment"># 拟合多项式 (1次)</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;拟合一次多项式的从高次幂到低次幂系数分别为:&quot;</span>, p)</span><br><span class="line">yhat = np.polyval(p, [<span class="number">60</span>])  <span class="comment"># 预测</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;预测值分别为：&quot;</span>, yhat)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 画图</span></span><br><span class="line">plt.figure(figsize=(<span class="number">10</span>, <span class="number">6</span>)) <span class="comment"># 设置图形的宽度为10英寸，高度为6英寸</span></span><br><span class="line">plt.rc(<span class="string">&#x27;font&#x27;</span>, size=<span class="number">16</span>) <span class="comment"># 设置了所有字体的大小为 16</span></span><br><span class="line">plt.plot(x0, y0, <span class="string">&#x27;*&#x27;</span>)</span><br><span class="line">plt.plot(x0, np.polyval(p, x0), <span class="string">&#x27;-&#x27;</span>)</span><br><span class="line">plt.xlabel(<span class="string">&#x27;t(℃)&#x27;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;R(Ω)&#x27;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test1-2"><p><img src="https://thirty30ww.oss-cn-hangzhou.aliyuncs.com/img/202408121013897.png" alt="image-20240812101324860" style="zoom: 33%;" /></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">拟合一次多项式的从高次幂到低次幂系数分别为: [  3.39873934 702.09680686]</span><br><span class="line">预测值分别为： [906.02116722]</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h3 id="运行结果分析"><a href="#运行结果分析" class="headerlink" title="运行结果分析"></a>运行结果分析</h3><p>该一次函数为</p><script type="math/tex; mode=display">y = 3.39873934x +  702.09680686</script><p>当 $t = 60$ 时，$ R = 906.02116722 $ </p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;电阻问题&quot;&gt;&lt;a href=&quot;#电阻问题&quot; class=&quot;headerlink&quot; title=&quot;电阻问题&quot;&gt;&lt;/a&gt;电阻问题&lt;/h1&gt;&lt;h2 id=&quot;题干&quot;&gt;&lt;a href=&quot;#题干&quot; class=&quot;headerlink&quot; title=&quot;题干&quot;&gt;&lt;/a&gt;题干&lt;/h</summary>
      
    
    
    
    <category term="数学建模" scheme="https://thirty30ww.github.io/categories/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/"/>
    
    <category term="拟合问题" scheme="https://thirty30ww.github.io/categories/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/%E6%8B%9F%E5%90%88%E9%97%AE%E9%A2%98/"/>
    
    
    <category term="数学建模" scheme="https://thirty30ww.github.io/tags/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/"/>
    
  </entry>
  
  <entry>
    <title>快速上手LaTeX论文编写</title>
    <link href="https://thirty30ww.github.io/posts/63dfc3c1.html"/>
    <id>https://thirty30ww.github.io/posts/63dfc3c1.html</id>
    <published>2024-08-07T18:34:50.000Z</published>
    <updated>2024-09-13T01:04:16.063Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>为了准备全国大学生数学竞赛的论文编写，我决定学习使用LaTeX来写论文。 </p><p>首先说一下选择 LaTeX 编写论文的原因，LaTeX是一个用于创建具有专业外观的文档的工具，它基于所见即所得的思想，这意味着写作者只需要关注文档的内容，而计算机负责将其格式化。用户不再需要像 Microsoft Word 或 LibreOffice Writer 中那样，在页面上用空格来控制格式，而是只需要输入纯文本，让 LaTeX 处理剩下一切。</p><p>LaTex 分离了文档的内容和样式，这意味着我们只需要编写文档的内容，我们就可以轻松更改其外观。</p><h1 id="正式编写"><a href="#正式编写" class="headerlink" title="正式编写"></a>正式编写</h1><h2 id="工具的选择与使用"><a href="#工具的选择与使用" class="headerlink" title="工具的选择与使用"></a>工具的选择与使用</h2><p>闲话少叙，为了写好论文，我们需要先选择一款趁手的工具来编写文章</p><p>我选择使用 <a href="https://cn.overleaf.com/project">Overleaf</a> 这款在线编译工具</p><p><img src="https://thirty30ww.oss-cn-hangzhou.aliyuncs.com/img/202408071906528.png" alt="img"></p><p>该工具可以直接创建一个样例项目，这是我们论文编写的一个好模板</p><p><img src="https://thirty30ww.oss-cn-hangzhou.aliyuncs.com/img/202408071910666.png" alt="img"></p><p>左边可以进行源代码的编写，右边显示对应的模板样式，十分方便</p><p>但是为了更好的学习其语法，我们先创建一个空项目开始学习</p><h2 id="编写第一段-LaTeX"><a href="#编写第一段-LaTeX" class="headerlink" title="编写第一段 LaTeX"></a>编写第一段 LaTeX</h2><p>在空项目中输入以下代码</p><div class="tabs" id="test1"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test1-1">LaTeX代码</button><button type="button" class="tab " data-href="test1-2">运行结果</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">\documentclass</span>&#123;ctexart&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\begin</span>&#123;document&#125;</span><br><span class="line">第一份文件。这是一个简单的例子，没有包括额外的参数或包。</span><br><span class="line"><span class="keyword">\end</span>&#123;document&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test1-2"><p>按下 ctrl + s 对代码进行编译的同时保存代码</p><p><img src="https://thirty30ww.oss-cn-hangzhou.aliyuncs.com/img/202408071931831.png" alt="第一段代码"></p></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><p>下面我们仔细看一下上面这段代码每个部分的功能。</p><p>代码的第一行声明了文档的类型，称为 <em>类 (class)</em>。类控制文档的整体外观，不同类型的文档需要选择不同的类，比如，简历与论文需要不同的类。在这个例子中，类是ctexart,这是一个可以用来编译中文的类</p><p>但是要想成功编译中文，还需要进行以下操作点击左上角的<code>Menu</code>选项，将<code>Settings-Compiler</code>设置为<code>XeLaTeX</code>或<code>LuaLaTeX</code></p><p>然后，在 <code>\begin &#123;document&#125;</code> 和 <code>\end &#123;document&#125;</code> 这两个标记之间写入文档内容。这部分就是文档的 <em>主体 (body)</em>，你可以在此处开始编写和更改文本。要在 PDF 中查看更改的结果，必须首先编译文档。</p><p>在 Overleaf 中只需单击 <strong>重新编译（Recompile）</strong>。还可以单击重新编译按钮旁边的小箭头，并将 “自动编译” 设置为 “开”，这样编辑文件时项目将会自动重新编译。</p><h2 id="文档的序言"><a href="#文档的序言" class="headerlink" title="文档的序言"></a>文档的序言</h2><p>在<code>\begin&#123;document&#125;</code>之前的内容都被称为文档的序言(preamble)。在序言中，可以定义要编写的文档的类型，要编写的语言，要使用的包（稍后会详细介绍）和其他的元素。</p><p>例如：</p><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">\documentclass</span>&#123;ctexart&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\usepackage</span>[12pt, letterpaper]&#123;geometry&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\begin</span>&#123;document&#125;</span><br><span class="line">第一份文件。这是一个简单的例子，没有包括额外的参数或包。</span><br><span class="line"><span class="keyword">\end</span>&#123;document&#125;</span><br></pre></td></tr></table></figure><p>在这个示例中，这两个额外的参数分别设置字体大小（<code>12pt</code>）和纸张大小（<code>letterpaper</code>）。当然，可以使用其他字体大小（<code>9pt</code>，<code>11pt</code>，<code>12pt</code> 等等），但是如果未指定，则默认的字体大小为 <code>10pt</code>。纸张尺寸还可以设置为 <code>a4paper</code> 和 <code>Legalpaper</code>；更多有关 <a href="https://www.overleaf.com/learn/Page_size_and_margins">页面大小和边距</a> 的信息，可以参阅这篇文章。</p><h2 id="添加标题、作者和日期"><a href="#添加标题、作者和日期" class="headerlink" title="添加标题、作者和日期"></a>添加标题、作者和日期</h2><p>在文档的序言中，可以继续添加标题、作者、致谢、日期等内容</p><p>这些内容默认不显示，如果需要显示，可以在主体部分添加<code>\maketitle</code>命令</p><p>在 <code>author</code> 命令的大括号里添加这条命令，可以添加上标和脚注。如果你需要在文章中感谢一个机构，这个功能将非常有用。</p><div class="tabs" id="test2"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test2-1">LaTeX代码</button><button type="button" class="tab " data-href="test2-2">运行结果</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test2-1"><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">\documentclass</span>&#123;ctexart&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\usepackage</span>[12pt, letterpaper]&#123;geometry&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\title</span>&#123;数学建模&#125;</span><br><span class="line"><span class="keyword">\author</span>&#123;thirty30ww <span class="keyword">\thanks</span>&#123;谢谢我的队友&#125;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\begin</span>&#123;document&#125;</span><br><span class="line"><span class="keyword">\maketitle</span></span><br><span class="line">第一份文件。这是一个简单的例子，没有包括额外的参数或包。</span><br><span class="line"><span class="keyword">\end</span>&#123;document&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test2-2"><p><img src="https://thirty30ww.oss-cn-hangzhou.aliyuncs.com/img/202408072036495.png" alt="image-20240807203626830" style="zoom:50%;" /></p></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h1 id="设置中文"><a href="#设置中文" class="headerlink" title="设置中文"></a>设置中文</h1><p>再上面已经说到使用 <code>ctexart</code>类再修改编译器为 <code>XeLaTeX</code> 或 <code>LuaLaTeX</code> 使成功编译中文的方法。</p><p>另外，我们还可以使用 <code>article</code> 类，引入以下包<code>\usepackage&#123;ctex&#125;</code>，也将编译器修改为 <code>XeLaTeX</code> 或 <code>LuaLaTeX</code> 同样可以成功编译中文。</p><p>用上述两种方法改为中文编译后写论文得到的论文格式排版略有不同，具体细节请在使用中慢慢体会。</p><h2 id="添加注释"><a href="#添加注释" class="headerlink" title="添加注释"></a>添加注释</h2><p>注释以<code>%</code>开头，注释的内容不会显示在生成的文档中，可以作为批注来使用</p><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">\documentclass</span>&#123;ctexart&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\usepackage</span>[12pt, letterpaper]&#123;geometry&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\title</span>&#123;数学建模&#125;</span><br><span class="line"><span class="keyword">\author</span>&#123;thirty30ww <span class="keyword">\thanks</span>&#123;谢谢我的队友&#125;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\begin</span>&#123;document&#125;</span><br><span class="line"><span class="keyword">\maketitle</span></span><br><span class="line">第一份文件。这是一个简单的例子，没有包括额外的参数或包。</span><br><span class="line"><span class="comment">% 这一行是评论。它不会打印在文档中。</span></span><br><span class="line"><span class="keyword">\end</span>&#123;document&#125;</span><br></pre></td></tr></table></figure><h2 id="粗体、斜体、下划线"><a href="#粗体、斜体、下划线" class="headerlink" title="粗体、斜体、下划线"></a>粗体、斜体、下划线</h2><ul><li>粗体：<code>\textbf&#123;&#125;</code></li><li>斜体：<code>\textit&#123;&#125;</code></li><li>下划线：<code>\underline&#123;&#125;</code></li><li>强调：<code>\emph&#123;&#125;</code>——如果上下文是斜体则括号内保持非斜体；如果上下文是非斜体则括号内保持斜体。</li></ul><div class="tabs" id="test3"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test3-1">LaTeX代码</button><button type="button" class="tab " data-href="test3-2">运行结果</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test3-1"><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">这里是<span class="keyword">\textbf</span>&#123;粗体&#125;, </span><br><span class="line">这里是<span class="keyword">\textit</span>&#123;斜体&#125;,</span><br><span class="line">这里是<span class="keyword">\underline</span>&#123;下划线&#125;，</span><br><span class="line">这里是<span class="keyword">\emph</span>&#123;强调&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test3-2"><p><img src="https://thirty30ww.oss-cn-hangzhou.aliyuncs.com/img/202408072045316.png" alt="img"></p></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h2 id="添加图像"><a href="#添加图像" class="headerlink" title="添加图像"></a>添加图像</h2><p>添加图像分为三步：</p><ol><li>使用<code>\usepackage&#123;graphicx&#125;</code>命令导入图像包</li><li>设置图像所在目录<code>\graphicspath&#123; &#123;images/&#125; &#125;</code>(如果你的图片存在于images文件夹中,若保存于根目录则跳过这一步)</li><li>在正文通过图像的文件名引入图像<code>\includegraphics&#123;1.png&#125;</code></li></ol><p>首先在根目录中导入图片文件</p><p><img src="https://thirty30ww.oss-cn-hangzhou.aliyuncs.com/img/202408080956798.png" alt="img" style="zoom:50%;" /></p><div class="tabs" id="test4"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test4-1">LaTeX代码</button><button type="button" class="tab " data-href="test4-2">运行结果</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">\documentclass</span>&#123;ctexart&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\usepackage</span>[12pt, letterpaper]&#123;geometry&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\usepackage</span>&#123;graphicx&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\title</span>&#123;数学建模&#125;</span><br><span class="line"><span class="keyword">\author</span>&#123;thirty30ww <span class="keyword">\thanks</span>&#123;谢谢我的队友&#125;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\begin</span>&#123;document&#125;</span><br><span class="line"><span class="keyword">\maketitle</span></span><br><span class="line">这是我喜欢的一张图片</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">\includegraphics</span>[width=1.0<span class="keyword">\linewidth</span>]&#123;1.png&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\end</span>&#123;document&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test4-2"><p><img src="https://thirty30ww.oss-cn-hangzhou.aliyuncs.com/img/202408081003870.png" alt="img" style="zoom: 67%;" /></p></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><p>LATEX 本身不能管理图像，因此需要使用一个 <em>包 (package)</em>。包可用于更改 LaTeX \LaTeXLATEX 文档的默认外观，或实现更多功能。在这个例子中，要实现在文档中添加图片，因此需要使用 <code>graphicx</code> 包。<code>graphicx</code> 包提供了新的命令 <code>\includegraphics&#123;...&#125;</code> 和 <code>\graphicspath&#123;...&#125;</code>。要使用 <code>graphicx</code> 软件包，要现在序言中添加：<code>\usepackage&#123;graphicx&#125;</code></p><p><code>width=1.0\linewidth</code>：这个参数指定了插入图像的宽度。<code>1.0</code> 表示图像的宽度将占据当前文本行宽的 100%（即与当前文本行的宽度相同）。你也可以将这个值设置为小于 1 的数值（如 <code>0.5</code>），以使图像的宽度为当前文本行宽的 50%。此外，<code>\linewidth</code> 是一个相对长度单位，表示当前环境中可用的行宽。</p><h2 id="图像字幕、标签和参考"><a href="#图像字幕、标签和参考" class="headerlink" title="图像字幕、标签和参考"></a>图像字幕、标签和参考</h2><p>为了让给图像添加相应的字幕、标签和参考，可以使用<code>\begin&#123;figure&#125;</code>和<code>\end&#123;figure&#125;</code>为图像建立一个专门的 <code>figure</code> 环境（这也是在文本中插入图像的推荐做法）</p><p>三个重要的命令：</p><ul><li><code>\caption&#123;a nice plot&#125;</code>：此命令为图形设置标题。你可以将这条命令放置在图的上方或下方。</li><li><code>\label&#123;fig:mesh1&#125;</code>：如果你需要在文档中引用图像，请使用这条命令为图像设置标签。标签可以为图像编上号，并与下一个命令结合，对图片进行引用。</li><li><code>\ref&#123;fig:mesh1&#125;</code>：这条命令在编译后将显示替换为被引用图片对应的编号。</li></ul><div class="tabs" id="test5"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test5-1">LaTeX代码</button><button type="button" class="tab " data-href="test5-2">运行结果</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test5-1"><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">\documentclass</span>&#123;ctexart&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\usepackage</span>[12pt, letterpaper]&#123;geometry&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\usepackage</span>&#123;graphicx&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\title</span>&#123;数学建模&#125;</span><br><span class="line"><span class="keyword">\author</span>&#123;thirty30ww <span class="keyword">\thanks</span>&#123;谢谢我的队友&#125;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\begin</span>&#123;document&#125;</span><br><span class="line"><span class="keyword">\maketitle</span></span><br><span class="line">这是我喜欢的一张图片</span><br><span class="line"></span><br><span class="line"><span class="keyword">\begin</span>&#123;figure&#125;[h]</span><br><span class="line">    <span class="keyword">\centering</span></span><br><span class="line">    <span class="keyword">\includegraphics</span>[width=1.0<span class="keyword">\linewidth</span>]&#123;1.png&#125;</span><br><span class="line">    <span class="keyword">\caption</span>&#123;一张好图片&#125;</span><br><span class="line">    <span class="keyword">\label</span>&#123;fig:good picture&#125;</span><br><span class="line"><span class="keyword">\end</span>&#123;figure&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">引用图<span class="keyword">\ref</span>&#123;fig:good picture&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\end</span>&#123;document&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test5-2"><p><img src="https://thirty30ww.oss-cn-hangzhou.aliyuncs.com/img/202408081012463.png" alt="img" style="zoom:67%;" /></p></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h2 id="新建列表"><a href="#新建列表" class="headerlink" title="新建列表"></a>新建列表</h2><h3 id="创建无序列表"><a href="#创建无序列表" class="headerlink" title="创建无序列表"></a>创建无序列表</h3><p>用<code>\begin&#123;itemize&#125;</code>和<code>\end&#123;itemize&#125;</code>创建环境，用<code>\item</code>指定列表项</p><div class="tabs" id="test6"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test6-1">LaTeX代码</button><button type="button" class="tab " data-href="test6-2">运行结果</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test6-1"><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">\documentclass</span>&#123;ctexart&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\usepackage</span>[12pt, letterpaper]&#123;geometry&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\begin</span>&#123;document&#125;</span><br><span class="line"><span class="keyword">\begin</span>&#123;itemize&#125;</span><br><span class="line">  <span class="keyword">\item</span> 各个条目用黑点表示</span><br><span class="line">  <span class="keyword">\item</span> 条目中的文本可以是任何长度</span><br><span class="line"><span class="keyword">\end</span>&#123;itemize&#125;</span><br><span class="line"><span class="keyword">\end</span>&#123;document&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test6-2"><p><img src="https://thirty30ww.oss-cn-hangzhou.aliyuncs.com/img/202408081019288.png" alt="img" style="zoom:67%;" /></p></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h3 id="创建有序列表"><a href="#创建有序列表" class="headerlink" title="创建有序列表"></a>创建有序列表</h3><p>用<code>\begin&#123;enumerate&#125;</code>和<code>\end&#123;enumerate&#125;</code>创建环境，用<code>\item</code>指定列表项</p><div class="tabs" id="test7"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test7-1">LaTeX代码</button><button type="button" class="tab " data-href="test7-2">运行结果</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test7-1"><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">\documentclass</span>&#123;ctexart&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\usepackage</span>[12pt, letterpaper]&#123;geometry&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\begin</span>&#123;document&#125;</span><br><span class="line"><span class="keyword">\begin</span>&#123;enumerate&#125;</span><br><span class="line">  <span class="keyword">\item</span> 这是我们列表中的第一个条目</span><br><span class="line">  <span class="keyword">\item</span> 列表编号随着我们添加的每个条目而增加</span><br><span class="line"><span class="keyword">\end</span>&#123;enumerate&#125;</span><br><span class="line"><span class="keyword">\end</span>&#123;document&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test7-2"><p><img src="https://thirty30ww.oss-cn-hangzhou.aliyuncs.com/img/202408081021464.png" alt="img" style="zoom:67%;" /></p></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h2 id="数学公式"><a href="#数学公式" class="headerlink" title="数学公式"></a>数学公式</h2><p>LATEX 的主要优点之一是易于编写数学表达式，在文章中导入数学公式一共有两种模式</p><ul><li>内联模式：公式插入在文本当中</li><li>展示模式：公式单独以单独的一行展示</li></ul><h3 id="内联模式"><a href="#内联模式" class="headerlink" title="内联模式"></a>内联模式</h3><p>在文本中插入两个<script type="math/tex">`，然后将公式放入两个`</script>中间。</p><div class="tabs" id="test8"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test8-1">LaTeX代码</button><button type="button" class="tab " data-href="test8-2">运行结果</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test8-1"><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">\documentclass</span>&#123;ctexart&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\usepackage</span>[12pt, letterpaper]&#123;geometry&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\begin</span>&#123;document&#125;</span><br><span class="line"></span><br><span class="line">我们在文本内插入 <span class="built_in">$</span>E=mc<span class="built_in">^</span>2<span class="built_in">$</span> 公式</span><br><span class="line"></span><br><span class="line"><span class="keyword">\end</span>&#123;document&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test8-2"><p><img src="https://thirty30ww.oss-cn-hangzhou.aliyuncs.com/img/202408081030060.png" alt="img"></p></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h3 id="展示模式"><a href="#展示模式" class="headerlink" title="展示模式"></a>展示模式</h3><p>展示模式分为两种</p><ol><li>无序号模式：使用<code>\begin&#123;aligned&#125;</code>和 <code>\end&#123;aligned&#125;</code></li><li>有序号模式：使用<code>\begin&#123;align&#125;</code>和<code>\end&#123;align&#125;</code></li></ol><div class="tabs" id="test9"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test9-1">LaTeX代码</button><button type="button" class="tab " data-href="test9-2">运行结果</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test9-1"><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">\documentclass</span>&#123;article&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\usepackage</span>[12pt, letterpaper]&#123;geometry&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\usepackage</span>&#123;amsmath&#125;</span><br><span class="line"><span class="keyword">\usepackage</span>&#123;ctex&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\begin</span>&#123;document&#125;</span><br><span class="line"></span><br><span class="line">这是数学建模学习过程中帆船生产问题的目标函数公式</span><br><span class="line"><span class="built_in">$</span><span class="built_in">$</span></span><br><span class="line"><span class="keyword">\begin</span>&#123;aligned&#125; </span><br><span class="line">Min Z = <span class="keyword">\sum</span><span class="built_in">_</span>&#123;i = 1&#125;<span class="built_in">^</span>&#123;4&#125;[400RP(i) + 450OP(i) + 20INV(i)]</span><br><span class="line"><span class="keyword">\end</span>&#123;aligned&#125;</span><br><span class="line"><span class="built_in">$</span><span class="built_in">$</span></span><br><span class="line"></span><br><span class="line">这是帆船生产问题的约束条件</span><br><span class="line"></span><br><span class="line"><span class="keyword">\begin</span>&#123;align&#125;</span><br><span class="line"><span class="built_in">&amp;</span> RP(i) <span class="keyword">\leq</span> 40,i = 1, 2, 3, 4 <span class="keyword">\\</span> </span><br><span class="line"><span class="built_in">&amp;</span> INV(i) = INV(i - 1) +  RP(i) + OP(i) - DEM(i), i = 1, 2, 3, 4 <span class="keyword">\\</span></span><br><span class="line"><span class="built_in">&amp;</span> INV(0) = 10</span><br><span class="line"><span class="keyword">\end</span>&#123;align&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\end</span>&#123;document&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test9-2"><p><img src="https://thirty30ww.oss-cn-hangzhou.aliyuncs.com/img/202408081044162.png" alt="img"></p></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><p>许多数学公式需要有<code>amsmath</code>包的支持，因此在使用数学公式时最好将其包含在内<code>\usepackage&#123;amsmath&#125;</code></p><p>书写数学公式需要使用其对应的语法来实现，具体语法的学习建议参考<a href="https://blog.csdn.net/ViatorSun/article/details/82826664">超详细 LaTex数学公式_latex公式-CSDN博客</a></p><h2 id="学术论文的基本格式"><a href="#学术论文的基本格式" class="headerlink" title="学术论文的基本格式"></a>学术论文的基本格式</h2><p>数模论文，离不开摘要的编写，以及格式化的章节，分节和段落。而这些，都可以通过 <code>LaTeX</code> 轻松实现格式化</p><h3 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h3><p><code>\begin&#123;abstract&#125;</code> 和 <code>\end&#123;abstract&#125;</code> 之间编写摘要部分，简述论文的主要内容，摘要环境会将文本以特殊格式放在文档顶部。</p><div class="tabs" id="test10"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test10-1">LaTeX代码</button><button type="button" class="tab " data-href="test10-2">运行结果</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test10-1"><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">\documentclass</span>&#123;ctexart&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\usepackage</span>[12pt, letterpaper]&#123;geometry&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\usepackage</span>&#123;graphicx&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\title</span>&#123;数学建模&#125;</span><br><span class="line"><span class="keyword">\author</span>&#123;thirty30ww <span class="keyword">\thanks</span>&#123;谢谢我的队友&#125;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\begin</span>&#123;document&#125;</span><br><span class="line"><span class="keyword">\maketitle</span></span><br><span class="line"><span class="keyword">\begin</span>&#123;abstract&#125;</span><br><span class="line">在这里简述论文的主要内容</span><br><span class="line"><span class="keyword">\end</span>&#123;abstract&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\end</span>&#123;document&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test10-2"><p><img src="https://thirty30ww.oss-cn-hangzhou.aliyuncs.com/img/202408081233117.png" alt="img" style="zoom:67%;" /></p></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h3 id="段落和换行符与下一页"><a href="#段落和换行符与下一页" class="headerlink" title="段落和换行符与下一页"></a>段落和换行符与下一页</h3><p>双回车换行，留一行空白，等于开始了新的一段，段首会自动缩进</p><p><code>\clearpage</code>可以直接结束当前页，之后的内容将写入下一页</p><div class="tabs" id="test11"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test11-1">LaTeX代码</button><button type="button" class="tab " data-href="test11-2">运行结果</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test11-1"><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">\documentclass</span>&#123;ctexart&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\usepackage</span>[12pt, letterpaper]&#123;geometry&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\usepackage</span>&#123;graphicx&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\title</span>&#123;数学建模&#125;</span><br><span class="line"><span class="keyword">\author</span>&#123;thirty30ww <span class="keyword">\thanks</span>&#123;谢谢我的队友&#125;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\begin</span>&#123;document&#125;</span><br><span class="line"><span class="keyword">\maketitle</span></span><br><span class="line"><span class="keyword">\begin</span>&#123;abstract&#125;</span><br><span class="line">在这里简述论文的主要内容</span><br><span class="line"><span class="keyword">\end</span>&#123;abstract&#125;</span><br><span class="line"></span><br><span class="line">既然我们已经写好了摘要，我们就可以开始写第一段了。注意看，当我写了两行文字的时候可以观察到，首行是会自动缩进的</span><br><span class="line"></span><br><span class="line">留一行空白，又是一个新的段落</span><br><span class="line"><span class="keyword">\end</span>&#123;document&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test11-2"><p><img src="https://thirty30ww.oss-cn-hangzhou.aliyuncs.com/img/202408081240620.png" alt="img" style="zoom:50%;" /></p></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h3 id="章节"><a href="#章节" class="headerlink" title="章节"></a>章节</h3><p>以下是主要的章节格式化代码</p><ul><li>章：<code>\chapter&#123;&#125;</code></li><li>节：<code>\section&#123;&#125;</code></li><li>次节：<code>\subsection&#123;&#125;</code></li><li>取消编号的节：<code>\section*&#123;&#125;</code></li></ul><div class="tabs" id="test12"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test12-1">LaTeX代码</button><button type="button" class="tab " data-href="test12-2">运行结果</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test12-1"><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">\documentclass</span>&#123;ctexart&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\usepackage</span>[letterpaper,top=2cm,bottom=2cm,left=3cm,right=3cm,marginparwidth=1.75cm]&#123;geometry&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\usepackage</span>&#123;graphicx&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\title</span>&#123;数学建模&#125;</span><br><span class="line"><span class="keyword">\author</span>&#123;thirty30ww <span class="keyword">\thanks</span>&#123;谢谢我的队友&#125;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\begin</span>&#123;document&#125;</span><br><span class="line"><span class="keyword">\maketitle</span></span><br><span class="line"><span class="keyword">\begin</span>&#123;abstract&#125;</span><br><span class="line">在这里简述论文的主要内容</span><br><span class="line"><span class="keyword">\end</span>&#123;abstract&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\chapter</span>&#123;第一章&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\section</span>&#123;介绍&#125;</span><br><span class="line"></span><br><span class="line">这是第一部分。</span><br><span class="line"></span><br><span class="line">可以介绍论文的题目内容，自己的想法，创新点，说一大堆有的没的的话，最好详略得当，以上都是我瞎编的，为了字数看起来多一点，介绍部分我想写满两行，总觉得内容比较多心里就比较舒坦，好了差不多了，就写到这吧哈哈。</span><br><span class="line"></span><br><span class="line"><span class="keyword">\section</span>&#123;第二节&#125;</span><br><span class="line"></span><br><span class="line">这部分可以写主要内容的引言或者小结，我猜的。和第一部分一样，我需要编一些有的没的的话，来让这点内容看起来饱满好懂一点。</span><br><span class="line"></span><br><span class="line"><span class="keyword">\subsection</span>&#123;第一小节&#125;</span><br><span class="line">就是简单的一个大部分其中包含很多小部分，具体要写些什么我也不知道，总之就是我要写点话在里面</span><br><span class="line"></span><br><span class="line"><span class="keyword">\section</span>*&#123;无编号部分&#125;</span><br><span class="line">这里是无编号部分的内容，以上就简单的构成了一篇论文的基本结构，如果你仔细看了，那十分感谢你能看我bb</span><br><span class="line"><span class="keyword">\end</span>&#123;document&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test12-2"><p><img src="https://thirty30ww.oss-cn-hangzhou.aliyuncs.com/img/202408081255989.png" alt="img" style="zoom: 67%;" /></p></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><p>当然不仅有以上分点，我们还可以继续细分，下面列出了基本的标题深度级别</p><div class="table-container"><table><thead><tr><th style="text-align:center">深度</th><th style="text-align:center">标记</th></tr></thead><tbody><tr><td style="text-align:center">-1</td><td style="text-align:center">\part{part}</td></tr><tr><td style="text-align:center">0</td><td style="text-align:center">\chapter{chapter}</td></tr><tr><td style="text-align:center">1</td><td style="text-align:center">\section{section}</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center">\subsection{subsection}</td></tr><tr><td style="text-align:center">3</td><td style="text-align:center">\subsubsection{subsubsection}</td></tr><tr><td style="text-align:center">4</td><td style="text-align:center">\paragraph{paragraph}</td></tr><tr><td style="text-align:center">5</td><td style="text-align:center">\subparagraph{subparagraph}</td></tr></tbody></table></div><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><h3 id="创建一个无边框的简单表格"><a href="#创建一个无边框的简单表格" class="headerlink" title="创建一个无边框的简单表格"></a>创建一个无边框的简单表格</h3><p>可以先用 <code>\begin&#123;center&#125;</code> 和 <code>\end&#123;center&#125;</code> 创建一个居中的环境，然后再用 <code>\begin&#123;tabular&#125;</code> 和 <code>\end&#123;tabular&#125;</code> 创建表格环境。</p><p>必须为表格环境指定参数。如， <code>&#123; c c c &#125;</code> ——告诉表格有三列，且表格文本居中。也可以用 <code>l</code> 或者 <code>r</code> 表示向左或向右对齐。</p><p>对齐符号 <code>&amp;</code> 可指定表格中的某一项（每行的项数需要少于列数）， <code>\\</code>表示换行。</p><div class="tabs" id="test13"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test13-1">LaTeX代码</button><button type="button" class="tab " data-href="test13-2">运行结果</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test13-1"><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">\documentclass</span>&#123;ctexart&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\usepackage</span>[letterpaper,top=2cm,bottom=2cm,left=3cm,right=3cm,marginparwidth=1.75cm]&#123;geometry&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">\begin</span>&#123;document&#125;</span><br><span class="line"><span class="keyword">\begin</span>&#123;center&#125;</span><br><span class="line"><span class="keyword">\begin</span>&#123;tabular&#125;&#123; c c c &#125;</span><br><span class="line"> 1 <span class="built_in">&amp;</span> 2 <span class="built_in">&amp;</span> 3 <span class="keyword">\\</span></span><br><span class="line"> 4 <span class="built_in">&amp;</span> 5 <span class="built_in">&amp;</span> 6 <span class="keyword">\\</span></span><br><span class="line"> 7 <span class="built_in">&amp;</span> 8 <span class="built_in">&amp;</span> 9</span><br><span class="line"><span class="keyword">\end</span>&#123;tabular&#125;</span><br><span class="line"><span class="keyword">\end</span>&#123;center&#125;</span><br><span class="line"><span class="keyword">\end</span>&#123;document&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test13-2"><p><img src="https://thirty30ww.oss-cn-hangzhou.aliyuncs.com/img/202408081309768.png" alt="img"></p></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h3 id="添加边框"><a href="#添加边框" class="headerlink" title="添加边框"></a>添加边框</h3><p><code>tabular</code> 环境很灵活，你可以在每行每列之间放置分隔线。<code>|</code>表示竖直线，<code>\hline</code>表示水平线</p><p>一些写法</p><ul><li><code>&#123;|c|c|c|&#125;</code>：这声明表中将会有由垂直线分隔的三列。<code>|</code> 符号指定这些列应由垂直线分隔。</li><li><code>\hline</code>：这条命令将插入一条水平线。这个示例中，我们在表格的顶部和底部加入了水平线。<code>\hline</code> 的使用次数没有限制。</li></ul><div class="tabs" id="test14"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test14-1">LaTeX代码</button><button type="button" class="tab " data-href="test14-2">运行结果</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test14-1"><p>样式一</p><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">\documentclass</span>&#123;ctexart&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\usepackage</span>[letterpaper,top=2cm,bottom=2cm,left=3cm,right=3cm,marginparwidth=1.75cm]&#123;geometry&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">\begin</span>&#123;document&#125;</span><br><span class="line"><span class="keyword">\begin</span>&#123;center&#125;</span><br><span class="line"><span class="keyword">\begin</span>&#123;tabular&#125;&#123; |c|c|c| &#125; </span><br><span class="line"> <span class="keyword">\hline</span></span><br><span class="line"> 1 <span class="built_in">&amp;</span> 2 <span class="built_in">&amp;</span> 3 <span class="keyword">\\</span> </span><br><span class="line"> 4 <span class="built_in">&amp;</span> 5 <span class="built_in">&amp;</span> 6 <span class="keyword">\\</span> </span><br><span class="line"> 7 <span class="built_in">&amp;</span> 8 <span class="built_in">&amp;</span> 9 <span class="keyword">\\</span> </span><br><span class="line"> <span class="keyword">\hline</span></span><br><span class="line"><span class="keyword">\end</span>&#123;tabular&#125;</span><br><span class="line"><span class="keyword">\end</span>&#123;center&#125;</span><br><span class="line"><span class="keyword">\end</span>&#123;document&#125;</span><br></pre></td></tr></table></figure><p>样式二</p><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">\documentclass</span>&#123;ctexart&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\usepackage</span>[letterpaper,top=2cm,bottom=2cm,left=3cm,right=3cm,marginparwidth=1.75cm]&#123;geometry&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">\begin</span>&#123;document&#125;</span><br><span class="line"><span class="keyword">\begin</span>&#123;center&#125;</span><br><span class="line"> <span class="keyword">\begin</span>&#123;tabular&#125;&#123;||c c c c||&#125; </span><br><span class="line"> <span class="keyword">\hline</span></span><br><span class="line"> 1列 <span class="built_in">&amp;</span> 2列 <span class="built_in">&amp;</span> 3列 <span class="built_in">&amp;</span> 4列 <span class="keyword">\\</span> [0.5ex] </span><br><span class="line"> <span class="keyword">\hline</span><span class="keyword">\hline</span></span><br><span class="line"> 1 <span class="built_in">&amp;</span> 6 <span class="built_in">&amp;</span> 11 <span class="built_in">&amp;</span> 16 <span class="keyword">\\</span> </span><br><span class="line"> <span class="keyword">\hline</span></span><br><span class="line"> 2 <span class="built_in">&amp;</span> 7 <span class="built_in">&amp;</span> 12 <span class="built_in">&amp;</span> 17 <span class="keyword">\\</span></span><br><span class="line"> <span class="keyword">\hline</span></span><br><span class="line"> 3 <span class="built_in">&amp;</span> 8 <span class="built_in">&amp;</span> 13 <span class="built_in">&amp;</span> 18 <span class="keyword">\\</span></span><br><span class="line"> <span class="keyword">\hline</span></span><br><span class="line"> 4 <span class="built_in">&amp;</span> 9 <span class="built_in">&amp;</span> 14 <span class="built_in">&amp;</span> 19 <span class="keyword">\\</span></span><br><span class="line"> <span class="keyword">\hline</span></span><br><span class="line"> 5 <span class="built_in">&amp;</span> 10 <span class="built_in">&amp;</span> 15 <span class="built_in">&amp;</span> 20 <span class="keyword">\\</span> [1ex] </span><br><span class="line"> <span class="keyword">\hline</span></span><br><span class="line"><span class="keyword">\end</span>&#123;tabular&#125;</span><br><span class="line"><span class="keyword">\end</span>&#123;center&#125;</span><br><span class="line"><span class="keyword">\end</span>&#123;document&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test14-2"><p>对应代码中的两种样式</p><p>样式一</p><p><img src="https://thirty30ww.oss-cn-hangzhou.aliyuncs.com/img/202408081318211.png" alt="img"></p><p>样式二</p><p><img src="https://thirty30ww.oss-cn-hangzhou.aliyuncs.com/img/202408081317859.png" alt="img" style="zoom:67%;" /></p></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><p>对于复杂表格，可以使用<a href="https://www.tablesgenerator.com/">TablesGenerator.com</a>来生成代码。</p><h3 id="标题、标签和引用"><a href="#标题、标签和引用" class="headerlink" title="标题、标签和引用"></a>标题、标签和引用</h3><p>你可以使用与图片几乎相同的方式来为表格添加标题、标签和引用。唯一的区别是，使用 <code>table</code> 环境代替了 <code>figure</code> 环境。</p><div class="tabs" id="test15"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test15-1">LaTeX代码</button><button type="button" class="tab " data-href="test15-2">运行结果</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test15-1"><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">\documentclass</span>&#123;ctexart&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\usepackage</span>[letterpaper,top=2cm,bottom=2cm,left=3cm,right=3cm,marginparwidth=1.75cm]&#123;geometry&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\begin</span>&#123;document&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\begin</span>&#123;table&#125;[h!]</span><br><span class="line"><span class="keyword">\centering</span></span><br><span class="line"> <span class="keyword">\begin</span>&#123;tabular&#125;&#123;||c c c c||&#125; </span><br><span class="line"> <span class="keyword">\hline</span></span><br><span class="line"> 1列 <span class="built_in">&amp;</span> 2列 <span class="built_in">&amp;</span> 3列 <span class="built_in">&amp;</span> 4列 <span class="keyword">\\</span> [0.5ex] </span><br><span class="line"> <span class="keyword">\hline</span><span class="keyword">\hline</span></span><br><span class="line"> 1 <span class="built_in">&amp;</span> 6 <span class="built_in">&amp;</span> 11 <span class="built_in">&amp;</span> 16 <span class="keyword">\\</span> </span><br><span class="line"> <span class="keyword">\hline</span></span><br><span class="line"> 2 <span class="built_in">&amp;</span> 7 <span class="built_in">&amp;</span> 12 <span class="built_in">&amp;</span> 17 <span class="keyword">\\</span></span><br><span class="line"> <span class="keyword">\hline</span></span><br><span class="line"> 3 <span class="built_in">&amp;</span> 8 <span class="built_in">&amp;</span> 13 <span class="built_in">&amp;</span> 18 <span class="keyword">\\</span></span><br><span class="line"> <span class="keyword">\hline</span></span><br><span class="line"> 4 <span class="built_in">&amp;</span> 9 <span class="built_in">&amp;</span> 14 <span class="built_in">&amp;</span> 19 <span class="keyword">\\</span></span><br><span class="line"> <span class="keyword">\hline</span></span><br><span class="line"> 5 <span class="built_in">&amp;</span> 10 <span class="built_in">&amp;</span> 15 <span class="built_in">&amp;</span> 20 <span class="keyword">\\</span> [1ex] </span><br><span class="line"> <span class="keyword">\hline</span></span><br><span class="line"><span class="keyword">\end</span>&#123;tabular&#125;</span><br><span class="line"><span class="keyword">\caption</span>&#123;这里是这张表的名字&#125;</span><br><span class="line"><span class="keyword">\label</span>&#123;表格标签&#125;</span><br><span class="line"><span class="keyword">\end</span>&#123;table&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\end</span>&#123;document&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test15-2"><p><img src="https://thirty30ww.oss-cn-hangzhou.aliyuncs.com/img/202408081326806.png" alt="img" style="zoom:67%;" /></p></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h2 id="添加目录"><a href="#添加目录" class="headerlink" title="添加目录"></a>添加目录</h2><p>要创建目录很简单，在正文中编入 <code>\tableofcontents</code> 命令将为您完成所有工作</p><div class="tabs" id="test16"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test16-1">LaTeX代码</button><button type="button" class="tab " data-href="test16-2">运行结果</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test16-1"><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">\documentclass</span>&#123;ctexart&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\usepackage</span>[letterpaper,top=2cm,bottom=2cm,left=3cm,right=3cm,marginparwidth=1.75cm]&#123;geometry&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\usepackage</span>&#123;graphicx&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\title</span>&#123;数学建模&#125;</span><br><span class="line"><span class="keyword">\author</span>&#123;thirty30ww <span class="keyword">\thanks</span>&#123;谢谢我的队友&#125;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\begin</span>&#123;document&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\maketitle</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">\tableofcontents</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">\begin</span>&#123;abstract&#125;</span><br><span class="line">在这里简述论文的主要内容</span><br><span class="line"><span class="keyword">\end</span>&#123;abstract&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">\section</span>&#123;介绍&#125;</span><br><span class="line"></span><br><span class="line">这是第一部分。</span><br><span class="line"></span><br><span class="line">可以介绍论文的题目内容，自己的想法，创新点，说一大堆有的没的的话，最好详略得当，以上都是我瞎编的，为了字数看起来多一点，介绍部分我想写满两行，总觉得内容比较多心里就比较舒坦，好了差不多了，就写到这吧哈哈。</span><br><span class="line"></span><br><span class="line"><span class="keyword">\section</span>&#123;第二节&#125;</span><br><span class="line"></span><br><span class="line">这部分可以写主要内容的引言或者小结，我猜的。和第一部分一样，我需要编一些有的没的的话，来让这点内容看起来饱满好懂一点。</span><br><span class="line"></span><br><span class="line"><span class="keyword">\subsection</span>&#123;第一小节&#125;</span><br><span class="line">就是简单的一个大部分其中包含很多小部分，具体要写些什么我也不知道，总之就是我要写点话在里面</span><br><span class="line"></span><br><span class="line"><span class="keyword">\section</span>*&#123;无编号部分&#125;</span><br><span class="line">这里是无编号部分的内容，以上就简单的构成了一篇论文的基本结构，如果你仔细看了，那十分感谢你能看我bb</span><br><span class="line"><span class="keyword">\end</span>&#123;document&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test16-2"><p><img src="https://thirty30ww.oss-cn-hangzhou.aliyuncs.com/img/202408081331824.png" alt="img" style="zoom:67%;" /></p></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h2 id="下载文档"><a href="#下载文档" class="headerlink" title="下载文档"></a>下载文档</h2><p>点击此处即可下载！</p><p><img src="https://thirty30ww.oss-cn-hangzhou.aliyuncs.com/img/202408081332437.png" alt="img"></p><h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><p>感谢你阅读完这篇博客，相信你对 <code>LaTex</code> 编写论文的方法已经有了一定的了解。想要熟练应用还得多多实战，发现问题解决问题，多在网上搜索美观的写法，了解各种的快捷键快捷方式。</p><p>恭喜你即将掌握一项新的技能！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;为了准备全国大学生数学竞赛的论文编写，我决定学习使用LaTeX来写论文。 &lt;/p&gt;
&lt;p&gt;首先说一下选择 LaTeX 编写论文的原因，LaT</summary>
      
    
    
    
    <category term="工具使用" scheme="https://thirty30ww.github.io/categories/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/"/>
    
    <category term="LaTeX" scheme="https://thirty30ww.github.io/categories/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/LaTeX/"/>
    
    
    <category term="LaTex" scheme="https://thirty30ww.github.io/tags/LaTex/"/>
    
  </entry>
  
  <entry>
    <title>游泳接力指派问题</title>
    <link href="https://thirty30ww.github.io/posts/521926bf.html"/>
    <id>https://thirty30ww.github.io/posts/521926bf.html</id>
    <published>2024-08-07T15:57:27.000Z</published>
    <updated>2024-09-13T01:04:16.063Z</updated>
    
    <content type="html"><![CDATA[<h1 id="游泳接力指派问题"><a href="#游泳接力指派问题" class="headerlink" title="游泳接力指派问题"></a>游泳接力指派问题</h1><h2 id="题干"><a href="#题干" class="headerlink" title="题干"></a>题干</h2><p>游泳队中 A、B、C、D 四名运动员组成 4x100米混合泳接力队，运动员各种泳姿的成绩如下表所示 （单位：秒）：</p><div class="table-container"><table><thead><tr><th>队员\项目</th><th>自由泳</th><th>蛙泳</th><th>蝶泳</th><th>仰泳</th></tr></thead><tbody><tr><td>A</td><td>56</td><td>74</td><td>61</td><td>63</td></tr><tr><td>B</td><td>63</td><td>69</td><td>65</td><td>71</td></tr><tr><td>C</td><td>57</td><td>77</td><td>63</td><td>67</td></tr><tr><td>D</td><td>55</td><td>76</td><td>62</td><td>62</td></tr></tbody></table></div><p>如何安排 A、B、C、D 四名运动员的泳姿，才最有可能取得好成绩？</p><h2 id="解析"><a href="#解析" class="headerlink" title="解析"></a>解析</h2><p>这是一道01规划问题中的指派问题</p><p>设 $x_{ij}$ 为01变量，等于 0 表示第 i 个人不游第 j 个姿势，等于 1 表示第 i 个人游第 j 个姿势</p><h3 id="目标函数"><a href="#目标函数" class="headerlink" title="目标函数"></a>目标函数</h3><script type="math/tex; mode=display">Min Z = \sum_{i = 1}^{4}\sum_{j = 1}^{4}(c_{ij}x_{ij})</script><h3 id="约束条件"><a href="#约束条件" class="headerlink" title="约束条件"></a>约束条件</h3><script type="math/tex; mode=display">\begin{split}\begin{cases}\sum_{j = 1}^{4}x_{ij} = 1, & i = 1, 2, 3, 4 \\\sum_{i = 1}^{4}x_{ij} = 1, & j = 1, 2, 3, 4 \\x_{ij} = 0,1, & i, j = 1, 2, 3, 4\end{cases}\end{split}</script><p>其中</p><script type="math/tex; mode=display">c =\begin{pmatrix}56 & 74 & 61 & 63 \\63 & 69 & 65 & 71 \\57 & 77 & 63 & 67 \\55 & 76 & 62 & 62 \\\end{pmatrix}</script><h3 id="Python求解"><a href="#Python求解" class="headerlink" title="Python求解"></a>Python求解</h3><div class="tabs" id="test1"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test1-1">Python代码</button><button type="button" class="tab " data-href="test1-2">运行结果</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pulp  <span class="comment"># 导入 pulp 库</span></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 主程序</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    <span class="comment"># 游泳比赛的指派问题 (assignment problem)</span></span><br><span class="line">    <span class="comment"># 1.建立优化问题 AssignLP: 求最小值(LpMinimize)</span></span><br><span class="line">    AssignLP = pulp.LpProblem(<span class="string">&quot;Assignment_problem_for_swimming_relay_race&quot;</span>, sense=pulp.LpMinimize)  <span class="comment"># 定义问题，求最小值</span></span><br><span class="line">    <span class="comment"># 2. 建立变量,rows是行,cols是列</span></span><br><span class="line">    rows = cols = <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">4</span>)</span><br><span class="line">    x = pulp.LpVariable.dicts(<span class="string">&quot;x&quot;</span>, (rows, cols), cat=<span class="string">&quot;Binary&quot;</span>)</span><br><span class="line">    <span class="comment"># 3. 设置目标函数</span></span><br><span class="line">    scoreM = [[<span class="number">56</span>, <span class="number">74</span>, <span class="number">61</span>, <span class="number">63</span>], [<span class="number">63</span>, <span class="number">69</span>, <span class="number">65</span>, <span class="number">71</span>], [<span class="number">57</span>, <span class="number">77</span>, <span class="number">63</span>, <span class="number">67</span>], [<span class="number">55</span>, <span class="number">76</span>, <span class="number">62</span>, <span class="number">62</span>]]</span><br><span class="line">    AssignLP += pulp.lpSum([[x[row][col] * scoreM[row][col] <span class="keyword">for</span> row <span class="keyword">in</span> rows] <span class="keyword">for</span> col <span class="keyword">in</span> cols])</span><br><span class="line">    <span class="comment"># 4. 施加约束</span></span><br><span class="line">    <span class="keyword">for</span> row <span class="keyword">in</span> rows:</span><br><span class="line">        AssignLP += pulp.lpSum([x[row][col] <span class="keyword">for</span> col <span class="keyword">in</span> cols]) == <span class="number">1</span>  <span class="comment"># sum(x(i,j),j=1,4)=1, i=1,4</span></span><br><span class="line">    <span class="keyword">for</span> col <span class="keyword">in</span> cols:</span><br><span class="line">        AssignLP += pulp.lpSum([x[row][col] <span class="keyword">for</span> row <span class="keyword">in</span> rows]) == <span class="number">1</span>  <span class="comment"># sum(x(i,j),i=1,4)=1, j=1,4</span></span><br><span class="line">    <span class="comment"># 5. 求解</span></span><br><span class="line">    AssignLP.solve()</span><br><span class="line">    <span class="comment"># 6. 打印结果</span></span><br><span class="line">    <span class="built_in">print</span>(AssignLP.name)</span><br><span class="line">    member = [<span class="string">&quot;队员A&quot;</span>, <span class="string">&quot;队员B&quot;</span>, <span class="string">&quot;队员C&quot;</span>, <span class="string">&quot;队员D&quot;</span>]</span><br><span class="line">    style = [<span class="string">&quot;自由泳&quot;</span>, <span class="string">&quot;蛙泳&quot;</span>, <span class="string">&quot;蝶泳&quot;</span>, <span class="string">&quot;仰泳&quot;</span>]</span><br><span class="line">    <span class="keyword">if</span> pulp.LpStatus[AssignLP.status] == <span class="string">&quot;Optimal&quot;</span>:  <span class="comment"># 获得最优解</span></span><br><span class="line">        xValue = [v.varValue <span class="keyword">for</span> v <span class="keyword">in</span> AssignLP.variables()]</span><br><span class="line">        <span class="comment"># [0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0]</span></span><br><span class="line">        xOpt = np.array(xValue).reshape((<span class="number">4</span>, <span class="number">4</span>))  <span class="comment"># 将 xValue 格式转换为 4x4 矩阵</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;最佳分配：&quot;</span>)</span><br><span class="line">        <span class="keyword">for</span> row <span class="keyword">in</span> rows:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;&#123;&#125;\t&#123;&#125; 参加项目：&#123;&#125;&quot;</span>.<span class="built_in">format</span>(xOpt[row], member[row], style[np.argmax(xOpt[row])]))</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;预测最好成绩为：&#123;&#125;&quot;</span>.<span class="built_in">format</span>(pulp.value(AssignLP.objective)))</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test1-2"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Assignment_problem_for_swimming_relay_race</span><br><span class="line">最佳分配：</span><br><span class="line">[0. 0. 1. 0.]队员A 参加项目：蝶泳</span><br><span class="line">[0. 1. 0. 0.]队员B 参加项目：蛙泳</span><br><span class="line">[1. 0. 0. 0.]队员C 参加项目：自由泳</span><br><span class="line">[0. 0. 0. 1.]队员D 参加项目：仰泳</span><br><span class="line">预测最好成绩为：249.0</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;游泳接力指派问题&quot;&gt;&lt;a href=&quot;#游泳接力指派问题&quot; class=&quot;headerlink&quot; title=&quot;游泳接力指派问题&quot;&gt;&lt;/a&gt;游泳接力指派问题&lt;/h1&gt;&lt;h2 id=&quot;题干&quot;&gt;&lt;a href=&quot;#题干&quot; class=&quot;headerlink&quot; titl</summary>
      
    
    
    
    <category term="数学建模" scheme="https://thirty30ww.github.io/categories/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/"/>
    
    <category term="01规划" scheme="https://thirty30ww.github.io/categories/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/01%E8%A7%84%E5%88%92/"/>
    
    
    <category term="数学建模" scheme="https://thirty30ww.github.io/tags/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/"/>
    
  </entry>
  
  <entry>
    <title>服装生产问题</title>
    <link href="https://thirty30ww.github.io/posts/fd3a28b9.html"/>
    <id>https://thirty30ww.github.io/posts/fd3a28b9.html</id>
    <published>2024-08-07T14:25:53.000Z</published>
    <updated>2024-09-13T01:04:16.063Z</updated>
    
    <content type="html"><![CDATA[<h1 id="服装生产问题"><a href="#服装生产问题" class="headerlink" title="服装生产问题"></a>服装生产问题</h1><h2 id="题干"><a href="#题干" class="headerlink" title="题干"></a>题干</h2><p>某服装厂可以生产 A、B、C 三种服装，生产不同种类服装需要租用不同设备，设备租金、生产成本、销售价格等指标如下表所示。</p><div class="table-container"><table><thead><tr><th>服装种类</th><th>设备租金</th><th>材料成本</th><th>销售价格</th><th>人工工时</th><th>设备工时</th><th>设备可用工时</th></tr></thead><tbody><tr><td>单位</td><td>（元）</td><td>（元/件）</td><td>（元/件）</td><td>（小时/件）</td><td>（小时/件）</td><td>（小时）</td></tr><tr><td>A</td><td>5000</td><td>280</td><td>400</td><td>5</td><td>3</td><td>300</td></tr><tr><td>B</td><td>2000</td><td>30</td><td>40</td><td>1</td><td>0.5</td><td>300</td></tr><tr><td>C</td><td>2000</td><td>200</td><td>300</td><td>4</td><td>2</td><td>300</td></tr></tbody></table></div><p>如果各类服装的市场需求都足够大，服装厂每月可用人工时为 2000h，那么应该如何安排生产计划使利润最大？</p><h2 id="解析"><a href="#解析" class="headerlink" title="解析"></a>解析</h2><p>设 $x_i$ 为是否生产第 i 种服装，所以 $x_i$ 是01变量。0为不生产，1为生产</p><p>设 $y_i$ 为生产第 i 种服装的数量</p><h3 id="目标函数"><a href="#目标函数" class="headerlink" title="目标函数"></a>目标函数</h3><script type="math/tex; mode=display">Max Z = 120y_1 + 10y_2 + 100y_3 -5000x_1 - 2000x_2 - 2000x_3</script><h3 id="约束条件"><a href="#约束条件" class="headerlink" title="约束条件"></a>约束条件</h3><script type="math/tex; mode=display">\begin{split}\begin{cases}5y_1 + y_2 + 4y_3 \le 2000 \\3y_1 \le 300x_1 \\0.5y_2 \le 300x_2 \\ 2y_3 \le 300x_3 \\0 \le y_1 \le 100 \\0 \le y_2 \le 600 \\0 \le y_3 \le 150\end{cases}\end{split}</script><p>题目并没有直接给出 $y_{i}$ 的取值上限，但可以从设备单件工时与设备可用工时的关系推导出取值上限为 [100, 600, 150]，也可以从单位人工工时与人工可用工时的关系推导出上限 [400, 2000, 500]，最后取较小者为 [100, 600, 150]。Python求解</p><div class="tabs" id="test1"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test1-1">Python代码</button><button type="button" class="tab " data-href="test1-2">代码简化</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pulp      <span class="comment"># 导入 pulp 库</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 主程序</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    <span class="comment"># 固定费用问题(Fixed cost problem)</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;固定费用问题(Fixed cost problem)&quot;</span>)</span><br><span class="line">    <span class="comment"># 1. 固定费用问题(Fixed cost problem), 使用 PuLP 工具包求解</span></span><br><span class="line">    <span class="comment"># (1) 建立优化问题 FixedCostP1: 求最大值(LpMaximize)</span></span><br><span class="line">    FixedCostP1 = pulp.LpProblem(<span class="string">&quot;Fixed_cost_problem_1&quot;</span>, sense=pulp.LpMaximize)  <span class="comment"># 定义问题，求最大值</span></span><br><span class="line">    <span class="comment"># (2) 建立变量</span></span><br><span class="line">    x1 = pulp.LpVariable(<span class="string">&#x27;A&#x27;</span>, cat=<span class="string">&#x27;Binary&#x27;</span>)  <span class="comment"># 定义 x1，0-1变量，是否生产 A 产品</span></span><br><span class="line">    x2 = pulp.LpVariable(<span class="string">&#x27;B&#x27;</span>, cat=<span class="string">&#x27;Binary&#x27;</span>)  <span class="comment"># 定义 x2，0-1变量，是否生产 B 产品</span></span><br><span class="line">    x3 = pulp.LpVariable(<span class="string">&#x27;C&#x27;</span>, cat=<span class="string">&#x27;Binary&#x27;</span>)  <span class="comment"># 定义 x3，0-1变量，是否生产 C 产品</span></span><br><span class="line">    y1 = pulp.LpVariable(<span class="string">&#x27;yieldA&#x27;</span>, lowBound=<span class="number">0</span>, upBound=<span class="number">100</span>, cat=<span class="string">&#x27;Integer&#x27;</span>)  <span class="comment"># 定义 y1，整型变量</span></span><br><span class="line">    y2 = pulp.LpVariable(<span class="string">&#x27;yieldB&#x27;</span>, lowBound=<span class="number">0</span>, upBound=<span class="number">600</span>, cat=<span class="string">&#x27;Integer&#x27;</span>)  <span class="comment"># 定义 y2，整型变量</span></span><br><span class="line">    y3 = pulp.LpVariable(<span class="string">&#x27;yieldC&#x27;</span>, lowBound=<span class="number">0</span>, upBound=<span class="number">150</span>, cat=<span class="string">&#x27;Integer&#x27;</span>)  <span class="comment"># 定义 y3，整型变量</span></span><br><span class="line">    <span class="comment"># (3) 设置目标函数</span></span><br><span class="line">    FixedCostP1 += pulp.lpSum(-<span class="number">5000</span>*x1-<span class="number">2000</span>*x2-<span class="number">2000</span>*x3+<span class="number">120</span>*y1+<span class="number">10</span>*y2+<span class="number">100</span>*y3)  <span class="comment"># 设置目标函数 f(x)</span></span><br><span class="line">    <span class="comment"># (4) 设置约束条件</span></span><br><span class="line">    FixedCostP1 += (<span class="number">5</span>*y1 + y2 + <span class="number">4</span>*y3 &lt;= <span class="number">2000</span>)  <span class="comment"># 不等式约束</span></span><br><span class="line">    FixedCostP1 += (<span class="number">3</span>*y1 - <span class="number">300</span>*x1 &lt;= <span class="number">0</span>)  <span class="comment"># 不等式约束</span></span><br><span class="line">    FixedCostP1 += (<span class="number">0.5</span>*y2 - <span class="number">300</span>*x2 &lt;= <span class="number">0</span>)  <span class="comment"># 不等式约束</span></span><br><span class="line">    FixedCostP1 += (<span class="number">2</span>*y3 - <span class="number">300</span>*x3 &lt;= <span class="number">0</span>)  <span class="comment"># 不等式约束</span></span><br><span class="line">    <span class="comment"># (5) 求解 youcans</span></span><br><span class="line">    FixedCostP1.solve()</span><br><span class="line">    <span class="comment"># (6) 打印结果</span></span><br><span class="line">    <span class="built_in">print</span>(FixedCostP1.name)</span><br><span class="line">    <span class="keyword">if</span> pulp.LpStatus[FixedCostP1.status] == <span class="string">&quot;Optimal&quot;</span>:  <span class="comment"># 获得最优解</span></span><br><span class="line">        <span class="keyword">for</span> v <span class="keyword">in</span> FixedCostP1.variables():  <span class="comment"># youcans</span></span><br><span class="line">            <span class="built_in">print</span>(v.name, <span class="string">&quot;=&quot;</span>, v.varValue)  <span class="comment"># 输出每个变量的最优值</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Youcans F(x) = &quot;</span>, pulp.value(FixedCostP1.objective))  <span class="comment"># 输出最优解的目标函数值</span></span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>运行结果为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Fixed_cost_problem_1</span><br><span class="line">A = 1.0</span><br><span class="line">B = 1.0</span><br><span class="line">C = 1.0</span><br><span class="line">yieldA = 100.0</span><br><span class="line">yieldB = 600.0</span><br><span class="line">yieldC = 150.0</span><br><span class="line">Max F(x) =  24000.0</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test1-2"><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pulp      <span class="comment"># 导入 pulp 库</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 主程序</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    <span class="comment"># 2. 问题同上，PuLP 快捷方法示例</span></span><br><span class="line">    <span class="comment"># (1) 建立优化问题 FixedCostP2: 求最大值(LpMaximize)</span></span><br><span class="line">    FixedCostP2 = pulp.LpProblem(<span class="string">&quot;服装生产问题&quot;</span>, sense=pulp.LpMaximize)  <span class="comment"># 定义问题，求最大值</span></span><br><span class="line">    <span class="comment"># (2) 建立变量</span></span><br><span class="line">    types = [<span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;C&#x27;</span>]  <span class="comment"># 定义产品种类</span></span><br><span class="line">    status = pulp.LpVariable.dicts(<span class="string">&quot;生产决策&quot;</span>, types, cat=<span class="string">&#x27;Binary&#x27;</span>)  <span class="comment"># 定义 0/1 变量，是否生产该产品</span></span><br><span class="line">    yields = pulp.LpVariable.dicts(<span class="string">&quot;生产数量&quot;</span>, types, lowBound=<span class="number">0</span>, upBound=<span class="number">600</span>, cat=<span class="string">&#x27;Integer&#x27;</span>)  <span class="comment"># 定义整型变量</span></span><br><span class="line">    <span class="comment"># (3) 设置目标函数</span></span><br><span class="line">    fixedCost = &#123;<span class="string">&#x27;A&#x27;</span>:<span class="number">5000</span>, <span class="string">&#x27;B&#x27;</span>:<span class="number">2000</span>, <span class="string">&#x27;C&#x27;</span>:<span class="number">2000</span>&#125;  <span class="comment"># 各产品的 固定费用</span></span><br><span class="line">    unitProfit = &#123;<span class="string">&#x27;A&#x27;</span>:<span class="number">120</span>, <span class="string">&#x27;B&#x27;</span>:<span class="number">10</span>, <span class="string">&#x27;C&#x27;</span>:<span class="number">100</span>&#125;  <span class="comment"># 各产品的 单位利润</span></span><br><span class="line">    FixedCostP2 += pulp.lpSum([(yields[i]*unitProfit[i]- status[i]*fixedCost[i]) <span class="keyword">for</span> i <span class="keyword">in</span> types])</span><br><span class="line">    <span class="comment"># (4) 设置约束条件</span></span><br><span class="line">    humanHours = &#123;<span class="string">&#x27;A&#x27;</span>:<span class="number">5</span>, <span class="string">&#x27;B&#x27;</span>:<span class="number">1</span>, <span class="string">&#x27;C&#x27;</span>:<span class="number">4</span>&#125;  <span class="comment"># 各产品的 单位人工工时</span></span><br><span class="line">    machineHours = &#123;<span class="string">&#x27;A&#x27;</span>:<span class="number">3.0</span>, <span class="string">&#x27;B&#x27;</span>:<span class="number">0.5</span>, <span class="string">&#x27;C&#x27;</span>:<span class="number">2.0</span>&#125;  <span class="comment"># 各产品的 单位设备工时</span></span><br><span class="line">    maxHours = &#123;<span class="string">&#x27;A&#x27;</span>:<span class="number">300</span>, <span class="string">&#x27;B&#x27;</span>:<span class="number">300</span>, <span class="string">&#x27;C&#x27;</span>:<span class="number">300</span>&#125;  <span class="comment"># 各产品的 最大设备工时</span></span><br><span class="line">    FixedCostP2 += pulp.lpSum([humanHours[i] * yields[i] <span class="keyword">for</span> i <span class="keyword">in</span> types]) &lt;= <span class="number">2000</span>  <span class="comment"># 不等式约束</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> types:</span><br><span class="line">        FixedCostP2 += (machineHours[i] * yields[i] - status[i]*maxHours[i] &lt;= <span class="number">0</span>)  <span class="comment"># 不等式约束</span></span><br><span class="line">    <span class="comment"># (5) 求解 youcans</span></span><br><span class="line">    FixedCostP2.solve()</span><br><span class="line">    <span class="comment"># (6) 打印结果</span></span><br><span class="line">    <span class="built_in">print</span>(FixedCostP2.name)</span><br><span class="line">    temple = <span class="string">&quot;品种 %(type)s 的决策是：%(status)s，生产数量为：%(yields)d&quot;</span></span><br><span class="line">    <span class="keyword">if</span> pulp.LpStatus[FixedCostP2.status] == <span class="string">&quot;Optimal&quot;</span>:  <span class="comment"># 获得最优解</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> types:</span><br><span class="line">            output = &#123;<span class="string">&#x27;type&#x27;</span>: i,</span><br><span class="line">                      <span class="string">&#x27;status&#x27;</span>: <span class="string">&#x27;同意&#x27;</span> <span class="keyword">if</span> status[i].varValue <span class="keyword">else</span> <span class="string">&#x27;否决&#x27;</span>,</span><br><span class="line">                      <span class="string">&#x27;yields&#x27;</span>: yields[i].varValue&#125;</span><br><span class="line">            <span class="built_in">print</span>(temple % output)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;最大利润 = &quot;</span>, pulp.value(FixedCostP2.objective))  <span class="comment"># 输出最优解的目标函数值</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>: </span><br><span class="line">    main() </span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>运行结果为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">服装生产问题</span><br><span class="line">品种 A 的决策是：同意，生产数量为：100</span><br><span class="line">品种 B 的决策是：同意，生产数量为：600</span><br><span class="line">品种 C 的决策是：同意，生产数量为：150</span><br><span class="line">最大利润 =  24000.0</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;服装生产问题&quot;&gt;&lt;a href=&quot;#服装生产问题&quot; class=&quot;headerlink&quot; title=&quot;服装生产问题&quot;&gt;&lt;/a&gt;服装生产问题&lt;/h1&gt;&lt;h2 id=&quot;题干&quot;&gt;&lt;a href=&quot;#题干&quot; class=&quot;headerlink&quot; title=&quot;题干&quot;&gt;&lt;</summary>
      
    
    
    
    <category term="数学建模" scheme="https://thirty30ww.github.io/categories/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/"/>
    
    <category term="01规划" scheme="https://thirty30ww.github.io/categories/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/01%E8%A7%84%E5%88%92/"/>
    
    
    <category term="数学建模" scheme="https://thirty30ww.github.io/tags/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/"/>
    
  </entry>
  
  <entry>
    <title>投资方案问题</title>
    <link href="https://thirty30ww.github.io/posts/2cd5c3f5.html"/>
    <id>https://thirty30ww.github.io/posts/2cd5c3f5.html</id>
    <published>2024-08-07T13:24:58.000Z</published>
    <updated>2024-09-13T01:04:16.063Z</updated>
    
    <content type="html"><![CDATA[<h1 id="投资方案问题"><a href="#投资方案问题" class="headerlink" title="投资方案问题"></a>投资方案问题</h1><h2 id="题干"><a href="#题干" class="headerlink" title="题干"></a>题干</h2><p>公司有 5 个项目被列入投资计划，各项目的投资额和预期投资收益如下表所示（万元）：</p><div class="table-container"><table><thead><tr><th>项目</th><th>A</th><th>B</th><th>C</th><th>D</th><th>E</th></tr></thead><tbody><tr><td>投资额</td><td>210</td><td>300</td><td>100</td><td>130</td><td>260</td></tr><tr><td>投资收益</td><td>150</td><td>210</td><td>60</td><td>80</td><td>180</td></tr></tbody></table></div><p>公司只有 600万元资金可用于投资，综合考虑各方面因素，需要保证：</p><p>（1）项目 A、B、C 中必须且只能有一项被选中；<br>（2）项目 C、D 中最多只能选中一项；<br>（3）选择项目 E 的前提是项目 A被选中。</p><p>如何在上述条件下，进行投资决策，使收益最大。</p><h2 id="解析"><a href="#解析" class="headerlink" title="解析"></a>解析</h2><p>该问题是一个01规划问题，是一个有条件的互斥决策问题</p><h3 id="决策变量"><a href="#决策变量" class="headerlink" title="决策变量"></a>决策变量</h3><script type="math/tex; mode=display">x_i = \begin{cases}0 & \text{不选择第 i 个项目} \\1 & \text{选择第 i 个项目}\end{cases}</script><h3 id="目标函数"><a href="#目标函数" class="headerlink" title="目标函数"></a>目标函数</h3><script type="math/tex; mode=display">Max Z = 150x_1 + 210x_2 + 60x_3 + 80x_4 + 180x_5</script><h3 id="约束条件"><a href="#约束条件" class="headerlink" title="约束条件"></a>约束条件</h3><script type="math/tex; mode=display">\begin{split}\begin{cases}210x_1 + 300x_2 + 100x_3 + 130x_4 + 260x_5 \le 600 \\x_1 + x_2 + x_3 = 1 \\x_3 + x_4 \le 1 \\x_5 \le x_1 \\x_i = 0, 1, & i = 1,···5\end{cases}\end{split}</script><h3 id="Python求解"><a href="#Python求解" class="headerlink" title="Python求解"></a>Python求解</h3><div class="tabs" id="test1"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="test1-1">Python代码</button><button type="button" class="tab " data-href="test1-2">运行结果</button></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pulp <span class="keyword">as</span> pl</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义问题 LpMaximize 求最大值 LpMinimize 求最小值</span></span><br><span class="line">InvestLP = pl.LpProblem(<span class="string">&quot;投资方案问题&quot;</span>, sense=pl.LpMaximize)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义变量</span></span><br><span class="line">x1 = pl.LpVariable(<span class="string">&quot;A&quot;</span>, cat=<span class="string">&quot;Binary&quot;</span>) <span class="comment"># Binary表示0/1变量，用于解决01规划问题</span></span><br><span class="line">x2 = pl.LpVariable(<span class="string">&quot;B&quot;</span>, cat=<span class="string">&quot;Binary&quot;</span>)</span><br><span class="line">x3 = pl.LpVariable(<span class="string">&quot;C&quot;</span>, cat=<span class="string">&quot;Binary&quot;</span>)</span><br><span class="line">x4 = pl.LpVariable(<span class="string">&quot;D&quot;</span>, cat=<span class="string">&quot;Binary&quot;</span>)</span><br><span class="line">x5 = pl.LpVariable(<span class="string">&quot;E&quot;</span>, cat=<span class="string">&quot;Binary&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加目标函数</span></span><br><span class="line">InvestLP += <span class="number">150</span> * x1 + <span class="number">210</span> * x2 + <span class="number">60</span> * x3 + <span class="number">80</span> * x4 + <span class="number">180</span> * x5</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加约束条件</span></span><br><span class="line">InvestLP += (<span class="number">210</span> * x1 + <span class="number">300</span> * x2 + <span class="number">100</span> * x3 + <span class="number">130</span> * x4 + <span class="number">260</span> * x5 &lt;= <span class="number">600</span>)</span><br><span class="line">InvestLP += (x1 + x2 + x3 == <span class="number">1</span>)</span><br><span class="line">InvestLP += (x3 + x4 &lt;= <span class="number">1</span>)</span><br><span class="line">InvestLP += (x5 &lt;= x1)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 求解</span></span><br><span class="line">InvestLP.solve()</span><br><span class="line"><span class="built_in">print</span>(InvestLP.name)  <span class="comment"># 输出求解状态</span></span><br><span class="line"><span class="comment"># &#x27;Optimal&#x27;: 表示找到最优解。</span></span><br><span class="line"><span class="comment"># &#x27;Infeasible&#x27;: 表示问题不可行，没有满足所有约束的解。</span></span><br><span class="line"><span class="comment"># &#x27;Unbounded&#x27;: 表示问题无界，目标函数可以无限增加或减少。</span></span><br><span class="line"><span class="comment"># &#x27;Not Solved&#x27;: 表示问题未解决，可能是由于某些原因未能找到解。</span></span><br><span class="line"><span class="comment"># &#x27;Feasible&#x27;: 表示找到了一个可行解，但不是最优解。</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Status youcans:&quot;</span>, pl.LpStatus[InvestLP.status])  <span class="comment"># 输出求解状态</span></span><br><span class="line"><span class="keyword">for</span> v <span class="keyword">in</span> InvestLP.variables():</span><br><span class="line">    <span class="built_in">print</span>(v.name, <span class="string">&quot;=&quot;</span>, v.varValue)  <span class="comment"># 输出每个变量的最优值</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Max f(x) =&quot;</span>, pl.value(InvestLP.objective))  <span class="comment"># 输出最优解的目标函数值</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="test1-2"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">投资方案问题</span><br><span class="line">Status youcans: Optimal</span><br><span class="line">A = 1.0</span><br><span class="line">B = 0.0</span><br><span class="line">C = 0.0</span><br><span class="line">D = 1.0</span><br><span class="line">E = 1.0</span><br><span class="line">Max f(x) = 410.0</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;投资方案问题&quot;&gt;&lt;a href=&quot;#投资方案问题&quot; class=&quot;headerlink&quot; title=&quot;投资方案问题&quot;&gt;&lt;/a&gt;投资方案问题&lt;/h1&gt;&lt;h2 id=&quot;题干&quot;&gt;&lt;a href=&quot;#题干&quot; class=&quot;headerlink&quot; title=&quot;题干&quot;&gt;&lt;</summary>
      
    
    
    
    <category term="数学建模" scheme="https://thirty30ww.github.io/categories/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/"/>
    
    <category term="01规划" scheme="https://thirty30ww.github.io/categories/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/01%E8%A7%84%E5%88%92/"/>
    
    
    <category term="数学建模" scheme="https://thirty30ww.github.io/tags/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/"/>
    
  </entry>
  
</feed>
